<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自主意识</title>
      <link href="/2022/05/13/science/%E8%87%AA%E4%B8%BB%E6%84%8F%E8%AF%86/"/>
      <url>/2022/05/13/science/%E8%87%AA%E4%B8%BB%E6%84%8F%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="意识"><a href="#意识" class="headerlink" title="意识"></a>意识</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li>意识<ul><li>认知能力</li><li>情感能力</li><li>自由意志</li></ul></li><li>潜意识</li></ul><h3 id="认知能力"><a href="#认知能力" class="headerlink" title="认知能力"></a>认知能力</h3><ul><li>从逻辑角度<ul><li>被动能力</li></ul></li><li>从感知角度<ul><li>主动能力</li><li>认知的时间至少0.2s以上，根据信息的复杂度来决定</li></ul></li></ul><blockquote><p>为什么人在认知的过程不会出现机器人卡顿现象？</p></blockquote><h4 id="色觉误差实验"><a href="#色觉误差实验" class="headerlink" title="色觉误差实验"></a>色觉误差实验</h4><ul><li>倡导者<ul><li>下条信甫</li><li>神谷之康</li></ul></li><li>实验过程<ul><li>让被测试者看到第一张颜色卡为红色，电流刺激人工盲点(控制视觉的神经)0.2秒后，把红色卡片换乘绿色卡片。点击之后实验者都说看到了绿色</li></ul></li><li>实验结论<ul><li>意识是出现在个体感知外界环境一段时间(大概零点几秒的时间)之后的不是在感知的过程同时产生的。</li><li></li><li>意识把未来的信息填补到了过去的一段记忆之中</li><li>用未来信息填补过去的记忆,让个体觉得自己的意识反应的更快,大脑有一个篡改记忆的功能,让思维看起来更加连贯，用意识把未来的信息填补到过去的一段记忆之中</li></ul></li></ul><h3 id="情感能力"><a href="#情感能力" class="headerlink" title="情感能力"></a>情感能力</h3><ul><li>情感一定是被动的</li><li>情感是个体对客观事物的一种心理反应</li></ul><h3 id="自由意志"><a href="#自由意志" class="headerlink" title="自由意志"></a>自由意志</h3><ul><li>人物<ul><li>本杰明 - 贝利特</li><li>被称为人类智慧领域的先驱</li></ul></li><li>实验目的<ul><li>动手指的意识和动作,是先有意识然后再有动手指动作</li></ul></li><li>实验过程</li></ul><blockquote><p>大脑安装一个可以检测大脑传输到手指信号的电极装置，实验者测试的时候看着一个时钟，自己可决定什么时候动手指</p><p>实验统计三个时间：</p><ul><li><p>大脑传输信号的时间</p></li><li><p>手指动作时间</p></li><li><p>内心的决定手指动作的时间（自由意志的时间）</p></li></ul></blockquote><ul><li><p>实验结果</p><ul><li>大脑传输一个信号，当手指头动作产生之后，内心产生了动手指的决定。</li><li>意识滞后于脑信号发出0.35秒之后</li></ul></li><li><p>结论</p><ul><li>我们要做的事情不是当下决定的而是0.3S之前就已经决定好，剩下的都是个体通过叙述等形式表达出来的</li></ul></li><li><p>思考</p><ul><li>下决定的指令不是意识发出来的,那是由谁来发出的信号呢？==潜意识==</li></ul></li><li><p>自由意识总结</p><ul><li>身体控制是潜意识在控制,而不是肢体控制。</li><li>自由意识是为了消除延迟产生的假象</li><li>==自由意识==有可能不是个体行为的原因,而是==行为的结果==</li></ul></li></ul><h3 id="意识如何产生的"><a href="#意识如何产生的" class="headerlink" title="意识如何产生的"></a>意识如何产生的</h3><ul><li><p>裂脑实验</p><ul><li>裂脑者都有妄想症</li></ul></li><li><p>意识的诞生</p><ul><li>记忆的存在产生了意识</li></ul></li></ul><h2 id="自主意识"><a href="#自主意识" class="headerlink" title="自主意识"></a>自主意识</h2><ul><li>消除违和感,个人意识的决策者,并总能为自己的行为给出一个理由解释</li><li>意识具有记忆功能</li><li>对个体的行为赋予不同层次的情感，通过筛选把最重要的记下来其他抛弃掉。<ul><li>情感记忆最终会被人深刻留在意识中<ul><li>情节记忆<ul><li>个体会把一件事情的时间、地点、人物和情感联系在一起，这样就容易赋予情感记忆。这样的记忆才会很容记住</li><li>大猩猩有情感记忆</li></ul></li></ul></li><li>无情感、机械的记忆是短暂的、很容易忘记<ul><li>机器人会记住所有做过的事情，作为数据累计。但不会赋予情感，进而无法对做过的事情进行排名</li><li>人工智能的难点，无法让机器人赋予情感</li></ul></li><li>人的情感是最丰富的<ul><li>人的记忆力最好，所以人的智商也是最高</li><li>人的意识能把情感赋予到每一个行动上</li></ul></li></ul></li></ul><blockquote><p>两个人没有感情了，不是两个人感情变淡了，也不是彼此没有感情了。而是两个人之间没有记忆，没有共同的回忆了。</p></blockquote><h1 id="潜意识"><a href="#潜意识" class="headerlink" title="潜意识"></a>潜意识</h1><ul><li><p>被动意识</p><ul><li>身体的管理者可能不是自己控制而是潜意识</li></ul></li><li><p>集体潜意识</p><ul><li>潜意识没有核心</li><li>潜意识具有多重人格，意识是单一人格。意识负责观察并赋予一个理由，是一个察言观色并给出合理解释的功能</li></ul></li><li><p>潜意识已经存在千年</p></li></ul><h2 id="被动意识假说"><a href="#被动意识假说" class="headerlink" title="被动意识假说"></a>被动意识假说</h2><ul><li>佛教中的意识<ul><li><strong>无我</strong><ul><li><code>我</code>是不存在，我的==主观意识==是不存在的</li></ul></li><li><strong>非我</strong><ul><li>我所做的决定不是我自己做的，而是集体潜意识做的</li></ul></li></ul></li><li>道教<ul><li><strong>无为</strong><ul><li>不要刻意去做一件事情,因为不存在刻意做一件事情。</li><li>你所做的任何努力，都是在顺应自然，顺应<code>道</code>的意识</li></ul></li></ul></li></ul><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul><li>永远不要为自己做的决定而后悔,它不是由你决定的，你只是对他做出一个解释而已</li><li>人生要充实，不是取决于你做了多少事情，而在于你==主动==的做了什么事情</li></ul>]]></content>
      
      
      <categories>
          
          <category> 科普文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 意识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DynamicProgramming</title>
      <link href="/2022/05/13/algorithm/DynamicProgramming/"/>
      <url>/2022/05/13/algorithm/DynamicProgramming/</url>
      
        <content type="html"><![CDATA[<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><ul><li><p>核心</p><ul><li>canSum    –&gt; Decision Problem</li><li>howSum  –&gt; Combinatoric Problem</li><li>bestSum  –&gt; Optimization Problem</li></ul></li><li><p>技巧</p><ul><li>Memoization(缓存)</li><li>Tabulation(制表)<ul><li>visualize the problem as a table</li><li>size the table based on  the  inputs</li><li>initialize the table with default values</li><li>seed the trivial answer  into the table</li><li>iterate through the table</li><li>fill futher positions based on the current position</li></ul></li></ul></li><li><p>应用</p><ul><li>Fibnacci</li><li>gridTraveler</li><li>TargetSum<ul><li>canSum</li><li>howSum</li><li>bestSum</li></ul></li><li>Construct<ul><li>canConstruct</li><li>countConstruct</li><li>allConstruct</li></ul></li></ul></li></ul><h1 id="应用实现"><a href="#应用实现" class="headerlink" title="应用实现"></a>应用实现</h1><h2 id="斐波那契"><a href="#斐波那契" class="headerlink" title="斐波那契"></a>斐波那契</h2><ul><li>代码实现</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    table<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        table<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        table<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> table<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//8</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//13</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//21</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//12586269025</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="网格旅行者"><a href="#网格旅行者" class="headerlink" title="网格旅行者"></a>网格旅行者</h1><ul><li>代码实现</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">gridTraveler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment">// .fill(Array(n + 1));</span>        <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    table<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> current <span class="token operator">=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;=</span> m<span class="token punctuation">)</span> table<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> current<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> current<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> table<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">gridTraveler</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">gridTraveler</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//3</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">gridTraveler</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//3</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">gridTraveler</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//6</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">gridTraveler</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2333606220</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="canSum"><a href="#canSum" class="headerlink" title="canSum"></a>canSum</h1><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">canSum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">targetSum<span class="token punctuation">,</span>numbers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>targetSum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// for (let i = 0;i &lt; table.length;i++){</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> targetSum<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> numbers<span class="token punctuation">)</span><span class="token punctuation">{</span>              table<span class="token punctuation">[</span>i <span class="token operator">+</span> num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> table<span class="token punctuation">[</span>targetSum<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canSum</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canSum</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span><span class="token comment">//Decision problem</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="howSum"><a href="#howSum" class="headerlink" title="howSum"></a>howSum</h1><blockquote><p>Write a function <code>howSum(targetSum,numbers)</code> that takes in a targetSum and an array of numbers as arguments</p><p>The function should return an array containing any combination of elements that add up to exactly the targetSum</p><p>If  there is no combination that add up to the targetSum,then return null</p></blockquote><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">howSum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">targetSum<span class="token punctuation">,</span> numbers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>targetSum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> targetSum<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> numbers<span class="token punctuation">)</span><span class="token punctuation">{</span>              table<span class="token punctuation">[</span>i <span class="token operator">+</span> num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> table<span class="token punctuation">[</span>targetSum<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">howSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//[ 3, 2, 2 ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">howSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[ 4, 3 ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">howSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//null</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">howSum</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[ 2, 2, 2, 2 ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">howSum</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//null</span><span class="token comment">//Combinatoric problem</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="bestSum"><a href="#bestSum" class="headerlink" title="bestSum"></a>bestSum</h1><h2 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h2><ul><li>制表法</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">bestSum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">targetSum<span class="token punctuation">,</span> numbers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>targetSum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> targetSum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">const</span> combination <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> num<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment">//如果当前组合数组更短,便将它存储</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>table<span class="token punctuation">[</span>i <span class="token operator">+</span> num<span class="token punctuation">]</span> <span class="token operator">||</span> table<span class="token punctuation">[</span>i <span class="token operator">+</span> num<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> combination<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    table<span class="token punctuation">[</span>i <span class="token operator">+</span> num<span class="token punctuation">]</span> <span class="token operator">=</span> combination<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> table<span class="token punctuation">[</span>targetSum<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//Memoization</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bestSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//[ 2, 2, 3 ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bestSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 7 ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bestSum</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//null</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bestSum</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 3, 5 ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bestSum</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="canConstruct"><a href="#canConstruct" class="headerlink" title="canConstruct"></a>canConstruct</h1><h2 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h2><ul><li>Memoization</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">canConstruct</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> workBank<span class="token punctuation">,</span>memo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">in</span> memo<span class="token punctuation">)</span> <span class="token keyword">return</span> memo<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> word <span class="token keyword">of</span> workBank<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">const</span> suffix <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span>suffix<span class="token punctuation">,</span>workBank<span class="token punctuation">,</span>memo<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               memo<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>               <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    memo<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// m = target.length</span><span class="token comment">// n = array.length</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"abcdef"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"ab"</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"cd"</span><span class="token punctuation">,</span><span class="token string">"def"</span><span class="token punctuation">,</span><span class="token string">"abcd"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"skateboard"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"bo"</span><span class="token punctuation">,</span><span class="token string">"rd"</span><span class="token punctuation">,</span><span class="token string">"ate"</span><span class="token punctuation">,</span><span class="token string">"t"</span><span class="token punctuation">,</span><span class="token string">"ska"</span><span class="token punctuation">,</span><span class="token string">"sk"</span><span class="token punctuation">,</span><span class="token string">"boar"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"enterapotentpot"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"p"</span><span class="token punctuation">,</span><span class="token string">"ent"</span><span class="token punctuation">,</span><span class="token string">"enter"</span><span class="token punctuation">,</span><span class="token string">"ot"</span><span class="token punctuation">,</span><span class="token string">"o"</span><span class="token punctuation">,</span><span class="token string">"t"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeef"</span><span class="token punctuation">,</span><span class="token punctuation">[</span>    <span class="token string">"e"</span><span class="token punctuation">,</span>    <span class="token string">"ee"</span><span class="token punctuation">,</span>    <span class="token string">"eee"</span><span class="token punctuation">,</span>    <span class="token string">"eeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeeee"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span><span class="token comment">// brute force</span><span class="token comment">//time O(n ^ m * m)</span><span class="token comment">//space O(m)</span><span class="token comment">// memoized</span><span class="token comment">//time O(n * m * m) = O(n * m ^ 2)</span><span class="token comment">//space O(m ^ 2)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Tabulation</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">canConstruct</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> workBank</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> target<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> word <span class="token keyword">of</span> workBank<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment">// 检查当前的单词是否与从索引i开始的字符匹配</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i <span class="token operator">+</span> word<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">===</span> word<span class="token punctuation">)</span><span class="token punctuation">{</span>                    table<span class="token punctuation">[</span>i <span class="token operator">+</span> word<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> table<span class="token punctuation">[</span>target<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// m = target.length</span><span class="token comment">// n = array.length</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"abcdef"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"ab"</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"cd"</span><span class="token punctuation">,</span><span class="token string">"def"</span><span class="token punctuation">,</span><span class="token string">"abcd"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"skateboard"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"bo"</span><span class="token punctuation">,</span><span class="token string">"rd"</span><span class="token punctuation">,</span><span class="token string">"ate"</span><span class="token punctuation">,</span><span class="token string">"t"</span><span class="token punctuation">,</span><span class="token string">"ska"</span><span class="token punctuation">,</span><span class="token string">"sk"</span><span class="token punctuation">,</span><span class="token string">"boar"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"enterapotentpot"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"p"</span><span class="token punctuation">,</span><span class="token string">"ent"</span><span class="token punctuation">,</span><span class="token string">"enter"</span><span class="token punctuation">,</span><span class="token string">"ot"</span><span class="token punctuation">,</span><span class="token string">"o"</span><span class="token punctuation">,</span><span class="token string">"t"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token string">"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeef"</span><span class="token punctuation">,</span><span class="token punctuation">[</span>    <span class="token string">"e"</span><span class="token punctuation">,</span>    <span class="token string">"ee"</span><span class="token punctuation">,</span>    <span class="token string">"eee"</span><span class="token punctuation">,</span>    <span class="token string">"eeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeeee"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span><span class="token comment">// brute force</span><span class="token comment">//time O(n ^ m * m)</span><span class="token comment">//space O(m)</span><span class="token comment">// memoized</span><span class="token comment">//time O(n * m * m) = O(n * m ^ 2)</span><span class="token comment">//space O(m)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="countConstruct"><a href="#countConstruct" class="headerlink" title="countConstruct"></a>countConstruct</h1><blockquote><p>Write a function <code>countConstruct(target,wordBank)</code> that accepts a target string and an array of strings</p><p>The function should return the number of the ways that the <code>target</code> can be constructed by concatenating elements of the <code>wordBank</code> array</p><p>you may reuse the elements of <code>wordBank</code> as many times as needed</p></blockquote><h2 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h2><ul><li>Memoization</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">countConstruct</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> wordBank<span class="token punctuation">,</span> memo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">in</span> memo<span class="token punctuation">)</span> <span class="token keyword">return</span> memo<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> totalCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> word <span class="token keyword">of</span> wordBank<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> numWaysForRest <span class="token operator">=</span> <span class="token function">countConstruct</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span> wordBank<span class="token punctuation">,</span> memo<span class="token punctuation">)</span><span class="token punctuation">;</span>            totalCount <span class="token operator">+=</span> numWaysForRest<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    memo<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> totalCount<span class="token punctuation">;</span>    <span class="token keyword">return</span> totalCount<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// m = target.length</span><span class="token comment">// n = array.length</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"abcdef"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"ab"</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"cd"</span><span class="token punctuation">,</span> <span class="token string">"def"</span><span class="token punctuation">,</span> <span class="token string">"abcd"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"purple"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"purp"</span><span class="token punctuation">,</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"ur"</span><span class="token punctuation">,</span> <span class="token string">"le"</span><span class="token punctuation">,</span> <span class="token string">"purpl"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//2</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"skateboard"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"bo"</span><span class="token punctuation">,</span> <span class="token string">"rd"</span><span class="token punctuation">,</span> <span class="token string">"ate"</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">,</span> <span class="token string">"ska"</span><span class="token punctuation">,</span> <span class="token string">"sk"</span><span class="token punctuation">,</span> <span class="token string">"boar"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"enterapotentpot"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"ent"</span><span class="token punctuation">,</span> <span class="token string">"enter"</span><span class="token punctuation">,</span> <span class="token string">"ot"</span><span class="token punctuation">,</span> <span class="token string">"o"</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeef"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>    <span class="token string">"e"</span><span class="token punctuation">,</span>    <span class="token string">"ee"</span><span class="token punctuation">,</span>    <span class="token string">"eee"</span><span class="token punctuation">,</span>    <span class="token string">"eeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeeee"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 0</span><span class="token comment">// brute force</span><span class="token comment">//time O(n ^ m * m)</span><span class="token comment">//space O(m ^ 2)</span><span class="token comment">// memoized</span><span class="token comment">//time O(n * m * m) = O(n * m ^ 2)</span><span class="token comment">//space O(m ^ 2)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Tabulation</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">countConstruct</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> wordBank</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//初始化制表索引为0的值</span>    table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> target<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> word <span class="token keyword">of</span> wordBank<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">// 检查当前的单词是否与从索引i开始的字符匹配</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i <span class="token operator">+</span> word<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">===</span> word<span class="token punctuation">)</span><span class="token punctuation">{</span>                table<span class="token punctuation">[</span>i <span class="token operator">+</span> word<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">+=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> table<span class="token punctuation">[</span>target<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// m = target</span><span class="token comment">// n = wordBank.length</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"purple"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"purp"</span><span class="token punctuation">,</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"ur"</span><span class="token punctuation">,</span> <span class="token string">"le"</span><span class="token punctuation">,</span> <span class="token string">"purpl"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//2</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"abcdef"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"ab"</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"cd"</span><span class="token punctuation">,</span> <span class="token string">"def"</span><span class="token punctuation">,</span> <span class="token string">"abcd"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"skateboard"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"bo"</span><span class="token punctuation">,</span> <span class="token string">"rd"</span><span class="token punctuation">,</span> <span class="token string">"ate"</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">,</span> <span class="token string">"ska"</span><span class="token punctuation">,</span> <span class="token string">"sk"</span><span class="token punctuation">,</span> <span class="token string">"boar"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"enterapotentpot"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"ent"</span><span class="token punctuation">,</span> <span class="token string">"enter"</span><span class="token punctuation">,</span> <span class="token string">"ot"</span><span class="token punctuation">,</span> <span class="token string">"o"</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countConstruct</span><span class="token punctuation">(</span><span class="token string">"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeef"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>    <span class="token string">"e"</span><span class="token punctuation">,</span>    <span class="token string">"ee"</span><span class="token punctuation">,</span>    <span class="token string">"eee"</span><span class="token punctuation">,</span>    <span class="token string">"eeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeeee"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 0</span><span class="token comment">// brute force</span><span class="token comment">//time O(n ^ m * m)</span><span class="token comment">//space O(m ^ 2)</span><span class="token comment">// memoized</span><span class="token comment">//time O(n * m * m) = O(n * m ^ 2)</span><span class="token comment">//space O(m)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="allConstruct"><a href="#allConstruct" class="headerlink" title="allConstruct"></a>allConstruct</h1><blockquote><p>Write a function <code>allConstruct(target,wordBank)</code> that accepts a target string and an array of strings</p><p>The function should return a 2D array containing all of the ways that the <code>target</code> can be constructed by concatenating elements of <code>wordBank</code> array.</p><p>Each elements of 2D array should represent one combination that constructs the <code>target</code></p><p>you may reuse the elements of <code>wordBank</code> as many times as needed</p></blockquote><h2 id="代码实现-5"><a href="#代码实现-5" class="headerlink" title="代码实现"></a>代码实现</h2><ul><li>Memoization</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">allConstruct</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> wordBank<span class="token punctuation">,</span>memo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">in</span> memo<span class="token punctuation">)</span> <span class="token keyword">return</span> memo<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> word <span class="token keyword">of</span> wordBank<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> suffix <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> suffixWays <span class="token operator">=</span> <span class="token function">allConstruct</span><span class="token punctuation">(</span>suffix<span class="token punctuation">,</span> wordBank<span class="token punctuation">,</span>memo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> targetWays <span class="token operator">=</span> suffixWays<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">way</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>word<span class="token punctuation">,</span> <span class="token operator">...</span>way<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>targetWays<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    memo<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// m = target.length</span><span class="token comment">// n = wordBank.length</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">allConstruct</span><span class="token punctuation">(</span><span class="token string">"abcdef"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"ab"</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"cd"</span><span class="token punctuation">,</span> <span class="token string">"def"</span><span class="token punctuation">,</span> <span class="token string">"abcd"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//1</span><span class="token comment">// [</span><span class="token comment">//   [ 'abc', 'def' ]</span><span class="token comment">// ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">allConstruct</span><span class="token punctuation">(</span><span class="token string">"purple"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"purp"</span><span class="token punctuation">,</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"ur"</span><span class="token punctuation">,</span> <span class="token string">"le"</span><span class="token punctuation">,</span> <span class="token string">"purpl"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//2</span><span class="token comment">//    [</span><span class="token comment">//      [ 'purp', 'le' ],</span><span class="token comment">//      [ 'p', 'ur', 'p', 'le' ]</span><span class="token comment">//    ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">allConstruct</span><span class="token punctuation">(</span><span class="token string">"skateboard"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"bo"</span><span class="token punctuation">,</span> <span class="token string">"rd"</span><span class="token punctuation">,</span> <span class="token string">"ate"</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">,</span> <span class="token string">"ska"</span><span class="token punctuation">,</span> <span class="token string">"sk"</span><span class="token punctuation">,</span> <span class="token string">"boar"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//0</span><span class="token comment">//[]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">allConstruct</span><span class="token punctuation">(</span><span class="token string">"enterapotentpot"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"ent"</span><span class="token punctuation">,</span> <span class="token string">"enter"</span><span class="token punctuation">,</span> <span class="token string">"ot"</span><span class="token punctuation">,</span> <span class="token string">"o"</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//4</span><span class="token comment">//[</span><span class="token comment">//   [ 'enter', 'a', 'p', 'ot', 'ent', 'p', 'ot' ],</span><span class="token comment">//   [</span><span class="token comment">//     'enter', 'a',</span><span class="token comment">//     'p',     'ot',</span><span class="token comment">//     'ent',   'p',</span><span class="token comment">//     'o',     't'</span><span class="token comment">//   ],</span><span class="token comment">//   [</span><span class="token comment">//     'enter', 'a',</span><span class="token comment">//     'p',     'o',</span><span class="token comment">//     't',     'ent',</span><span class="token comment">//     'p',     'ot'</span><span class="token comment">//   ],</span><span class="token comment">//   [</span><span class="token comment">//     'enter', 'a',</span><span class="token comment">//     'p',     'o',</span><span class="token comment">//     't',     'ent',</span><span class="token comment">//     'p',     'o',</span><span class="token comment">//     't'</span><span class="token comment">//   ]</span><span class="token comment">// ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">allConstruct</span><span class="token punctuation">(</span><span class="token string">"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeef"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>    <span class="token string">"e"</span><span class="token punctuation">,</span>    <span class="token string">"ee"</span><span class="token punctuation">,</span>    <span class="token string">"eee"</span><span class="token punctuation">,</span>    <span class="token string">"eeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeee"</span><span class="token punctuation">,</span>    <span class="token string">"eeeeeee"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// []</span><span class="token comment">// time O( n ^ m)</span><span class="token comment">// space O(m)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Tabulation</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">allConstruct</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> wordBank</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> target<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> word <span class="token keyword">of</span> wordBank<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> word<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">===</span> word<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">const</span> newCombinations <span class="token operator">=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">subArray</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>subArray<span class="token punctuation">,</span> word<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                table<span class="token punctuation">[</span>i <span class="token operator">+</span> word<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>newCombinations<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> table<span class="token punctuation">[</span>target<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// console.log(allConstruct("abcdef", ["ab", "abc", "cd", "def", "abcd"]))  //1</span><span class="token comment">// console.log(allConstruct("purple", ["purp", "p", "ur", "le", "purpl"]))  //2</span><span class="token comment">// console.log(allConstruct("skateboard", ["bo", "rd", "ate", "t", "ska", "sk", "boar"]));    //0</span><span class="token comment">// console.log(allConstruct("enterapotentpot", ["a", "p", "ent", "enter", "ot", "o", "t"]));  //4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">allConstruct</span><span class="token punctuation">(</span><span class="token string">"aaaaaaaaaaaaaaax"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>    <span class="token string">"a"</span><span class="token punctuation">,</span>    <span class="token string">"aa"</span><span class="token punctuation">,</span>    <span class="token string">"aaa"</span><span class="token punctuation">,</span>    <span class="token string">"aaaa"</span><span class="token punctuation">,</span>    <span class="token string">"aaaaa"</span><span class="token punctuation">,</span>    <span class="token string">"aaaaaa"</span><span class="token punctuation">,</span>    <span class="token string">"aaaaaaa"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// []</span><span class="token comment">// m : target.length</span><span class="token comment">// n : wordBank.length</span><span class="token comment">// time O( n ^ m)</span><span class="token comment">// space O(m)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>notice any overlapping subproblems（ 注意任何重叠的子问题）</li><li>decide what is the trivially smallest input （决定什么是最小的输入）</li><li>think recursively to use memoization （递归思考虑使用缓存）</li><li>think iteratively to use Tabbulation （迭代考虑使用制表法）</li><li>drew a strategy first （先制定策略）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见排序算法总结</title>
      <link href="/2022/05/12/algorithm/%E5%B8%B8%E8%A7%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2022/05/12/algorithm/%E5%B8%B8%E8%A7%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="算法入门学习"><a href="#算法入门学习" class="headerlink" title="算法入门学习"></a>算法入门学习</h1><h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>base01</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-11 9:38 * @desc: 选择排序 时间复杂度为 O(n ^ 2) */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code01_SelectionSort</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                minIndex <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">?</span> j <span class="token operator">:</span> minIndex<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> minIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">// 0 ~ n-1</span>        <span class="token comment">// 1 ~ n-1</span>        <span class="token comment">// ...</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> testTimes <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxSize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxValue <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> succeed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testTimes<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">selectSort</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">comparator</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEqual</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                succeed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一共执行了 ："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token string">"秒钟"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>succeed <span class="token operator">?</span> <span class="token string">"YES!!!"</span> <span class="token operator">:</span> <span class="token string">"Occured a mistake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        int[] arr = generateRandomArray(maxSize,maxValue);</span><span class="token comment">//        printArray(arr);</span><span class="token comment">//        selectSort(arr);</span><span class="token comment">//        printArray(arr);</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEqual</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>arr1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">!=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">comparator</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSize<span class="token punctuation">,</span> <span class="token keyword">int</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>base01</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-11 9:39 * @desc: 冒泡排序 时间复杂度为O(n ^ 2) */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code02_BubbleSort</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">bubblerSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//处理边界</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/**         * 0 ~ N - 1 依次比较,最大放在最后面         * 0 ~ N - 2         * ...         * 0 ~ 2 比较谁大,谁大就放在后面         * 0 ~ 1 比较谁大,谁大就放在后面         */</span><span class="token comment">/*        for (int i = 0;i &lt; arr.length;i++){//            int max = arr[i];            for (int j = 1;j &lt; arr.length - i;j++){                if (arr[j-1] &gt; arr[j]){                    swap(arr,j - 1,j );                }            }        }*/</span>        <span class="token comment">//optimize function</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> e <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> e <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> e<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> e<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> testTimes <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxSize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxValue <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> succeed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testTimes<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">bubblerSort</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">comparator</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEqual</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                succeed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一共执行了 ："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token string">"秒钟"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>succeed <span class="token operator">?</span> <span class="token string">"YES!!!"</span> <span class="token operator">:</span> <span class="token string">"Occured a mistake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        int[] arr = generateRandomArray(maxSize,maxValue);</span><span class="token comment">//        printArray(arr);</span><span class="token comment">//        selectSort(arr);</span><span class="token comment">//        printArray(arr);</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEqual</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>arr1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">!=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">comparator</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSize<span class="token punctuation">,</span> <span class="token keyword">int</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>base01</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-11 9:40 * @desc: 插入排序 时间复杂度为O(n ^ 2) */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code03_InsertionSort</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token comment">//处理边界</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> j<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> testTimes <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxSize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxValue <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> succeed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testTimes<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">insertSort</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">comparator</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEqual</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                succeed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一共执行了 ："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token string">"秒钟"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>succeed <span class="token operator">?</span> <span class="token string">"YES!!!"</span> <span class="token operator">:</span> <span class="token string">"Occured a mistake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">insertSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEqual</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>arr1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">!=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">comparator</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSize<span class="token punctuation">,</span> <span class="token keyword">int</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>standalon<span class="token punctuation">.</span>sort</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-12 20:46 * @desc: 希尔排序 时间复杂度为: O(n ^ 1.3 ~ n ^ 2) 比 时间复杂度 nlogn 要大 * 1. shell排序是建立在 插入排序的基础上 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code01_ShellSort</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">shellSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token comment">//处理边界</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token class-name">N</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">// 定义增量</span>        <span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token class-name">N</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>step <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//logic code</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> step<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> right<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//当step为 1 时,执行插入排序</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> step<span class="token punctuation">;</span> j <span class="token operator">-=</span> step<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> step<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> j<span class="token punctuation">,</span> j <span class="token operator">-</span> step<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment">//循环增量</span>            step <span class="token operator">=</span> step <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//方式二: 使用for循环但是 运行耗时比方式一短</span>        <span class="token comment">/*for (;step &gt; 0;step = step / 2){            for (int i = step;i &lt;= right;i++){                for (int j = i;j &gt;= step;j -= step){                    if (arr[j] &lt; arr[j - step]){                        swap(arr,j,j - step);                    }                }            }        }*/</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> testTimes <span class="token operator">=</span> <span class="token number">2000000</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxSize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxValue <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> succeed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testTimes<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">shellSort</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">comparator</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEqual</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                succeed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一共执行了 ："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token string">"秒钟"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>succeed <span class="token operator">?</span> <span class="token string">"YES!!!"</span> <span class="token operator">:</span> <span class="token string">"Occured a mistake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">shellSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEqual</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>arr1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">!=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">comparator</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSize<span class="token punctuation">,</span> <span class="token keyword">int</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>standalon<span class="token punctuation">.</span>sort</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-12 21:45 * @desc: 归并排序（Merge sort）是建立在归并操作上的一种有效、稳定的排序算法，该算法是采用分治法(Divide and Conquer）的一个非常典型的应用。 * 1. 将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。 * 2. 归并排序的时间复杂度为 O(nlogn)。归并排序时需要和待排序记录个数相等的存储空间，所以空间复杂度为 O(n)。 * 3. 归并排序适用于数据量大，并且对稳定性有要求的场景。 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code02_MergeSort</span> <span class="token punctuation">{</span>    <span class="token comment">// 递归使用归并排序,对arr[left...right]的范围进行排序</span>    <span class="token comment">//需优化改进</span>    <span class="token comment">// todo...</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 对于arr[mid] &lt;= arr[mid+1]的情况,不进行merge</span>        <span class="token comment">// 对于近乎有序的数组非常有效,但是对于一般情况,有一定的性能损失</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//进行merge排序</span>            <span class="token function">merge</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> mid<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aux <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 初始化，i指向左半部分的起始索引位置l；j指向右半部分起始索引位置mid+1</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">;</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> l<span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> r<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//开始处理元素</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//左边元素全部处理完成</span>                arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> aux<span class="token punctuation">[</span>j <span class="token operator">-</span> l<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//右边元素全部处理完成</span>                arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> aux<span class="token punctuation">[</span>i <span class="token operator">-</span> l<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i <span class="token operator">-</span> l<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> l<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 左半部分所指元素 &lt; 右半部分所指元素</span>                arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> l<span class="token punctuation">]</span><span class="token punctuation">;</span>                i<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment">// 左半部分所指元素 &gt;= 右半部分所指元素</span>                arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> l<span class="token punctuation">]</span><span class="token punctuation">;</span>                j<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// 参考百度百科</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">mergeSortInBaidu</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> h<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> mid <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> leftArr <span class="token operator">=</span> <span class="token function">mergeSortInBaidu</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//左有序数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rightArr <span class="token operator">=</span> <span class="token function">mergeSortInBaidu</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//右有序数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>leftArr<span class="token punctuation">.</span>length <span class="token operator">+</span> rightArr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//新有序数组</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> leftArr<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> rightArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            newNum<span class="token punctuation">[</span>m<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> leftArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> rightArr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">?</span> leftArr<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">:</span> rightArr<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> leftArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span>            newNum<span class="token punctuation">[</span>m<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> leftArr<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> rightArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span>            newNum<span class="token punctuation">[</span>m<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> rightArr<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> newNum<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> testTimes <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxSize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxValue <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> succeed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testTimes<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">mergeSortInBaidu</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">comparator</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEqual</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                succeed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printArray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一共执行了 ："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token string">"秒钟"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>succeed <span class="token operator">?</span> <span class="token string">"YES!!!"</span> <span class="token operator">:</span> <span class="token string">"Occured a mistake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        int[] mergeArr =mergeSortInBaidu(arr,0,arr.length - 1);</span>        <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">/* for (int num :                mergeArr) {            System.out.print(num + " ");        }*/</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEqual</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>arr1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">!=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">comparator</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateRandomArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSize<span class="token punctuation">,</span> <span class="token keyword">int</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="随机化快速排序"><a href="#随机化快速排序" class="headerlink" title="随机化快速排序"></a>随机化快速排序</h3><h3 id="双路快速排序"><a href="#双路快速排序" class="headerlink" title="双路快速排序"></a>双路快速排序</h3><h3 id="三路排序算法"><a href="#三路排序算法" class="headerlink" title="三路排序算法"></a>三路排序算法</h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题笔记_02</title>
      <link href="/2022/05/11/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_02/"/>
      <url>/2022/05/11/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_02/</url>
      
        <content type="html"><![CDATA[<h1 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>standalon<span class="token punctuation">.</span>opt</span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-11 16:00 * @desc:  一个数组中出现了奇数次,其他数都出现了偶数次,怎么找到打印这个数字？ * * 提示： *  1. hashmap 记录出现的次数,找打出现奇数次的数字 *  2. 异或运算的使用 *      2.1 一个数字和本身做异或运算结果为0 *      2.2 一个数字和0 做异或运算等于本身 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExclusiveOR</span> <span class="token punctuation">{</span>    <span class="token comment">//一个数字在数组中出现次数为奇数次</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">printOddTimesNum1</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//定义一个变量eor,和数组中每个元素做异或运算</span>        <span class="token keyword">int</span> eor <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//做异或运算并赋值给eor</span>            eor <span class="token operator">^=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> eor<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token function">printOddTimesNum1</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>standalon<span class="token punctuation">.</span>opt</span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-11 22:09 * @desc: */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwapTwoNumber</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>standalon<span class="token punctuation">.</span>opt</span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-11 16:40 * @desc:   异或运算应用2.0 *      1.怎么将一个int数的最右侧的1提取出来 *      2.一个数组中有两种数出现奇数次,其他数字都出现了偶数次,怎么找到并打印这两种数 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsedExclusiveOR2</span> <span class="token punctuation">{</span>    <span class="token comment">//怎么将一个int数的最右侧的1提取出来</span>    <span class="token comment">//注意次数使用的运算符号为 &amp; 符号</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getRightOne</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//方式一</span>        <span class="token keyword">int</span> rightOne <span class="token operator">=</span> key <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//方式二</span>        <span class="token keyword">int</span> rightOne2 <span class="token operator">=</span> key <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> rightOne<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">printOddTimesNum2</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//定义一个变量eor,获取两个奇数字的异或结果并保存到eor中</span>        <span class="token keyword">int</span> eor <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//做异或运算并赋值给eor</span>            eor <span class="token operator">^=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//循环执行后,此时eor等于 a ^ b的结果</span>        <span class="token comment">//提取eor数字二进制中最右侧的1</span>        <span class="token keyword">int</span> rightOne <span class="token operator">=</span> eor <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>eor<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 求出数组中的元素与rightOne的右侧1的位置相同的数字,即右侧位置为1的所有数字</span>        <span class="token comment">// 定义一个变量用于保存 onlyone和每个右侧位置为1的数字异或运算后的结果</span>        <span class="token keyword">int</span> onlyOne <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//eor'</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> rightOne<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                onlyOne <span class="token operator">^=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//此时onlyOne 的结果等于两数之一的数字a</span>        <span class="token comment">//求出另外一个数字b : b = eor ^ eor'</span>        <span class="token keyword">int</span> second <span class="token operator">=</span> eor <span class="token operator">^</span> onlyOne<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>onlyOne<span class="token punctuation">,</span>second<span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span>       <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">Numbers</span> <span class="token operator">=</span>  <span class="token function">printOddTimesNum2</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">Numbers</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Numbers</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>standalon<span class="token punctuation">.</span>opt</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-11 19:16 * @desc: 一个数组中有一种数字出现K次, 其他数字都出现M次,`M &gt; 1`,`K &lt; M`.找到出现K次的数字.要求: 额外空间复杂度为`O(1)`,时间复杂度为`O(n)` * 分析： * 1.构建一个int整型数组t,长度为32位. * 2.将t[i]记录 i位置出现1的次数,t[i]的值暂时记作count * 2.1 如果 m % count == 0 当前位置只会存在出现m次数字,反之该位置存在出现k次的数字 * 2.2 如果 m % count != 0 当前位置有出现k次的数字 * 3. */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsedExclusiveOR3</span> <span class="token punctuation">{</span>    <span class="token comment">//常规写法 额外空间复杂度为O(n) 不符合题意O(1)的要求</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">==</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                ans <span class="token operator">=</span> num<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getOnlyKTimesNum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">createMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> rightOne <span class="token operator">=</span> num <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>                t<span class="token punctuation">[</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rightOne<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>                num <span class="token operator">^=</span> rightOne<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> m <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ans <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            value <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">//优化后的写法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">km</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> support <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                support<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;&gt;</span> i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> support<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>support<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> m <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ans <span class="token operator">|=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> kinds <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> range <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> testTime <span class="token operator">=</span> <span class="token number">100000</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test is running ..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testTime<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> max<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 1 ~ 9</span>            <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> max<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 严格控制 k &lt; m</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>                m<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//构建数组</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token function">randomArray</span><span class="token punctuation">(</span>kinds<span class="token punctuation">,</span>range<span class="token punctuation">,</span>k<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> ans1 <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>k<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> ans2 <span class="token operator">=</span> <span class="token function">getOnlyKTimesNum</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>k<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> ans3 <span class="token operator">=</span> <span class="token function">km</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>k<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ans1 <span class="token operator">!=</span> ans2 <span class="token operator">||</span> ans1 <span class="token operator">!=</span> ans3<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ans1: "</span> <span class="token operator">+</span> ans1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ans2: "</span> <span class="token operator">+</span> ans2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ans3: "</span> <span class="token operator">+</span> ans3<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Occured a mistake in you program!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test is over ..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//对数器</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">randomArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> kinds<span class="token punctuation">,</span> <span class="token keyword">int</span> range<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> appearKTimeNum <span class="token operator">=</span>  <span class="token function">randomNumber</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 出现k次的数字</span>        <span class="token keyword">int</span> times <span class="token operator">=</span> k<span class="token punctuation">;</span>        <span class="token comment">// 数字种类最少为两种</span>        <span class="token keyword">int</span> numKinds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> kinds<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 其他数字种类为[2,kinds + 1]</span>        <span class="token comment">//数组长度为出现k次的数字个数 + 出现m次数字的个数即：1 * k + (numKinds - 1) * m</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>times <span class="token operator">+</span> <span class="token punctuation">(</span>numKinds <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> m<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> times<span class="token punctuation">;</span>index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> appearKTimeNum<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>appearKTimeNum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 出现k次的数字已经生成,接下来生成出现m次的数字</span>        numKinds<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>numKinds <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> currentNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">do</span> <span class="token punctuation">{</span>                currentNum <span class="token operator">=</span> <span class="token function">randomNumber</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>currentNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>currentNum<span class="token punctuation">)</span><span class="token punctuation">;</span>            numKinds<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m <span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> currentNum<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//数组创建和元素添加完成</span>        <span class="token comment">//给数组元素重新排序</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">// i位置的数,和j位置元素进行交换</span>            <span class="token keyword">int</span> j <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// j的取值范围是 [0,n - 1]</span>            <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">randomNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> range<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>range <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>range <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="异或运算在算法中的应用"><a href="#异或运算在算法中的应用" class="headerlink" title="异或运算在算法中的应用"></a>异或运算在算法中的应用</h1><h2 id="运算符介绍"><a href="#运算符介绍" class="headerlink" title="运算符介绍"></a>运算符介绍</h2><ul><li>异或运算<ul><li>无进位相加</li><li>相同为0,不同为1</li><li>满足交换律和结合律</li><li>任何数和自身做异或运算,结果为0</li><li>任何数与0做异或运算还是等于数字本身</li><li>应用<ul><li>两数交换</li></ul></li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">a <span class="token operator">=</span> a <span class="token operator">^</span> b<span class="token punctuation">;</span>b <span class="token operator">=</span> a <span class="token operator">^</span> b<span class="token punctuation">;</span>a <span class="token operator">=</span> a <span class="token operator">^</span> b<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>应用异或运算</li></ul><blockquote><ol><li><p>一个数组中出现了奇数次,其他数都出现了偶数次,怎么找到打印这个数字？</p></li><li><p>怎么将一个int数的最右侧的1提取出来</p></li><li><p>一个数组中有两种数出现奇数次,其他数字都出现了偶数次,怎么找到并打印这两种数</p></li><li><p> 一个数组中有一种数字出现K次,其他数字都出现M次,<code>M &gt; 1</code>,<code>K &lt; M</code>.找到出现K次的数字.要求: 额外空间复杂度为<code>O(1)</code>,时间复杂度为<code>O(n)</code></p></li></ol></blockquote><hr><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><table><thead><tr><th>操作符</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>＆</td><td>如果相对应位都是1，则结果为1，否则为0</td><td>（A＆B），得到12，即0000 1100</td></tr><tr><td>|</td><td>如果相对应位都是 0，则结果为 0，否则为 1</td><td>（A | B）得到61，即 0011 1101</td></tr><tr><td>^</td><td>如果相对应位值相同，则结果为0，否则为1</td><td>（A ^ B）得到49，即 0011 0001</td></tr><tr><td>〜</td><td>按位取反运算符翻转操作数的每一位，即0变成1，1变成0。</td><td>（〜A）得到-61，即1100 0011</td></tr><tr><td>&lt;&lt;</td><td>按位左移运算符。左操作数按位左移右操作数指定的位数。</td><td>A &lt;&lt; 2得到240，即 1111 0000</td></tr><tr><td>&gt;&gt;</td><td>按位右移运算符。左操作数按位右移右操作数指定的位数。</td><td>A &gt;&gt; 2得到15即 1111</td></tr><tr><td>&gt;&gt;&gt;</td><td>按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。</td><td>A&gt;&gt;&gt;2得到15即0000 1111</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题笔记_03</title>
      <link href="/2022/05/11/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_03/"/>
      <url>/2022/05/11/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_03/</url>
      
        <content type="html"><![CDATA[<h1 id="二分法查找"><a href="#二分法查找" class="headerlink" title="二分法查找"></a>二分法查找</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"># 参考<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Arrays</span>中的方法<span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> value<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BinarySearch</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span><span class="token keyword">int</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">binarySearch0</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">,</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">binarySearch0</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> fromIndex<span class="token punctuation">,</span><span class="token keyword">int</span> toIndex<span class="token punctuation">,</span><span class="token keyword">int</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> low <span class="token operator">=</span> fromIndex<span class="token punctuation">;</span>        <span class="token keyword">int</span> high <span class="token operator">=</span> toIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> midVal <span class="token operator">=</span> a<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">&lt;</span> midVal<span class="token punctuation">)</span>        high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">&gt;</span> midVal<span class="token punctuation">)</span>low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">return</span> mid<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token punctuation">(</span>low<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//分别获取参数列表</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arguments <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> target <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//将String数组转换成整型数组</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//调用方法binarySearch</span><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出方法返回的结果</span><span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">)</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"该值的位置: "</span> <span class="token operator">+</span> index <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"找不到该值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。 * * 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。 * * 你可以按任意顺序返回答案。 *输入：nums = [2,7,11,15], target = 9 * 输出：[0,1] * 解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。 *  * 来源：力扣（LeetCode） * 链接：https://leetcode-cn.com/problems/two-sum *著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。 */</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TwoSum</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> key <span class="token operator">=</span>  target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">==</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>           array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>   <span class="token keyword">return</span> array<span class="token punctuation">;</span>              <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strr <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> strr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>strr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">break</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span><span class="token string">", "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> target <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>arr <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数组的下标为: [ "</span><span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">", "</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">" ]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"没有找到合适的两个数字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="两数之和-解法：巧用循环"><a href="#两数之和-解法：巧用循环" class="headerlink" title="两数之和 解法：巧用循环"></a>两数之和 解法：巧用循环</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TwoSum</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">int</span> key <span class="token operator">=</span>  target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">==</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>           array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>   <span class="token keyword">return</span> array<span class="token punctuation">;</span>              <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strr <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> strr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>strr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">break</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span><span class="token string">", "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> target <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>arr <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数组的下标为: [ "</span><span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">", "</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">" ]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"没有找到合适的两个数字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="两数之和-解法：使用HashMap"><a href="#两数之和-解法：使用HashMap" class="headerlink" title="两数之和 解法：使用HashMap"></a>两数之和 解法：使用HashMap</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token comment">/** * 两数之和解法之 HashMap *  * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TwoSumWay2</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> indexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment">// 建立k-v ，一一对应的哈希表</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>hash<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                indexs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>                indexs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> indexs<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">// 将数据存入 key为补数 ，value为下标</span>            hash<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>target<span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> indexs<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//获取参数</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arguments <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> target <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//将String数组转换成整型数组</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//调用twoSum方法</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> indexs <span class="token operator">=</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取返回值并输出</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[ "</span> <span class="token operator">+</span> indexs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> indexs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" ]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法学习笔记day01</title>
      <link href="/2022/05/10/algorithm/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0day01/"/>
      <url>/2022/05/10/algorithm/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0day01/</url>
      
        <content type="html"><![CDATA[<h1 id="算法概念"><a href="#算法概念" class="headerlink" title="算法概念"></a>算法概念</h1><h2 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h2><ul><li>时间复杂度</li><li>定义<ul><li>常数时间的操作<ul><li>执行时间固定的操作都是常数时间的操作</li><li>算术运算</li><li>位运算</li><li>赋值、比较、自增、自减</li><li>数组寻址操作</li></ul></li><li>以选择排序为例</li><li>只需要关注最高阶的数值</li></ul></li></ul><blockquote><p>遍历0 - N个数, 交换一次</p><p>遍历1 - N-1个数, 交换一次</p><p>遍历2 - N-2个数, 交换一次</p><p>…</p><p>遍历结束</p><p>结论：所有遍历的次数为 $a<em>n^2+b</em>n+c$ ,交换次数为<code>n</code>,时间复杂度为 $n^2$</p></blockquote><ul><li>空间复杂度</li></ul><h3 id="算法评估标准"><a href="#算法评估标准" class="headerlink" title="算法评估标准"></a>算法评估标准</h3><ul><li>时间复杂度<ul><li>通过最差条件算出时间复杂度</li></ul></li><li>额外空间复杂度</li></ul><h1 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h1><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><h1 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h1><ul><li>寻找某个数是否存在某个正序数组中</li><li>在一个正数组中找到大于等于某个数的最左侧位置</li><li>局部最小值问题<ul><li>返回一个无序数组局部最小值问题</li></ul></li></ul><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><ul><li>算法的过程与语言无关</li><li>分析一个算法流程复杂度的前提是对流程很清晰</li></ul><h1 id="对数器"><a href="#对数器" class="headerlink" title="对数器"></a>对数器</h1>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> 时间复杂度 </tag>
            
            <tag> 空间复杂度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题笔记_01</title>
      <link href="/2022/05/10/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_01/"/>
      <url>/2022/05/10/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_01/</url>
      
        <content type="html"><![CDATA[<h1 id="链表反转"><a href="#链表反转" class="headerlink" title="链表反转"></a>链表反转</h1><ul><li>代码实现</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-09 10:28 * @desc: 单链表和双链表的反转 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code01_ReverseList</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">Node</span> next<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>value <span class="token operator">=</span> data<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DoubleNode</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">DoubleNode</span> last<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">DoubleNode</span> next<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">DoubleNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>value <span class="token operator">=</span> data<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//  head</span><span class="token comment">//   a    -&gt;   b    -&gt;  c  -&gt;  null</span><span class="token comment">//   c    -&gt;   b    -&gt;  a  -&gt;  null</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Node</span> <span class="token function">reverseLinkedList</span><span class="token punctuation">(</span><span class="token class-name">Node</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Node</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">Node</span> next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>next <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>head<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">;</span>pre <span class="token operator">=</span> head<span class="token punctuation">;</span>head <span class="token operator">=</span> next<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> pre<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DoubleNode</span> <span class="token function">reverseDoubleList</span><span class="token punctuation">(</span><span class="token class-name">DoubleNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">DoubleNode</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">DoubleNode</span> next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>next <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>head<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">;</span>head<span class="token punctuation">.</span>last <span class="token operator">=</span> next<span class="token punctuation">;</span>pre <span class="token operator">=</span> head<span class="token punctuation">;</span>head <span class="token operator">=</span> next<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> pre<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Node</span> <span class="token function">testReverseLinkedList</span><span class="token punctuation">(</span><span class="token class-name">Node</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>next <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DoubleNode</span> <span class="token function">testReverseDoubleList</span><span class="token punctuation">(</span><span class="token class-name">DoubleNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DoubleNode</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">DoubleNode</span> pre <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">DoubleNode</span> cur <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>cur<span class="token punctuation">.</span>last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>cur<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">;</span>pre<span class="token punctuation">.</span>last <span class="token operator">=</span> cur<span class="token punctuation">;</span>pre <span class="token operator">=</span> cur<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// for test</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Node</span> <span class="token function">generateRandomLinkedList</span><span class="token punctuation">(</span><span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span>size<span class="token operator">--</span><span class="token punctuation">;</span><span class="token class-name">Node</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Node</span> pre <span class="token operator">=</span> head<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>size <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Node</span> cur <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pre<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">;</span>pre <span class="token operator">=</span> cur<span class="token punctuation">;</span>size<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> head<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// for test</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DoubleNode</span> <span class="token function">generateRandomDoubleList</span><span class="token punctuation">(</span><span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span>size<span class="token operator">--</span><span class="token punctuation">;</span><span class="token class-name">DoubleNode</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DoubleNode</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DoubleNode</span> pre <span class="token operator">=</span> head<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>size <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">DoubleNode</span> cur <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DoubleNode</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pre<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">;</span>cur<span class="token punctuation">.</span>last <span class="token operator">=</span> pre<span class="token punctuation">;</span>pre <span class="token operator">=</span> cur<span class="token punctuation">;</span>size<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> head<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// for test</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getLinkedListOriginOrder</span><span class="token punctuation">(</span><span class="token class-name">Node</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>ans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// for test</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">checkLinkedListReverse</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> origin<span class="token punctuation">,</span> <span class="token class-name">Node</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> origin<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>origin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span>head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// for test</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getDoubleListOriginOrder</span><span class="token punctuation">(</span><span class="token class-name">DoubleNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>ans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// for test</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">checkDoubleListReverse</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> origin<span class="token punctuation">,</span> <span class="token class-name">DoubleNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">DoubleNode</span> end <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> origin<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>origin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span>end <span class="token operator">=</span> head<span class="token punctuation">;</span>head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> origin<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>origin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>end<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span>end <span class="token operator">=</span> end<span class="token punctuation">.</span>last<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// for test</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span><span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">int</span> testTime <span class="token operator">=</span> <span class="token number">100000</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test begin!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testTime<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Node</span> node1 <span class="token operator">=</span> <span class="token function">generateRandomLinkedList</span><span class="token punctuation">(</span>len<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token function">getLinkedListOriginOrder</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span><span class="token punctuation">;</span>node1 <span class="token operator">=</span> <span class="token function">reverseLinkedList</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkLinkedListReverse</span><span class="token punctuation">(</span>list1<span class="token punctuation">,</span> node1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Oops1!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">Node</span> node2 <span class="token operator">=</span> <span class="token function">generateRandomLinkedList</span><span class="token punctuation">(</span>len<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token function">getLinkedListOriginOrder</span><span class="token punctuation">(</span>node2<span class="token punctuation">)</span><span class="token punctuation">;</span>node2 <span class="token operator">=</span> <span class="token function">testReverseLinkedList</span><span class="token punctuation">(</span>node2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkLinkedListReverse</span><span class="token punctuation">(</span>list2<span class="token punctuation">,</span> node2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Oops2!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">DoubleNode</span> node3 <span class="token operator">=</span> <span class="token function">generateRandomDoubleList</span><span class="token punctuation">(</span>len<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list3 <span class="token operator">=</span> <span class="token function">getDoubleListOriginOrder</span><span class="token punctuation">(</span>node3<span class="token punctuation">)</span><span class="token punctuation">;</span>node3 <span class="token operator">=</span> <span class="token function">reverseDoubleList</span><span class="token punctuation">(</span>node3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkDoubleListReverse</span><span class="token punctuation">(</span>list3<span class="token punctuation">,</span> node3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Oops3!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">DoubleNode</span> node4 <span class="token operator">=</span> <span class="token function">generateRandomDoubleList</span><span class="token punctuation">(</span>len<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list4 <span class="token operator">=</span> <span class="token function">getDoubleListOriginOrder</span><span class="token punctuation">(</span>node4<span class="token punctuation">)</span><span class="token punctuation">;</span>node4 <span class="token operator">=</span> <span class="token function">reverseDoubleList</span><span class="token punctuation">(</span>node4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkDoubleListReverse</span><span class="token punctuation">(</span>list4<span class="token punctuation">,</span> node4<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Oops4!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test finish!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="删除链表中指定的值"><a href="#删除链表中指定的值" class="headerlink" title="删除链表中指定的值"></a>删除链表中指定的值</h1><ul><li>代码实现</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>base02</span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-09 11:13 * @desc: 删除链表中指定的值 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code02_DeleteGivenValue</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">Node</span> next<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> data<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Node</span> <span class="token function">removeValue</span><span class="token punctuation">(</span><span class="token class-name">Node</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//处理边界</span>        <span class="token comment">//当链表左边都是要删除的结点,直接跳过直到遇到值不相等的结点并记录</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">.</span>value <span class="token operator">!=</span> num<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/**         *  &gt; head == null  return null         *  &gt; head != null  return head         */</span>        <span class="token comment">// todo...</span>        <span class="token comment">//构造两个指针</span>        <span class="token class-name">Node</span> current <span class="token operator">=</span> head<span class="token punctuation">;</span>        <span class="token class-name">Node</span> pre <span class="token operator">=</span> head<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">==</span> num<span class="token punctuation">)</span><span class="token punctuation">{</span>                pre<span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                pre <span class="token operator">=</span> current<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> head<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题笔记_00</title>
      <link href="/2022/05/10/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_00/"/>
      <url>/2022/05/10/algorithm/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0_00/</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><ul><li><h4 id="寻找两个正序数组的中位数"><a href="#寻找两个正序数组的中位数" class="headerlink" title=" 寻找两个正序数组的中位数"></a><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/"> 寻找两个正序数组的中位数</a></h4></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的 中位数 。算法的时间复杂度应该为 <span class="token class-name">O</span><span class="token punctuation">(</span>log <span class="token punctuation">(</span>m<span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> 示例 <span class="token number">1</span>：输入：nums1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>输出：<span class="token number">2.00000</span>解释：合并数组 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> ，中位数 <span class="token number">2</span>示例 <span class="token number">2</span>：输入：nums1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>输出：<span class="token number">2.50000</span>解释：合并数组 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> ，中位数 <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">2.5</span>提示：nums1<span class="token punctuation">.</span>length <span class="token operator">==</span> mnums2<span class="token punctuation">.</span>length <span class="token operator">==</span> n<span class="token number">0</span> <span class="token operator">&lt;=</span> m <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token number">0</span> <span class="token operator">&lt;=</span> n <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token number">1</span> <span class="token operator">&lt;=</span> m <span class="token operator">+</span> n <span class="token operator">&lt;=</span> <span class="token number">2000</span><span class="token operator">-</span><span class="token number">106</span> <span class="token operator">&lt;=</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">106</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>解答思路</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 常规思想</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">A</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">B</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token class-name">B</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span> m <span class="token operator">+</span> n<span class="token punctuation">;</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> aStart <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> bStart <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            left <span class="token operator">=</span> right<span class="token punctuation">;</span>  <span class="token comment">// 每次循环前将 right 的值赋给 left</span>            <span class="token comment">// A移动的条件: B遍历到最后 或 当前A&lt;B,满足一个即可</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>aStart <span class="token operator">&lt;</span> m <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>bStart <span class="token operator">&gt;=</span> n <span class="token operator">||</span> <span class="token class-name">A</span><span class="token punctuation">[</span>aStart<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token class-name">B</span><span class="token punctuation">[</span>bStart<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                right <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">[</span>aStart<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                right <span class="token operator">=</span> <span class="token class-name">B</span><span class="token punctuation">[</span>bStart<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 与1交,判断奇偶数,更快速</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            <span class="token keyword">return</span> right<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 第k小数</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> length1 <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">,</span> length2 <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> totalLength <span class="token operator">=</span> length1 <span class="token operator">+</span> length2<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>totalLength <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 可以将两种情况合并,奇数会求两次同样的k</span>            <span class="token keyword">int</span> midIndex <span class="token operator">=</span> totalLength <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">double</span> median <span class="token operator">=</span> <span class="token function">getKthElement</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> midIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> median<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> midIndex1 <span class="token operator">=</span> totalLength <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> midIndex2 <span class="token operator">=</span> totalLength <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">double</span> median <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">getKthElement</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> midIndex1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getKthElement</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> midIndex2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> median<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getKthElement</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment">/* 主要思路：要找到第 k (k&gt;1) 小的元素,那么就取 pivot1 = nums1[k/2-1] 和 pivot2 = nums2[k/2-1] 进行比较         * 这里的 "/" 表示整除         * nums1 中小于等于 pivot1 的元素有 nums1[0 .. k/2-2] 共计 k/2-1 个         * nums2 中小于等于 pivot2 的元素有 nums2[0 .. k/2-2] 共计 k/2-1 个         * 取 pivot = min(pivot1, pivot2),两个数组中小于等于 pivot 的元素共计不会超过 (k/2-1) + (k/2-1) &lt;= k-2 个         * 这样 pivot 本身最大也只能是第k-1小的元素         * 如果 pivot = pivot1,那么 nums1[0 .. k/2-1] 都不可能是第 k 小的元素。把这些元素全部 "删除",剩下的作为新的 nums1 数组         * 如果 pivot = pivot2,那么 nums2[0 .. k/2-1] 都不可能是第 k 小的元素。把这些元素全部 "删除",剩下的作为新的 nums2 数组         * 由于我们 "删除" 了一些元素（这些元素都比第 k 小的元素要小）,因此需要修改 k 的值,减去删除的数的个数         */</span>        <span class="token keyword">int</span> length1 <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">,</span> length2 <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> index1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> index2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> kthElement <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 特殊情况</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>index1 <span class="token operator">==</span> length1<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 第二种特殊情况,一个数组为空</span>                <span class="token keyword">return</span> nums2<span class="token punctuation">[</span>index2 <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>index2 <span class="token operator">==</span> length2<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 第二种特殊情况,一个数组为空</span>                <span class="token keyword">return</span> nums1<span class="token punctuation">[</span>index1 <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token comment">// 第三种特殊情况,k=1</span>                <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>index1<span class="token punctuation">]</span><span class="token punctuation">,</span> nums2<span class="token punctuation">[</span>index2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>                        <span class="token comment">// 正常情况,index1,index2作为起始点,newindex1,newindex2作为比较点 在不停的更新</span>            <span class="token keyword">int</span> half <span class="token operator">=</span> k <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> newIndex1 <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>index1 <span class="token operator">+</span> half<span class="token punctuation">,</span> length1<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//第一种特殊情况,发生越界,记录需要比较的位置</span>            <span class="token keyword">int</span> newIndex2 <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>index2 <span class="token operator">+</span> half<span class="token punctuation">,</span> length2<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//第一种特殊情况,发生越界,记录需要比较的位置</span>            <span class="token keyword">int</span> pivot1 <span class="token operator">=</span> nums1<span class="token punctuation">[</span>newIndex1<span class="token punctuation">]</span><span class="token punctuation">,</span> pivot2 <span class="token operator">=</span> nums2<span class="token punctuation">[</span>newIndex2<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//获取两个需要比较的数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>pivot1 <span class="token operator">&lt;=</span> pivot2<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// &lt;=将两种情况合并</span>                k <span class="token operator">-=</span> <span class="token punctuation">(</span>newIndex1 <span class="token operator">-</span> index1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//两者相减后+1,这才是真正减去的长度</span>                index1 <span class="token operator">=</span> newIndex1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//连同比较位置也一同删去了,所以新的开始是 比较位置 的后一位</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                k <span class="token operator">-=</span> <span class="token punctuation">(</span>newIndex2 <span class="token operator">-</span> index2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                index2 <span class="token operator">=</span> newIndex2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 划分数组</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span>nums2<span class="token punctuation">,</span> nums1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> m<span class="token punctuation">;</span>        <span class="token comment">// median1：前一部分的最大值</span>        <span class="token comment">// median2：后一部分的最小值</span>        <span class="token keyword">int</span> median1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> median2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 一直循环找到一个最大的i满足A[i-1]≤B[j]</span>            <span class="token comment">// 前一部分包含 nums1[0 .. i-1] 和 nums2[0 .. j-1]</span>            <span class="token comment">// 后一部分包含 nums1[i .. m-1] 和 nums2[j .. n-1]</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//二分法,i从区间中间开始</span>            <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> i<span class="token punctuation">;</span><span class="token comment">//+1的操作将总数为奇数和偶数合并为一种情况</span>            <span class="token comment">//nums_im1, nums_i, nums_jm1, nums_j 分别表示 nums1[i-1], nums1[i], nums2[j-1], nums2[j]</span>            <span class="token comment">//当一个数组不出现在前一部分时,对应的值为负无穷,就不会对前一部分的最大值产生影响</span>            <span class="token keyword">int</span> nums_im1 <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">:</span> nums1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//当一个数组不出现在后一部分时,对应的值为正无穷,就不会对后一部分的最小值产生影响</span>            <span class="token keyword">int</span> nums_i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> m <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> nums_jm1 <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">:</span> nums2<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> nums_j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> n <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span> nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums_im1 <span class="token operator">&lt;=</span> nums_j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                median1 <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>nums_im1<span class="token punctuation">,</span> nums_jm1<span class="token punctuation">)</span><span class="token punctuation">;</span>                median2 <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>nums_i<span class="token punctuation">,</span> nums_j<span class="token punctuation">)</span><span class="token punctuation">;</span>                left <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token punctuation">{</span>                right <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span>median1 <span class="token operator">+</span> median2<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span> <span class="token operator">:</span> median1<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数组认知错误："><a href="#数组认知错误：" class="headerlink" title="数组认知错误："></a>数组认知错误：</h1><blockquote><p>此处判断数组长度并按照升序排序,错误在于m ,n一开始就赋值了，但是数组交换后 两个数组的长度m,n 并没有变化</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>       <span class="token keyword">int</span> n <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> nums1<span class="token punctuation">;</span>           nums1 <span class="token operator">=</span> nums2<span class="token punctuation">;</span>           nums2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>       <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="使用划分数组的方法"><a href="#使用划分数组的方法" class="headerlink" title="使用划分数组的方法"></a>使用划分数组的方法</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">xyz<span class="token punctuation">.</span>javacoldly<span class="token punctuation">.</span>problems<span class="token punctuation">.</span>array</span><span class="token punctuation">;</span><span class="token comment">/** * @version 22.05 * @author: javacoldeyes * @date: 2022-05-08 20:32 * @desc: 寻找两个正序数组的中位数 * &lt;p&gt; * 给定两个大小分别为 m 和 n 的正序（从小到大）数组nums1 和nums2。请你找出并返回这两个正序数组的 中位数 。 * &lt;p&gt; * 算法的时间复杂度应该为 O(log (m+n)) * 示例 1： * &lt;p&gt; * 输入：nums1 = [1,3], nums2 = [2] * 输出：2.00000 * 解释：合并数组 = [1,2,3] ，中位数 2 * 示例 2： * &lt;p&gt; * 输入：nums1 = [1,2], nums2 = [3,4] * 输出：2.50000 * 解释：合并数组 = [1,2,3,4] ，中位数 (2 + 3) / 2 = 2.5 * 提示： * &lt;p&gt; * nums1.length == m * nums2.length == n * 0 &lt;= m &lt;= 1000 * 0 &lt;= n &lt;= 1000 * 1 &lt;= m + n &lt;= 2000 * -106 &lt;= nums1[i], nums2[i] &lt;= 106 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LeetCode_4</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//判断 两个数组长度按照 小到大的顺序排序</span>        <span class="token comment">//下面一行语句作用与36-42行代码是一样的,不过下面m,n变量需要声明</span><span class="token comment">//        return  nums1.length &gt; nums2.length ? findMedianSortedArrays(nums2,nums1);</span>        <span class="token comment">//数组的错误运用</span><span class="token comment">//        int m = nums1.length;</span><span class="token comment">//        int n = nums2.length;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> nums1<span class="token punctuation">;</span>            nums1 <span class="token operator">=</span> nums2<span class="token punctuation">;</span>            nums2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token comment">// 在区间[0,m]中寻找最大元素i且元素i必须满足条件:nums1[i - 1] &lt; nums2[j] &amp;&amp; nums2[j - 1] &lt; nums1[i]</span>        <span class="token comment">// 使用二分法查找</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> right <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token comment">//定义虚线位置左侧元素的个数 无论左侧总元素个数是奇数还是偶数,均可适用于如下声明</span>        <span class="token keyword">int</span> totalLeft <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> j <span class="token operator">=</span> totalLeft <span class="token operator">-</span> i<span class="token punctuation">;</span>            <span class="token comment">// 使用区间取反的方式寻找最大元素i</span><span class="token comment">//            if (nums1[i - 1] &gt; nums2[j]) {</span><span class="token comment">//                //下一轮搜索区间为 [left,i - 1]</span><span class="token comment">//                right = i - 1;</span><span class="token comment">//            } else {</span><span class="token comment">//                //下一轮搜索区间为 [i,right]</span><span class="token comment">//                //此处需注意当出现区间[left(i),right]时,需注意可能出现死循环.需将i取值做上取整,改为 left + (right - left + 1) / 2</span><span class="token comment">//                left = i;</span><span class="token comment">//            }</span>            <span class="token comment">//方式二 区间取反</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums2<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//下一轮搜索区间为 [i + 1 ,right]</span>                <span class="token comment">// 当出现 left = i + 1时,中位数i不需要向上取整</span>                <span class="token comment">// i = left + (right - left) / 2;</span>                left <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment">//下一轮搜索区间为 [left,i]</span>                right <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//循环结束后找到了我们需要的最大元素i</span>        <span class="token comment">//将left,right值重置</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> totalLeft <span class="token operator">-</span> i<span class="token punctuation">;</span>        <span class="token comment">//求解虚线位置左侧最大值和右侧最小值</span>        <span class="token comment">//此时nums1为空,防止左侧最大值判断,此处设置为整型最小值</span>        <span class="token keyword">int</span> leftMaxNums1 <span class="token operator">=</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">:</span> nums1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//此时nums1右侧为空,防止右侧最小值判断,此处设置为整型最大值</span>        <span class="token keyword">int</span> rightMinNums1 <span class="token operator">=</span> i <span class="token operator">==</span> m <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//此时nums2为空,防止左侧最大值判断,此处设置为整型最小值</span>        <span class="token keyword">int</span> leftMaxNums2 <span class="token operator">=</span> j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">:</span> nums2<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//此时nums2右侧为空,防止右侧最小值判断,此处设置为整型最大值</span>        <span class="token keyword">int</span> rightMinNums2 <span class="token operator">=</span> j <span class="token operator">==</span> n <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span> nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//根据两个数组元素总数的奇偶性并求出中位数的值</span>        <span class="token comment">// 当一个数与1做与运算,如果结果为0,则该数字为偶数.反之则为奇数</span>        <span class="token comment">//  1 &amp; 1 = 1;</span>        <span class="token comment">//  0 &amp; 1 = 0;</span>        <span class="token comment">//  1 &amp; 0 = 0;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//此时为奇数</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>leftMaxNums1<span class="token punctuation">,</span> leftMaxNums2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment">//总数为偶数时,需返回左侧元素的最大值和右侧元素的最小值的平均值</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>leftMaxNums1<span class="token punctuation">,</span> leftMaxNums2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>rightMinNums1<span class="token punctuation">,</span> rightMinNums2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//示例 nums1 = [1,2], nums2 = [3,4]</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment">//调用方法</span>        <span class="token keyword">double</span> median <span class="token operator">=</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"中位数: "</span> <span class="token operator">+</span> median<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx学习笔记</title>
      <link href="/2022/05/10/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/05/10/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx学习笔记"><a href="#Nginx学习笔记" class="headerlink" title="Nginx学习笔记"></a>Nginx学习笔记</h1><ul><li>Nginx简介</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">Nginx功能丰富，可作为HTTP服务器，也可作为反向代理服务器，邮件服务器。支持FastCGI、SSL、Virtual Host、URL Rewrite、Gzip等功能。并且支持很多第三方的模块扩展。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>Nginx常用功能<ul><li>Http代理/反向代理</li><li>负载均衡</li><li>Web缓存</li></ul></li><li>Nginx配置文件结构<ul><li>nginx.conf</li><li>nginx文件结构解析</li><li>结构展示</li></ul></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">...</span>              <span class="token comment">#全局块</span>events <span class="token punctuation">{</span>         <span class="token comment">#events块</span>   <span class="token punctuation">...</span><span class="token punctuation">}</span>http      <span class="token comment">#http块</span><span class="token punctuation">{</span>    <span class="token punctuation">...</span>   <span class="token comment">#http全局块</span>    server        <span class="token comment">#server块</span>    <span class="token punctuation">{</span>         <span class="token punctuation">...</span>       <span class="token comment">#server全局块</span>        location <span class="token punctuation">[</span>PATTERN<span class="token punctuation">]</span>   <span class="token comment">#location块</span>        <span class="token punctuation">{</span>            <span class="token punctuation">...</span>        <span class="token punctuation">}</span>        location <span class="token punctuation">[</span>PATTERN<span class="token punctuation">]</span>         <span class="token punctuation">{</span>            <span class="token punctuation">...</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    server    <span class="token punctuation">{</span>      <span class="token punctuation">...</span>    <span class="token punctuation">}</span>    <span class="token punctuation">...</span>     <span class="token comment">#http全局块</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>结构解释<ul><li>全局块<ul><li>配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</li></ul></li><li>events块<ul><li>配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</li></ul></li><li>http块<ul><li>可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。</li></ul></li><li>server块<ul><li>配置虚拟主机的相关参数，一个http中可以有多个server。</li></ul></li><li>location块<ul><li>配置请求的路由，以及各种页面的处理情况。</li></ul></li></ul></li><li>配置文件解析</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">########### 每个指令必须有分号结束。#################</span><span class="token comment">#user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span><span class="token comment">#worker_processes 2;  #允许生成的进程数，默认为1</span><span class="token comment">#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span>error_log log/error.log debug;  <span class="token comment">#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span>events <span class="token punctuation">{</span>    accept_mutex on;   <span class="token comment">#设置网路连接序列化，防止惊群现象发生，默认为on</span>    multi_accept on;  <span class="token comment">#设置一个进程是否同时接受多个网络连接，默认为off</span>    <span class="token comment">#use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span>    worker_connections  1024;    <span class="token comment">#最大连接数，默认为512</span><span class="token punctuation">}</span>http <span class="token punctuation">{</span>    include       mime.types;   <span class="token comment">#文件扩展名与文件类型映射表</span>    default_type  application/octet<span class="token punctuation">-</span>stream; <span class="token comment">#默认文件类型，默认为text/plain</span>    <span class="token comment">#access_log off; #取消服务日志    </span>    log_format myFormat '$remote_addr–$remote_user <span class="token punctuation">[</span>$time_local<span class="token punctuation">]</span> $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; <span class="token comment">#自定义格式</span>    access_log log/access.log myFormat;  <span class="token comment">#combined为日志格式的默认值</span>    sendfile on;   <span class="token comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span>    sendfile_max_chunk 100k;  <span class="token comment">#每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span>    keepalive_timeout 65;  <span class="token comment">#连接超时时间，默认为75s，可以在http，server，location块。</span>    upstream mysvr <span class="token punctuation">{</span>         server 127.0.0.1<span class="token punctuation">:</span>7878;      server 192.168.10.121<span class="token punctuation">:</span>3333 backup;  <span class="token comment">#热备</span>    <span class="token punctuation">}</span>    error_page 404 https<span class="token punctuation">:</span>//www.baidu.com; <span class="token comment">#错误页</span>    server <span class="token punctuation">{</span>        keepalive_requests 120; <span class="token comment">#单连接请求上限次数。</span>        listen       4545;   <span class="token comment">#监听端口</span>        server_name  127.0.0.1;   <span class="token comment">#监听地址       </span>        location  ~<span class="token important">*^.+$</span> <span class="token punctuation">{</span>       <span class="token comment">#请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span>           <span class="token comment">#root path;  #根目录</span>           <span class="token comment">#index vv.txt;  #设置默认页</span>           proxy_pass  http<span class="token punctuation">:</span>//mysvr;  <span class="token comment">#请求转向mysvr 定义的服务器列表</span>           deny 127.0.0.1;  <span class="token comment">#拒绝的ip</span>           allow 172.18.5.54; <span class="token comment">#允许的ip           </span>        <span class="token punctuation">}</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>Nginx几个常用基本配置</p><ul><li><code>$remote_addr</code> 与 <code>$http_x_forwarded_for</code> 用以记录客户端的ip地址；</li><li><code>$remote_user</code> ：用来记录客户端用户名称；</li><li><code>$time_local</code> ： 用来记录访问时间与时区；</li><li><code>$request </code>： 用来记录请求的url与http协议；</li><li><code>$status</code> ： 用来记录请求状态；成功是200；</li><li><code>$body_bytes_s ent</code> ：记录发送给客户端文件主体内容大小；</li><li><code>$http_referer </code>：用来记录从那个页面链接访问过来的；</li><li><code>$http_user_agent </code>：记录客户端浏览器的相关信息；</li></ul></li><li><p>惊群现象</p><ul><li>一个网路连接到来，多个睡眠的进程被同时叫醒，但只有一个进程能获得链接，这样会影响系统性能。</li></ul></li><li><p>Nginx常用命令</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动nginx</span>start nginx<span class="token comment"># 停止nginx</span>nginx -s stop<span class="token comment"># 重新加载nginx</span>nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大厂算法面试通关_day01</title>
      <link href="/2022/05/09/algorithm/%E5%A4%A7%E5%8E%82%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E9%80%9A%E5%85%B3_day01/"/>
      <url>/2022/05/09/algorithm/%E5%A4%A7%E5%8E%82%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E9%80%9A%E5%85%B3_day01/</url>
      
        <content type="html"><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><blockquote><p>给定长度L,求出数组中小于等于长度L区间内最多覆盖几个点(包括两端)</p></blockquote><ul><li>贪心</li><li>窗口</li></ul><h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><blockquote><p>给定一个目录,求解目录下多少个文件,文件夹不算</p></blockquote><h1 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h1><blockquote><p>给定一个非负整数num,如何不用循环语句返回 &gt;= num并且离num最近的2的幂次方</p></blockquote><ul><li>使用二进制的特性求解</li><li>无符号右移<code>&gt;&gt;&gt;</code>和有符号右移<code>&gt;&gt;</code><ul><li><code>&gt;&gt;&gt;</code>不管是正数还是负数,都是使用数字<code>0</code>来补位</li><li><code>&gt;&gt;</code> 当数字为正数时使用<code>0</code>来补位,如果是负数使用<code>1</code>来部位</li></ul></li></ul><h1 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h1><blockquote><p>一个数组中只有两种字符<code>G</code>和<code>B</code>字符,<code>[BBGGBGBBBGGBB]</code>,如何让所有字符<code>G</code>在<strong>左边</strong>而<code>B</code>字符全部放在右边或者所有字符<code>B</code>在左边而所有<code>G</code>字符在右边,但只能在相邻字符之间交换,请问至少需要交换多少次</p></blockquote><ul><li>贪心</li><li>暴力破解 + 贪心 ？</li><li>盲点</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"># 字符串转换成数组<span class="token class-name">String</span> s<span class="token punctuation">;</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//兼容各种编程语言,java 可直接使用 s.charAt(i);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="第五题-Leetcode-329-Longest-Increase-Path-In-Matrix"><a href="#第五题-Leetcode-329-Longest-Increase-Path-In-Matrix" class="headerlink" title="第五题- ==Leetcode 329. Longest Increase Path In Matrix=="></a>第五题- ==Leetcode 329. Longest Increase Path In Matrix==</h1><blockquote><p>给定一个二维数组Matrix，你可以从任何位置出发,可以走上下左右四个方向,返回能走出来的最长的递增量长度</p></blockquote><ul><li>计划搜索(自顶向下的动态规划)</li></ul><h1 id="第六题-Hard"><a href="#第六题-Hard" class="headerlink" title="第六题- ==Hard=="></a>第六题- ==Hard==</h1><blockquote><p>给定两个非负数组<code>x</code>和<code>hp</code>，长度都是N,在给定一个正数<code>rangx</code>有序x[i]表示 i 号怪兽在 x轴上的位置;</p><p>hp[i] 表示 i 号怪兽的血量, range表示法师如果站在 x位置,用AOE技能打到的范围是: [x - range, x + range],被打到的每只怪兽损失一点血量</p><p>返回要把所有怪兽血量清空,至少需要释放多少次AOE技能？</p></blockquote><ul><li>线段树</li></ul><h1 id="第七题-LeetCode-494-TargetSum"><a href="#第七题-LeetCode-494-TargetSum" class="headerlink" title="第七题-==LeetCode 494. TargetSum=="></a>第七题-==LeetCode 494. TargetSum==</h1><blockquote><p>给定一个数组arr,你可以决定在每一个数字前面 <code>+</code> 或者<code> -</code> ,但是所有数字必须参与</p><p>再给定一个数字<code>target</code>,请问最后所有数字运算结果为<code>target</code>的组合数是多少？</p></blockquote><ul><li>暴力破解</li><li>使用缓存命中将可变参数放入缓存<ul><li>构建缓存 <code>HashMap&lt;Integer,HashMap&lt;Integer,Integer&gt;&gt;</code></li></ul></li><li>动态规划<ul><li>优化方案<ul><li>将数组所有元素都当作是正数</li><li>如果所有正数元素之和为<code>Sum</code>，如果<code>target &gt; sum</code> 此时无解</li><li><code>target</code> 和 <code>Sum</code>的奇偶性是不会变的 即 <code>((target &amp; 1) ^ (sum &amp; 1) == 0)</code></li><li>假定有集合 $P = [1,3,5], Q = [2,4]$ 存在多少种组合使得 $P = \frac{target + (P + Q)}{2} =  \frac{target + sum}{2}$  </li><li>空间压缩</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 大厂面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/05/08/Docker%E6%89%93%E5%8C%85%E4%BB%A5%E5%8F%8A%E6%8E%A8%E9%80%81%E9%95%9C%E5%83%8F%E5%88%B0DockerHub/"/>
      <url>/2022/05/08/Docker%E6%89%93%E5%8C%85%E4%BB%A5%E5%8F%8A%E6%8E%A8%E9%80%81%E9%95%9C%E5%83%8F%E5%88%B0DockerHub/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker插件部署SpringBoot应用以及推送镜像到Docker-Hub"><a href="#Docker插件部署SpringBoot应用以及推送镜像到Docker-Hub" class="headerlink" title="Docker插件部署SpringBoot应用以及推送镜像到Docker Hub"></a><code>Docker</code>插件部署<code>SpringBoot</code>应用以及推送镜像到<code>Docker Hub</code></h1><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><ul><li><code>Maven</code></li><li><code>IDE</code></li><li>服务器</li><li><code>Docker</code></li><li>基本<code>Docker</code> 命令和<code>Linux</code>命令</li></ul><h1 id="Docker插件使用"><a href="#Docker插件使用" class="headerlink" title="Docker插件使用"></a><code>Docker</code>插件使用</h1><h3 id="Docker开启远程API"><a href="#Docker开启远程API" class="headerlink" title="Docker开启远程API"></a>Docker开启远程API</h3><h4 id="用vim编辑器修改docker-service文件"><a href="#用vim编辑器修改docker-service文件" class="headerlink" title="用vim编辑器修改docker.service文件"></a>用vim编辑器修改docker.service文件</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi /usr/lib/systemd/system/docker.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改文件内容</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock##修改后的内容ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="让Docker支持http上传镜像"><a href="#让Docker支持http上传镜像" class="headerlink" title="让Docker支持http上传镜像"></a>让Docker支持http上传镜像</h1><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">echo '{ "insecure-registries":["192.168.3.101:5000"] }' &gt; /etc/docker/daemon.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><h4 id="修改配置后需要使用如下命令使配置生效"><a href="#修改配置后需要使用如下命令使配置生效" class="headerlink" title="修改配置后需要使用如下命令使配置生效"></a>修改配置后需要使用如下命令使配置生效</h4></li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl daemon-reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><h4 id="重新启动Docker服务"><a href="#重新启动Docker服务" class="headerlink" title="重新启动Docker服务"></a>重新启动Docker服务</h4></li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl stop dockersystemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><h4 id="开启防火墙的Docker构建端口"><a href="#开启防火墙的Docker构建端口" class="headerlink" title="开启防火墙的Docker构建端口"></a>开启防火墙的Docker构建端口</h4></li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">firewall-cmd --zone=public --add-port=2375/tcp --permanentfirewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="构建所有Docker镜像并上传"><a href="#构建所有Docker镜像并上传" class="headerlink" title="构建所有Docker镜像并上传"></a>构建所有<code>Docker</code>镜像并上传</h3><ul><li><code>Maven</code>使用<code>Docker-maven-plugin</code>插件</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.host</span><span class="token punctuation">&gt;</span></span>http://120.79.150.12:2375<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.host</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 打包 --&gt;</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.spotify<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>docker-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>build-image<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>build<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>imageName</span><span class="token punctuation">&gt;</span></span>eladmin/${project.artifactId}:${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>imageName</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dockerHost</span><span class="token punctuation">&gt;</span></span>${docker.host}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dockerHost</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>baseImage</span><span class="token punctuation">&gt;</span></span>java:8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>baseImage</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entryPoint</span><span class="token punctuation">&gt;</span></span>["java", "-jar", "-Dspring.profiles.active=prod","/${project.build.finalName}.jar"]                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entryPoint</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>${project.build.directory}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>${project.build.finalName}.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>           <span class="token comment">&lt;!--跳过单元测试--&gt;</span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>直接双击根项目<code>jceadmin</code>的<code>package</code>命令可以一次性打包所有应用的Docker镜像；</li></ul><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ul><li>上述打包方式只适合内网环境部署应用</li><li>接下来介绍如何使用docker插件部署应用到外网服务器中</li></ul><h1 id="使用Docker插件将服务部署到外网"><a href="#使用Docker插件将服务部署到外网" class="headerlink" title="使用Docker插件将服务部署到外网"></a>使用<code>Docker</code>插件将服务部署到外网</h1><h3 id="分析原因"><a href="#分析原因" class="headerlink" title="分析原因"></a>分析原因</h3><ul><li><code>Docker</code>为了实现集群管理，提供了远程管理的端口。<code>Docker Daemon</code>作为守护进程运行在后台，可以执行发送到管理端口上的<code>Docker</code>命令。</li><li>当我们修改<code>docker.service</code>文件，修改启动命令，加入<code>-H tcp://0.0.0.0:2375</code>时，就会开放<code>2375</code>端口，且没有任何加密和认证过程，这种方式一般用在内网测试环境。如果你的服务器部署在公网上，任何知道你IP的人，都可以管理这台主机上的容器和镜像，想想就觉得可怕。</li></ul><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><blockquote><p>开放远程管理端口后，没有做任何安全保护导致了这个问题。我们只要使用安全传输层协议（TLS）进行传输并使用CA认证即可</p></blockquote><h2 id="制作证书及秘钥"><a href="#制作证书及秘钥" class="headerlink" title="制作证书及秘钥"></a>制作证书及秘钥</h2><blockquote><p>证书制作都在服务器上操作</p></blockquote><ul><li>首先创建一个目录用于存储生成的证书和秘钥；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir /mydata/docker-ca &amp;&amp; cd /mydata/docker-ca<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>制作CA机构证书<ul><li>创建CA证书私钥，期间需要输入两次用户名和密码，生成文件为<code>ca-key.pem</code>；</li></ul></li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl genrsa -aes256 -out ca-key.pem 4096<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>根据私钥创建CA证书，期间需要输入上一步设置的私钥密码，生成文件为<code>ca.pem</code>；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -subj "/CN=*" -out ca.pem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>服务端证书<ul><li>创建服务端私钥，生成文件为<code>server-key.pem</code>；</li></ul></li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl genrsa -out server-key.pem 4096<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>创建服务端证书签名请求文件，用于CA证书给服务端证书签名，生成文件<code>server.csr</code>；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl req -subj "/CN=*" -sha256 -new -key server-key.pem -out server.csr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>创建CA证书签名好的服务端证书，期间需要输入CA证书私钥密码，生成文件为<code>server-cert.pem</code>；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>客户端证书</p><ul><li>创建客户端私钥，生成文件为<code>key.pem</code>；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl genrsa -out key.pem 4096<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>创建客户端证书签名请求文件，用于CA证书给客户证书签名，生成文件<code>client.csr</code>；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl req -subj "/CN=client" -new -key key.pem -out client.csr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>为了让秘钥适合客户端认证，创建一个扩展配置文件<code>extfile-client.cnf</code>；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">echo extendedKeyUsage = clientAuth &gt; extfile-client.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>创建CA证书签名好的客户端证书，期间需要输入CA证书私钥密码，生成文件为<code>cert.pem</code>；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out cert.pem -extfile extfile-client.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>删除创建过程中多余的文件；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">rm -rf ca.srl server.csr client.csr extfile-client.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>最终生成文件如下，有了它们我们就可以进行基于TLS的安全访问了。</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-rw-r--r-- <span class="token number">1</span> root root <span class="token number">3326</span> May  <span class="token number">6</span> <span class="token number">19</span>:11 ca-key.pemCA证书私钥-rw-r--r-- <span class="token number">1</span> root root <span class="token number">1765</span> May  <span class="token number">6</span> <span class="token number">19</span>:11 ca.pemCA证书-rw-r--r-- <span class="token number">1</span> root root <span class="token number">1696</span> May  <span class="token number">6</span> <span class="token number">19</span>:13 cert.pem客户端证书-rw-r--r-- <span class="token number">1</span> root root <span class="token number">3247</span> May  <span class="token number">6</span> <span class="token number">19</span>:13 key.pem客户端证书私钥-rw-r--r-- <span class="token number">1</span> root root <span class="token number">1647</span> May  <span class="token number">6</span> <span class="token number">19</span>:12 server-cert.pem  服务端证书-rw-r--r-- <span class="token number">1</span> root root <span class="token number">3243</span> May  <span class="token number">6</span> <span class="token number">19</span>:11 server-key.pem服务端证书私钥<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置Docker支持TLS"><a href="#配置Docker支持TLS" class="headerlink" title="配置Docker支持TLS"></a>配置Docker支持TLS</h2><ul><li>用vim编辑器修改docker.service文件；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vim /usr/lib/systemd/system/docker.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改以<code>ExecStart</code>开头的配置，开启TLS认证，并配置好CA证书、服务端证书和服务端私钥，修改内容如下；</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sockExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375 --tlsverify --tlscacert=/mydata/docker-ca/ca.pem --tlscert=/mydata/docker-ca/server-cert.pem --tlskey=/mydata/docker-ca/server-key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>重启Docker服务，这样我们的Docker服务就支持使用TLS进行远程访问了！</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl daemon-reload &amp;&amp; systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="客户端访问"><a href="#客户端访问" class="headerlink" title="客户端访问"></a>客户端访问</h2><ul><li>直接使用<code>docker-maven-plugin</code>打包试试，由于我们的插件版本有点低，使用新一点版本的Docker会出现如下问题，升级到<code>1.2.2</code>版本解决该问题；</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.spotify<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>docker-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>修改完版本后打包，发现TLS不再支持<code>http</code>了，需要改用<code>https</code>，修改<code>&lt;dockerHost&gt;</code>配置为<code>https</code>；</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.host</span><span class="token punctuation">&gt;</span></span>https://120.79.150.12:2375<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.host</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>本地机器在指定目录添加客户端证书比如：<code>D:\tools\docker-ca</code></li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">ca.pemCA证书cert.pem客户端证书key.pem客户端证书私钥<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>然后将该目录配置在插件的<code>&lt;dockerCertPath&gt;</code>节点下，最终插件配置如下；</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 打包 --&gt;</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.spotify<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>docker-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>build-image<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>build<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>imageName</span><span class="token punctuation">&gt;</span></span>eladmin/${project.artifactId}:${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>imageName</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dockerHost</span><span class="token punctuation">&gt;</span></span>${docker.host}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dockerHost</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>baseImage</span><span class="token punctuation">&gt;</span></span>java:8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>baseImage</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entryPoint</span><span class="token punctuation">&gt;</span></span>["java", "-jar", "-Dspring.profiles.active=prod","/${project.build.finalName}.jar"]                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entryPoint</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dockerCertPath</span><span class="token punctuation">&gt;</span></span>D:\tools\docker-ca<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dockerCertPath</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>${project.build.directory}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>${project.build.finalName}.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>           <span class="token comment">&lt;!--跳过单元测试--&gt;</span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">&gt;</span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>执行命令<code>mvn package</code>，发现已经可以成功打包镜像，从此我们的<code>2375</code>端口终于可以安全使用了！</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@iZwz9c743j35koyx2hety8Z docker-ca]# docker imagesREPOSITORY                    TAG       IMAGE ID       CREATED         SIZEjceadmin/jceadmin-system      2.6       583ebe19f084   5 hours ago     759MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="服务器中使用Docker推送镜像到Docker-Hub"><a href="#服务器中使用Docker推送镜像到Docker-Hub" class="headerlink" title="服务器中使用Docker推送镜像到Docker Hub"></a>服务器中使用Docker推送镜像到Docker Hub</h1><ul><li>登录Docker</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker login# 输入用户名,密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>Docker Hub创建仓库</p><ul><li>参考如何使用<a href="https://hub.docker.com/">Docker Hub创建仓库</a></li></ul></li><li><p>使用如下命令行推送镜像</p></li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker tag local-image:tagname new-repo:tagnamedocker push new-repo:tagname<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>对镜像打标签</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker tag eladmin/eladmin-system:2.6 sirniclolas/jceadmin-system:22.05<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>推送到Docker Hub</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker push sirniclolas/jceadmin-system:22.05<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><p><a href="http://www.macrozheng.com/mall/reference/docker_maven.html#%E5%9C%A8%E5%BA%94%E7%94%A8%E7%9A%84pom-xml%E6%96%87%E4%BB%B6%E4%B8%AD%E6%B7%BB%E5%8A%A0docker-maven-plugin%E7%9A%84%E4%BE%9D%E8%B5%96">Mall项目官方博客</a> </p></li><li><p><a href="https://el-admin.vip/">Eladmin项目技术文档</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/05/08/Ascii%E5%AE%8C%E6%95%B4%E7%A0%81%E8%A1%A8(256%E4%B8%AA)/"/>
      <url>/2022/05/08/Ascii%E5%AE%8C%E6%95%B4%E7%A0%81%E8%A1%A8(256%E4%B8%AA)/</url>
      
        <content type="html"><![CDATA[<p><strong>ASCII码表</strong></p><table><thead><tr><th><strong>ASCII值</strong></th><th><strong>控制字符</strong></th><th><strong>ASCII值</strong></th><th><strong>控制字符</strong></th><th><strong>ASCII值</strong></th><th><strong>控制字符</strong></th><th><strong>ASCII值</strong></th><th><strong>控制字符</strong></th></tr></thead><tbody><tr><td>0</td><td>NUL</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>！</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>”</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>‘</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>/</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>X</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>\</td><td>124</td><td>|</td></tr><tr><td>29</td><td>GS</td><td>61</td><td>=</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>~</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>—</td><td>127</td><td>DEL</td></tr></tbody></table><p><strong>ASCII诠释部分</strong></p><p><strong>1.ASCII中的0<del>31为控制字符；32</del>126为打印字符；127为Delete(删除)命令。下表为控制字符释义。</strong></p><table><thead><tr><th><strong>十进制</strong></th><th><strong>十六进制</strong></th><th><strong>字符</strong></th><th><strong>十进制</strong></th><th><strong>十六进制</strong></th><th><strong>字符</strong></th></tr></thead><tbody><tr><td>0</td><td>00</td><td>空</td><td>16</td><td>10</td><td>数据链路转意</td></tr><tr><td>1</td><td>01</td><td>头标开始</td><td>17</td><td>11</td><td>设备控制 1</td></tr><tr><td>2</td><td>02</td><td>正文开始</td><td>18</td><td>12</td><td>设备控制 2</td></tr><tr><td>3</td><td>03</td><td>正文结束</td><td>19</td><td>13</td><td>设备控制 3</td></tr><tr><td>4</td><td>04</td><td>传输结束</td><td>20</td><td>14</td><td>设备控制 4</td></tr><tr><td>5</td><td>05</td><td>查询</td><td>21</td><td>15</td><td>反确认</td></tr><tr><td>6</td><td>06</td><td>确认</td><td>22</td><td>16</td><td>同步空闲</td></tr><tr><td>7</td><td>07</td><td>震铃</td><td>23</td><td>17</td><td>传输块结束</td></tr><tr><td>8</td><td>08</td><td>backspace</td><td>24</td><td>18</td><td>取消</td></tr><tr><td>9</td><td>09</td><td>水平制表符</td><td>25</td><td>19</td><td>媒体结束</td></tr><tr><td>10</td><td>0A</td><td>换行/新行</td><td>26</td><td>1A</td><td>替换</td></tr><tr><td>11</td><td>0B</td><td>竖直制表符</td><td>27</td><td>1B</td><td>转意</td></tr><tr><td>12</td><td>0C</td><td>换页/新页</td><td>28</td><td>1C</td><td>文件分隔符</td></tr><tr><td>13</td><td>0D</td><td>回车</td><td>29</td><td>1D</td><td>组分隔符</td></tr><tr><td>14</td><td>0E</td><td>移出</td><td>30</td><td>1E</td><td>记录分隔符</td></tr><tr><td>15</td><td>0F</td><td>移入</td><td>31</td><td>1F</td><td>单元分隔符</td></tr></tbody></table><p><strong>2.ASCII扩展字符——（为了适应更多字符）128<del>255，或者-128</del>-1,其中，-128对应128，依次递增对应。</strong></p><table><thead><tr><th><strong>十进制</strong></th><th><strong>十六进制</strong></th><th><strong>字符</strong></th><th><strong>十进制</strong></th><th><strong>十六进制</strong></th><th><strong>字符</strong></th></tr></thead><tbody><tr><td>128</td><td>80</td><td>Ç</td><td>192</td><td>C0</td><td>└</td></tr><tr><td>129</td><td>81</td><td>ü</td><td>193</td><td>C1</td><td>┴</td></tr><tr><td>130</td><td>82</td><td>é</td><td>194</td><td>C2</td><td>┬</td></tr><tr><td>131</td><td>83</td><td>â</td><td>195</td><td>C3</td><td>├</td></tr><tr><td>132</td><td>84</td><td>ä</td><td>196</td><td>C4</td><td>─</td></tr><tr><td>133</td><td>85</td><td>à</td><td>197</td><td>C5</td><td>┼</td></tr><tr><td>134</td><td>86</td><td>å</td><td>198</td><td>C6</td><td>╞</td></tr><tr><td>135</td><td>87</td><td>ç</td><td>199</td><td>C7</td><td>╟</td></tr><tr><td>136</td><td>88</td><td>ê</td><td>200</td><td>C8</td><td>╚</td></tr><tr><td>137</td><td>89</td><td>ë</td><td>201</td><td>C9</td><td>╔</td></tr><tr><td>138</td><td>8A</td><td>è</td><td>202</td><td>CA</td><td>╩</td></tr><tr><td>139</td><td>8B</td><td>ï</td><td>203</td><td>CB</td><td>╦</td></tr><tr><td>140</td><td>8C</td><td>î</td><td>204</td><td>CC</td><td>╠</td></tr><tr><td>141</td><td>8D</td><td>ì</td><td>205</td><td>CD</td><td>═</td></tr><tr><td>142</td><td>8E</td><td>Ä</td><td>206</td><td>CE</td><td>╬</td></tr><tr><td>143</td><td>8F</td><td>Å</td><td>207</td><td>CF</td><td>╧</td></tr><tr><td>144</td><td>90</td><td>É</td><td>208</td><td>D0</td><td>╨</td></tr><tr><td>145</td><td>91</td><td>æ</td><td>209</td><td>D1</td><td>╤</td></tr><tr><td>146</td><td>92</td><td>Æ</td><td>210</td><td>D2</td><td>╥</td></tr><tr><td>147</td><td>93</td><td>ô</td><td>211</td><td>D3</td><td>╙</td></tr><tr><td>148</td><td>94</td><td>ö</td><td>212</td><td>D4</td><td>Ô</td></tr><tr><td>149</td><td>95</td><td>ò</td><td>213</td><td>D5</td><td>╒</td></tr><tr><td>150</td><td>96</td><td>û</td><td>214</td><td>D6</td><td>╓</td></tr><tr><td>151</td><td>97</td><td>ù</td><td>215</td><td>D7</td><td>╫</td></tr><tr><td>152</td><td>98</td><td>ÿ</td><td>216</td><td>D8</td><td>╪</td></tr><tr><td>153</td><td>99</td><td>Ö</td><td>217</td><td>D9</td><td>┘</td></tr><tr><td>154</td><td>9A</td><td>Ü</td><td>218</td><td>DA</td><td>┌</td></tr><tr><td>155</td><td>9B</td><td>¢</td><td>219</td><td>DB</td><td>█</td></tr><tr><td>156</td><td>9C</td><td>£</td><td>220</td><td>DC</td><td>▄</td></tr><tr><td>157</td><td>9D</td><td>¥</td><td>221</td><td>DD</td><td>▌</td></tr><tr><td>158</td><td>9E</td><td>?</td><td>222</td><td>DE</td><td>?</td></tr><tr><td>159</td><td>9F</td><td>ƒ</td><td>223</td><td>DF</td><td>?</td></tr><tr><td>160</td><td>A0</td><td>á</td><td>224</td><td>E0</td><td>α</td></tr><tr><td>161</td><td>A1</td><td>í</td><td>225</td><td>E1</td><td>ß</td></tr><tr><td>162</td><td>A2</td><td>ó</td><td>226</td><td>E2</td><td>Γ</td></tr><tr><td>163</td><td>A3</td><td>ú</td><td>227</td><td>E3</td><td>π</td></tr><tr><td>164</td><td>A4</td><td>ñ</td><td>228</td><td>E4</td><td>Σ</td></tr><tr><td>165</td><td>A5</td><td>Ñ</td><td>229</td><td>E5</td><td>σ</td></tr><tr><td>166</td><td>A6</td><td>ª</td><td>230</td><td>E6</td><td>µ</td></tr><tr><td>167</td><td>A7</td><td>º</td><td>231</td><td>E7</td><td>τ</td></tr><tr><td>168</td><td>A8</td><td>¿</td><td>232</td><td>E8</td><td>Φ</td></tr><tr><td>169</td><td>A9</td><td>?</td><td>233</td><td>E9</td><td>Θ</td></tr><tr><td>170</td><td>AA</td><td>¬</td><td>234</td><td>EA</td><td>Ω</td></tr><tr><td>171</td><td>AB</td><td>½</td><td>235</td><td>EB</td><td>δ</td></tr><tr><td>172</td><td>AC</td><td>¼</td><td>236</td><td>EC</td><td>∞</td></tr><tr><td>173</td><td>AD</td><td>¡</td><td>237</td><td>ED</td><td>φ</td></tr><tr><td>174</td><td>AE</td><td>«</td><td>238</td><td>EE</td><td>ε</td></tr><tr><td>175</td><td>AF</td><td>»</td><td>239</td><td>EF</td><td>∩</td></tr><tr><td>176</td><td>B0</td><td>?</td><td>240</td><td>F0</td><td>≡</td></tr><tr><td>177</td><td>B1</td><td>?</td><td>241</td><td>F1</td><td>±</td></tr><tr><td>178</td><td>B2</td><td>▓</td><td>242</td><td>F2</td><td>≥</td></tr><tr><td>179</td><td>B3</td><td>│</td><td>243</td><td>F3</td><td>≤</td></tr><tr><td>180</td><td>B4</td><td>┤</td><td>244</td><td>F4</td><td>?</td></tr><tr><td>181</td><td>B5</td><td>╡</td><td>245</td><td>F5</td><td>?</td></tr><tr><td>182</td><td>B6</td><td>╢</td><td>246</td><td>F6</td><td>÷</td></tr><tr><td>183</td><td>B7</td><td>╖</td><td>247</td><td>F7</td><td>≈</td></tr><tr><td>184</td><td>B8</td><td>╕</td><td>248</td><td>F8</td><td>≈</td></tr><tr><td>185</td><td>B9</td><td>╣</td><td>249</td><td>F9</td><td>?</td></tr><tr><td>186</td><td>BA</td><td>║</td><td>250</td><td>FA</td><td>·</td></tr><tr><td>187</td><td>BB</td><td>╗</td><td>251</td><td>FB</td><td>√</td></tr><tr><td>188</td><td>BC</td><td>╝</td><td>252</td><td>FC</td><td>?</td></tr><tr><td>189</td><td>BD</td><td>╜</td><td>253</td><td>FD</td><td>²</td></tr><tr><td>190</td><td>BE</td><td>╛</td><td>FE</td><td>■</td><td></td></tr><tr><td>191</td><td>BF</td><td>┐</td><td>255</td><td>FF</td><td>ÿ</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>五月计划</title>
      <link href="/2022/05/02/%E4%BA%94%E6%9C%88%E8%AE%A1%E5%88%92/"/>
      <url>/2022/05/02/%E4%BA%94%E6%9C%88%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="2022-05-01-计划安排"><a href="#2022-05-01-计划安排" class="headerlink" title="2022-05-01 计划安排"></a>2022-05-01 计划安排</h1><h2 id="四月总结"><a href="#四月总结" class="headerlink" title="四月总结"></a>四月总结</h2><h3 id="完成任务"><a href="#完成任务" class="headerlink" title="完成任务"></a>完成任务</h3><ul><li>eladmin开源项目<ul><li>环境部署(Linux下使用docker部署项目)</li></ul></li><li>mall电商项目<ul><li>基础知识储备</li><li>项目部署</li></ul></li><li>Netty框架<ul><li>client - gateway - zookeeper - redis - netty servers 架构</li><li>client - server 聊天室tiny版本造轮子</li></ul></li><li>SpringBoot框架<ul><li>SpringBoot,SpringMVC公开课</li><li>SpringBoot整合JPA，spring-data-jpa-demo</li><li>SpringBoot整合Mybatis</li><li>SpringSecurity整合SpringBoot</li><li>SpringBoot整合Swagger2</li></ul></li><li>服务器<ul><li>腾讯云、阿里云体验</li><li>域名、SSL证书、DNS解析</li><li>网站备案、公安联网备案</li><li>对象存储</li><li>CDN加速</li></ul></li><li>个人博客篇<ul><li>wordpress<ul><li><a href="https://cloud.tencent.com/document/product/213/8044" title="手动搭建 WordPress 个人站点（Linux）">参考腾讯云博客搭建文档</a></li></ul></li><li>halo<ul><li><a href="https://qinhua.github.io/halo-theme-joe2.0/#/?id=%E2%9A%A0%ef%b8%8f-%E5%BF%85%E8%AF%BB" title="halo主题-joe2.0">joe2.0</a></li></ul></li><li>hexo<ul><li><a href="https://github.com/blinkfox/hexo-theme-matery" title="一款好看的博客主题">hexo-theme-matery</a></li></ul></li><li>⚡️Docusaurus<ul><li><a href="https://docusaurus.io/" title="开箱即用的文档网站">官网地址</a></li></ul></li><li>leanote</li><li>vuepress-theme-hope<ul><li><a href="https://vuepress-theme-hope.github.io/v2/zh/" title="基于vue搭建的静态网站主题">vuepress-theme-hope</a></li></ul></li></ul></li><li>Linux 环境部署、应用安装、卸载、常用命令</li><li>工具篇<ul><li>Maven工具学习<ul><li>掌握基础组件的功能 <a href="https://javacoldly.xyz/archives/maven-basic" title="maven入门使用">maven 入门使用</a></li></ul></li><li><code>JProfiler</code>工具<ul><li>JProfiler 服务端、客户端应用安装<ul><li>具体步骤参考： <a href="http://javacoldly.xyz/archives/jvm-jprofiler" title="windows中使用jprofiler监控jvm进程">JVM监控</a></li></ul></li></ul></li><li>Idea破解插件安装<ul><li><a href="https://www.exception.site/essay/idea-reset-eval" title="idea2022.1版本破解">idea破解参考</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&amp;mid=2247484930&amp;idx=1&amp;sn=06c0bde37d6d82e213b4aa733bc6016b&amp;scene=21#wechat_redirect" title="idea常用插件">常用插件</a></li></ul></li></ul></li></ul><h1 id="五月计划"><a href="#五月计划" class="headerlink" title="五月计划"></a>五月计划</h1><h1 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h1><h2 id="Eladmin项目"><a href="#Eladmin项目" class="headerlink" title="Eladmin项目"></a>Eladmin项目</h2><ul><li><p>功能模块</p></li><li><p><input disabled="" type="checkbox">  用户管理</p></li><li><p><input disabled="" type="checkbox">  角色管理</p></li><li><p><input disabled="" type="checkbox">  菜单管理</p></li><li><p><input disabled="" type="checkbox">  部门管理</p></li><li><p><input disabled="" type="checkbox">  岗位管理</p></li><li><p><input disabled="" type="checkbox">  字典管理</p></li><li><p><input disabled="" type="checkbox">  系统日志</p></li><li><p><input disabled="" type="checkbox">  SQL监控</p></li><li><p><input disabled="" type="checkbox">  定时任务</p></li><li><p><input disabled="" type="checkbox">  代码生成</p></li><li><p><input disabled="" type="checkbox">  邮件工具</p></li><li><p><input disabled="" type="checkbox">  七牛云存储</p></li><li><p><input disabled="" type="checkbox">  支付宝支付</p></li><li><p><input disabled="" type="checkbox">  服务监控</p></li><li><p><input disabled="" type="checkbox">  运维管理</p></li><li><p>完成效果</p></li><li><p><input disabled="" type="checkbox">  支持数字字典</p></li><li><p><input disabled="" type="checkbox">  前后端代码一键生成</p></li><li><p><input disabled="" type="checkbox">  支持接口级别限流</p></li><li><p><input disabled="" type="checkbox">  支持接口级别的权限和数据权限</p></li><li><p><input disabled="" type="checkbox">  自定义权限注解和匿名接口注解</p></li><li><p><input disabled="" type="checkbox">  表格数据请求、数据字典前端组件封装</p></li><li><p><input disabled="" type="checkbox">  前后端统一异常处理，统一输出异常</p></li><li><p><input disabled="" type="checkbox">  支持在线用户管理和服务器性能监控，支持限制单用户登录</p></li><li><p><input disabled="" type="checkbox">  支持运维管理，可远程部署管理服务器</p></li><li><p>技术栈</p></li><li><p>Spring Boot 2.1.0</p></li><li><p>Spring Boot Jpa</p></li><li><p>JWT</p></li><li><p>Spring Security</p></li><li><p>Redis</p></li><li><p>Vue</p></li><li><p>Element-UI</p></li></ul><h2 id="mall电商项目"><a href="#mall电商项目" class="headerlink" title="mall电商项目"></a>mall电商项目</h2><h2 id="后台管理系统mall-admin"><a href="#后台管理系统mall-admin" class="headerlink" title="后台管理系统mall-admin"></a>后台管理系统<code>mall-admin</code></h2><ul><li><p><input disabled="" type="checkbox">  商品管理</p></li><li><p><input disabled="" type="checkbox">  订单管理</p></li><li><p><input disabled="" type="checkbox">  促销管理</p></li><li><p><input disabled="" type="checkbox">  内容管理</p></li><li><p><input disabled="" type="checkbox">  用户管理</p><hr></li><li><p><input disabled="" type="checkbox">  会员管理</p></li><li><p><input disabled="" type="checkbox">  运营管理</p></li><li><p><input disabled="" type="checkbox">  统计报表</p></li><li><p><input disabled="" type="checkbox">  财务管理</p></li><li><p><input disabled="" type="checkbox">  设置</p></li></ul><h2 id="前台商城APImall-portal"><a href="#前台商城APImall-portal" class="headerlink" title="前台商城APImall-portal"></a>前台商城API<code>mall-portal</code></h2><ul><li><p><input disabled="" type="checkbox">  首页门户</p></li><li><p><input disabled="" type="checkbox">  商品推荐</p></li><li><p><input disabled="" type="checkbox">  商品搜索</p></li><li><p><input disabled="" type="checkbox">  商品展示</p></li><li><p><input disabled="" type="checkbox">  购物车</p></li><li><p><input disabled="" type="checkbox">  订单流程</p></li><li><p><input disabled="" type="checkbox">  会员中心</p></li><li><p><input disabled="" type="checkbox">  客户服务</p></li><li><p><input disabled="" type="checkbox">  帮助中心</p></li></ul><h2 id="mall-learning"><a href="#mall-learning" class="headerlink" title="mall learning"></a>mall learning</h2><ul><li><p>架构篇</p></li><li><p><a href="https://juejin.im/post/5cf7c4a7e51d4577790c1c50">mall整合SpringBoot+MyBatis搭建基本骨架</a></p></li><li><p><a href="https://juejin.im/post/5cf9035cf265da1bb47d54f8">mall整合Swagger-UI实现在线API文档</a></p></li><li><p><a href="https://juejin.im/post/5cf90e9ee51d454f6f16eba0">mall整合Redis实现缓存功能</a></p></li><li><p><a href="https://juejin.im/post/5cf90fa5e51d455d6d5357d3">mall整合SpringSecurity和JWT实现认证和授权（一）</a></p></li><li><p><a href="https://juejin.im/post/5cfa0933f265da1b8f1ab2da">mall整合SpringSecurity和JWT实现认证和授权（二）</a></p></li><li><p><a href="https://juejin.im/post/5cfa0ea16fb9a07eaf2b8261">mall整合SpringTask实现定时任务</a></p></li><li><p><a href="https://juejin.im/post/5cfba3e9f265da1b614fea60">mall整合Elasticsearch实现商品搜索</a></p></li><li><p><a href="https://juejin.im/post/5cfba5b0f265da1bcc1933fe">mall整合Mongodb实现文档操作</a></p></li><li><p><a href="https://juejin.im/post/5cff98986fb9a07ed36ea139">mall整合RabbitMQ实现延迟消息</a></p></li><li><p><a href="https://juejin.im/post/5cff9944e51d4577555508a9">mall整合OSS实现文件上传</a></p></li><li><p>业务</p><ul><li><a href="https://mp.weixin.qq.com/s/xKP2urANmYKjA7veWmyA_A">mall数据库表结构概览</a></li><li><a href="https://mp.weixin.qq.com/s/u0lWlqKRE_IJC4xjceUjog">商品模块数据库表解析（一）</a></li><li><a href="https://mp.weixin.qq.com/s/Wchi6FAElC0fFw0B3a3Hnw">商品模块数据库表解析（二）</a></li><li><a href="https://mp.weixin.qq.com/s/OcZQpT3b9YjR8xAZHblHAw">订单模块数据库表解析（一）</a></li></ul></li><li><p>部署</p><ul><li><a href="https://mp.weixin.qq.com/s/Q9ybpfq8IEdbZmvlaMXJdg">mall在Windows环境下的部署</a></li><li><a href="https://mp.weixin.qq.com/s/0fVMK107i5bBq8kGQqg8KA">mall在Linux环境下的部署（基于Docker容器）</a></li><li><a href="https://mp.weixin.qq.com/s/JYkvdub9DP5P9ULX4mehUw">mall在Linux环境下的部署（基于Docker Compose）</a></li><li><a href="https://mp.weixin.qq.com/s/_hlSxjpfOOetTpw0mL-Pxg">mall前端项目的安装与部署</a></li></ul></li></ul><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li><a href="https://book.douban.com/subject/26767354/">Spring实战（第4版）</a></li><li><a href="https://book.douban.com/subject/26857423/">Spring Boot实战</a></li><li><a href="https://book.douban.com/subject/27025912/">Spring Cloud微服务实战</a></li><li><a href="https://book.douban.com/subject/27028228/">Spring Cloud与Docker微服务架构实战</a></li><li><a href="https://book.douban.com/subject/25975186/">Spring Data实战</a></li><li><a href="https://book.douban.com/subject/27074809/">MyBatis从入门到精通</a></li><li><a href="https://book.douban.com/subject/25817684/">深入浅出MySQL</a></li><li><a href="https://book.douban.com/subject/26758194/">循序渐进Linux（第2版）</a></li><li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html">Elasticsearch 权威指南</a></li><li><a href="https://book.douban.com/subject/26967826/">Elasticsearch 技术解析与实战</a></li><li><a href="https://book.douban.com/subject/27061123/">MongoDB实战(第二版)</a></li><li><a href="https://book.douban.com/subject/26902153/">Kubernetes权威指南</a></li><li><a href="https://git-scm.com/book/zh/v2">Pro Git</a></li></ul><h1 id="算法学习"><a href="#算法学习" class="headerlink" title="算法学习"></a>算法学习</h1><h2 id="算法入门"><a href="#算法入门" class="headerlink" title="算法入门"></a>算法入门</h2><ul><li>视频</li><li>资料</li><li>leetcode刷题</li></ul><h1 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h1><ul><li>JavaGuide</li></ul><h1 id="书籍阅读"><a href="#书籍阅读" class="headerlink" title="书籍阅读"></a>书籍阅读</h1><ul><li><p>《IntelliJ-IDEA-Tutorial》：<a href="https://link.juejin.cn/?target=https://github.com/judasn/IntelliJ-IDEA-Tutorial">github.com/judasn/Inte…</a></p></li><li><p>《Spring实战（第4版）》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/26767354/">book.douban.com/subject/267…</a></p></li><li><p>《Spring Boot实战》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/26857423/">book.douban.com/subject/268…</a></p></li><li><p>《MyBatis从入门到精通》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/27074809/">book.douban.com/subject/270…</a></p></li><li><p>《深入浅出MySQL》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/25817684/">book.douban.com/subject/258…</a></p></li><li><p>《循序渐进Linux（第2版）》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/26758194/">book.douban.com/subject/267…</a></p></li><li><p>《Elasticsearch 权威指南》：<a href="https://link.juejin.cn/?target=https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html">www.elastic.co/guide/cn/el…</a></p></li><li><p>《Elasticsearch 技术解析与实战》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/26967826/">book.douban.com/subject/269…</a></p></li><li><p>《MongoDB实战(第二版)》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/27061123/">book.douban.com/subject/270…</a></p></li><li><p>《Spring Cloud与Docker微服务架构实战》：<a href="https://link.juejin.cn/?target=https://book.douban.com/subject/27028228/">book.douban.com/subject/270…</a></p></li></ul><hr>]]></content>
      
      
      
        <tags>
            
            <tag> plans </tag>
            
            <tag> concludes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署事故(一)</title>
      <link href="/2022/05/01/hexo%E4%BD%BF%E7%94%A8deploy%E6%8A%A5%E9%94%99/"/>
      <url>/2022/05/01/hexo%E4%BD%BF%E7%94%A8deploy%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Hexo部署报错"><a href="#使用Hexo部署报错" class="headerlink" title="使用Hexo部署报错"></a>使用<code>Hexo</code>部署报错</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">FATAL <span class="token punctuation">{</span>  err: Error: Spawn failed      at ChildProcess.<span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span> <span class="token punctuation">(</span>D:<span class="token punctuation">\</span>dev<span class="token punctuation">\</span>Individual<span class="token punctuation">\</span>website-hexo<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>hexo-util<span class="token punctuation">\</span>lib<span class="token punctuation">\</span>spawn.js:51:21<span class="token punctuation">)</span>      at ChildProcess.emit <span class="token punctuation">(</span>events.js:400:28<span class="token punctuation">)</span>      at ChildProcess.cp.emit <span class="token punctuation">(</span>D:<span class="token punctuation">\</span>dev<span class="token punctuation">\</span>Individual<span class="token punctuation">\</span>website-hexo<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>cross-spawn<span class="token punctuation">\</span>lib<span class="token punctuation">\</span>enoent.js:34:29<span class="token punctuation">)</span>      at Process.ChildProcess._handle.onexit <span class="token punctuation">(</span>internal/child_process.js:282:12<span class="token punctuation">)</span> <span class="token punctuation">{</span>    code: <span class="token number">1</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> Something's wrong. Maybe you can <span class="token function">find</span> the solution here: %s https://hexo.io/docs/troubleshooting.html<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>+  Done                    hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/hexo/blog/<span class="token function">rm</span> -rf .deploy_git/<span class="token function">git</span> config --global core.autocrlf <span class="token boolean">false</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端技术篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apesk性格测试</title>
      <link href="/2022/04/30/apesk%E6%80%A7%E6%A0%BC%E6%B5%8B%E8%AF%95-apesk-xing-ge-ce-shi/"/>
      <url>/2022/04/30/apesk%E6%80%A7%E6%A0%BC%E6%B5%8B%E8%AF%95-apesk-xing-ge-ce-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h1><p>才储分析：您的性格类型倾向为“ ISFP ”(内向 实感 情感 知觉 倾向度： I60 S52 F83 P52  不假思索指数：11)</p><p>沉静，友善，敏感和仁慈。欣赏目前和他们周遭所发生的事情。喜欢有自己的空间，做事又能把握自己的时间。忠于自己的价值观，忠于自己所重视的人。不喜欢争论和冲突，不会强迫别人接受自己的意见或价值观。</p><pre class="line-numbers language-none"><code class="language-none">ISFP型的人平和、敏感，他们保持着许多强烈的个人理想和自己的价值观念。他们更多地是通过行为而不是言辞表达自己深沉的情感。ISFP型的人谦虚而缄默，但实际上他们是具有巨大的友爱和热情之人，但是除了与他们 相知和信赖的人在一起外，他们不经常表现出自我的另一面。因为ISFP型的人不喜欢直接地自我表达，所以常常被误解。ISFP型的人耐心、灵活，很容易与他人相处，很少支配或控制别人。他们很客观，以一种相当实事求 是的方式接受他人的行为。他们善于观察周围的人和物，却不寻求发现动机和含义。 ISFP型的人完全生活在现在，所以他们的准备或计划往往不会多于必需，他们是很好的短期计划制定者。因为他们喜欢享受目前的经历， 而不继续向下一个目标兑现，所以他们对完成工作感到很放松。ISFP型的人对于从经历中直接了解和感受的东西很感兴趣，常常富有艺术天赋和审美感，力求为自己创造一个美丽而隐蔽的环境。没有想要成为领导者，ISFP 型的人经常是忠诚的追随者和团体成员。因为他们利用个人的价值标准去判断生活中的每一件事，所以他们喜欢那些花费时间去认识他们和理解他们内心的忠诚之人。他们需要最基本的信任和理解，在生活中需要和睦的人 际关系，对于冲突和分歧则很敏感。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="您适合的领域有：手工艺、艺术领域-医护领域-商业、服务业领域等"><a href="#您适合的领域有：手工艺、艺术领域-医护领域-商业、服务业领域等" class="headerlink" title="您适合的领域有：手工艺、艺术领域 医护领域 商业、服务业领域等"></a>您适合的领域有：手工艺、艺术领域 医护领域 商业、服务业领域等</h2><p>您适合的职业有：</p><ul><li>客户销售代表</li><li> 行政人员</li><li> 商品规划师</li><li> 测量师</li><li> 海洋生物学者</li><li> 厨师</li><li> 室内装潢设计师</li><li> 园艺设计师</li><li> 计算机软件界面设计</li><li> 旅游销售经理</li><li> 旅行社销售人员</li><li> 职业病理专业人员</li><li> 时装、首饰设计师</li><li> 陶器制作者</li><li> 乐器制作者</li><li> 卡通漫画制作者</li><li> 素描画家</li><li> 舞蹈演员</li><li> 画家</li><li> 出诊医生</li><li> 出诊护士</li><li> 理疗师</li><li> 牙科医生</li><li> 个人健康和运动教练</li><li> 体育用品、个人理疗用品销售员</li><li> 餐饮业、娱乐业业主</li></ul><h1 id="气质类型"><a href="#气质类型" class="headerlink" title="气质类型"></a>气质类型</h1><ul><li><p>根据大卫.凯尔西（David Keirsey）气质与性情理论，你属于“经验主义者”，下面是对“经验主义者”的描述：</p></li><li><p>“经验主义者”关注五官带给他们的信息，而且相信那些可以测量和证明的东西；同时喜欢面对各种各样的可能性，喜欢自由随意 的生活方式，是反应灵敏和自发主动的一种人。</p></li><li><p>“经验主义者”富冒险精神。他们最可贵的地方在于机智多谋，令人兴奋，而且很有趣。他们为行动、冲动和享受 现在而活着，一想到某件事情就有立即去做的冲动，而且喜欢一气呵成，一口气把事情做完；但又不喜欢太长时间做同一件事情，只 有很少的事情（如自己很喜欢的事情）能够长期坚持，多数情况下难以做到坚持不懈。他们关注于眼前的情况，对眼前的情况看得很 清楚，并能正确估计立即需要做什么。</p></li><li><p>他们崇尚自由和主动，很少选择需要太多结构和规则的活动和环境。他们适应能力强，随遇而 安而且注重实际。“经验主义者”喜欢有技巧性的活动。他们常常被认为是喜欢冒险、喜欢寻找刺激的人。</p></li><li><p>“经验主义者”喜欢可以提供自由、变化和行动的工作，喜欢那些能够有及时效果的工作，他们以能够巧妙而成功地完成工作为乐。 由于他们喜欢充满乐趣地生活，无论做什么必须让他们感到高度的乐趣，这样才能令他们感到满意。</p></li><li><p>“经验主义者”又分为两类，即思维型经验主义者和情感型经验主义者。一些情感型经验主义者并不完全符合“经验主义者”型的人 的性格特点，这是因为他们天性乐于帮助别人，希望自己的工作可以很快地改变他人的生活，喜欢做自己认为很有意义的事情。————而你正是情感型经验主义者。</p></li></ul><h1 id="总体描述"><a href="#总体描述" class="headerlink" title="总体描述"></a>总体描述</h1><ul><li>对人/事物观察敏锐。能够清楚地看到正在发生的事情，而且能够敏捷地抓住机会。</li><li>思维及行动反应敏捷、活跃，擅长随机应变。能够很快发现突然出现的实际问题，并灵活、勇敢而机智地解决问题。需要的时候，不会害怕冒险或者立即采取应急行动。</li><li>不墨守成规。</li><li>许多此类型成员尤为擅长使用工具和演奏乐器，这些东西可以被他们实际操作而且要求有一定的精确度。</li></ul><h1 id="潜在的弱点"><a href="#潜在的弱点" class="headerlink" title="潜在的弱点"></a>潜在的弱点</h1><ul><li>因为喜欢面对各种各样的可能性，他们不能一直遵守已建立的规则，有时会逃避约束或计划。</li><li>他们有时会在没有认真考虑的情况下就行动。</li></ul><h1 id="优势与劣势"><a href="#优势与劣势" class="headerlink" title="优势与劣势"></a>优势与劣势</h1><ul><li><code>ISFP</code>的特质： 艺术家型——用有形的作品展示丰富内心世界</li></ul><h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><ul><li>你和蔼、友善、敏感，谦虚地看待自己的能力。你能平静愉悦地享受目前的生活，喜欢体验。珍视自由自在地安排自己的活动，有自己的空间，支配自己的时间。</li><li>你善于观察、务实、讲求实际，了解现实和周围的人，并且能够灵活地对他们的情况和需要做出反应，但很少寻求其动机和含义。你是优秀的短期规划者，能够全身心地投到此时此刻的工作中，喜欢享受现今的经验而不是迅速冲往下一个挑战。</li><li>你有耐心，易通融，很好相处。你没有领导别人的愿望，往往是忠实的跟随者和很好的合作伙伴。你很客观，而且能以一种实事求是的态度接受他人的行为，但你需要基本的信任和理解，需要和睦的人际关系，而且对矛盾和异议很敏感。</li><li>你很有艺术天份，对自然的美丽情有独钟，对直接从经验中和感觉中得到的信息非常感兴趣，喜欢为自己创造一种幽雅而个性化的环境，你希望为社会的福利和人类的幸福做些贡献。你内心深沉，其实很热情，不太喜欢表现。</li></ul><h1 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h1><ul><li><p>你完全着眼于现在，从不喜欢寻找和发现那些你认为不存在的可能性,这使你无法发现更广阔的前景,也不能为将来做打算,不能很好地安排时间和精力。</p></li><li><p>你天生对他人具有高度的敏感,总是难以拒绝别人，有时为了满足他人的需求而拼命地工作，以至于在此过程中忽视了自己。</p></li><li><p>你过分忽视事物之间的内在联系和逻辑思考,难以理解复杂的事情。</p></li><li><p>你对他人的批评会感到生气或气馁，有时容易过分自责。你容易相信别人，很少对别人的动机有所怀疑，也不会发现别人行为背后的隐含意义。你们需要更注重自己的需求，而且要对别人的行为加以分析。在分析中加入一些客观和怀疑的态度会让你们更准确地判断人的性格。</p></li></ul><pre class="line-numbers language-none"><code class="language-none">伟大的艺术家的最神秘之处在于，处于某种未知的原因，他将用自己的能量和生命来完全证实，一个接一个的想法......让我们感觉到，有某些事情是确实存在的。———— 伯恩斯坦<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 科普文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apesk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机科学-wiki百科</title>
      <link href="/2022/04/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6-wiki%E7%99%BE%E7%A7%91-cs/"/>
      <url>/2022/04/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6-wiki%E7%99%BE%E7%A7%91-cs/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机科学"><a href="#计算机科学" class="headerlink" title="计算机科学"></a>计算机科学</h1><ul><li>1    历史<ul><li>1.1    主要成就</li></ul></li><li>2    哲学</li><li>3    计算机科学的领域<ul><li>3.1    理论计算机科学<ul><li>3.1.1    数据结构和算法</li><li>3.1.2    计算理论</li><li>3.1.3    信息论与编码理论</li><li>3.1.4    编程语言和编译器</li><li>3.1.5    形式化方法</li></ul></li><li>3.2    计算机系统<ul><li>3.2.1    计算机体系结构与计算机工程</li><li>3.2.2    操作系统</li><li>3.2.3    并发、并行与分布式系统</li><li>3.2.4    计算机网络</li><li>3.2.5    计算机安全和密码学</li><li>3.2.6    数据库</li></ul></li><li>3.3    计算机应用技术<ul><li>3.3.1    计算机图形学</li><li>3.3.2    科学计算</li><li>3.3.3    多媒体技术</li><li>3.3.4    人工智能</li></ul></li><li>3.4    软件工程</li></ul></li><li>4    学术界<ul><li>4.1    会议</li><li>4.2    期刊</li></ul></li><li>5    作为高等教育的二级专业</li><li>6    工业界</li><li>7    参考文献</li><li>8    延伸阅读<pre class="line-numbers language-none"><code class="language-none">计算机科学（英语：Computer science，有时缩写为CS）是系统性研究信息与计算的理论基础以及它们在计算机系统中如何实现与应用的实用技术的学科。[7] [8]它通常被形容为对那些创造、描述以及转换信息的算法处理的系统研究。计算机科学包含很多分支领域；有些强调特定结果的计算，比如计算机图形学；而有些是探讨计算问题的性质，比如计算复杂性理论；还有一些领域专注于怎样实现计算，比如编程语言理论是研究描述计算的方法，而程序设计是应用特定的编程语言解决特定的计算问题，人机交互则是专注于怎样使计算机和计算变得有用、好用，以及随时随地为人所用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">计算机科学被认为比其它科学学科与数学的联系更加密切，一些观察者说计算就是一门数学科学。[12] 早期计算机科学受数学研究成果的影响很大，如库尔特·哥德尔、艾伦·图灵、路莎·彼得，阿隆佐·邱奇等数学家的研究，这两个领域在某些学科，例如数理逻辑、范畴论、域理论和代数，也不断有有益的思想交流。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h1><pre class="line-numbers language-none"><code class="language-none">早期计算机科学创建的基础得追溯到最近电子计算机的发明。那些计算固定数值任务的机器，比如算盘，自古希腊时期即已存在，而用于加快计算的算法更是在算盘等古老的计算仪器发明之前就已被广泛使用。Wilhelm Schickard在1623年设计了世界上第一台机械计算器，但没有完成它的建造。[13]布莱兹·帕斯卡在1642年设计并且建造了世界上第一台可以工作的机械计算器Pascaline。1673年，莱布尼兹开始了步进计算器的建造工作并于1694年竣工，他也因为记录了二进制系统而被认为是第一个计算机科学家和信息理论家。埃达·洛夫莱斯协助查尔斯·巴贝奇在维多利亚时代设计了差分机[14][15]。1900年左右，打孔机问世[16]。然而以上这些机器都局限在只能完成单个任务，或者充其量是所有可能任务的子集。到了20世纪40年代，随着更新更强大的计算机器(如ABC计算机、电子数值积分计算机)被发明，术语“计算机”开始用于指代那些机器而不是它们的祖先。[17]计算机的概念变得更加清晰，它不仅仅用于数学运算，总的来说计算机科学的领域也扩展到了对于计算的研究。20世纪50年代至20世纪60年代早期，计算机科学开始被确立为不同种类的学术学科。[18] 世界上第一个计算机科学学位点由普渡大学在1962年设立。[19]随着实用计算机的出现，很多计算的应用都以它们自己的方式逐渐转变成了研究的不同领域。虽然最初很多人并不相信计算机可能成为科学研究的领域，但是随后的50年里也逐渐被学术界认可。[20]IBM公司是那段时期计算机科学革命的参与者之一。在那段探索时期，IBM（International Business Machines的缩写）发布的IBM 704以及之后的IBM 709计算机被广泛使用。“不过，使用IBM电脑工作仍然是一件很沮丧的事情。如果你弄错了一条指令中的一个字母，程序将会崩溃，而你也得从头再来。”[20]20世纪50年代后期，计算机科学学科还在发展阶段，这种问题在当时是一件很常见的事情。随着时间的推移，计算机科学技术在可用性和有效性上都有显著提升。现代社会见证了计算机从仅仅由专业人士使用到被广大用户接受的重大转变。最初，计算机非常昂贵，要有效利用它们，某种程度上必须得由专业的计算机操作员来完成。然而，随着计算机变得普及和低廉，已经几乎不需要专人的协助，虽然某些时候援助依旧存在。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="主要成就"><a href="#主要成就" class="headerlink" title="主要成就"></a>主要成就</h1><pre class="line-numbers language-none"><code class="language-none">虽然计算机科学被认定为一门正规学科的历史很短暂，但它对科学和社会做出了许多根本性的贡献ー事实上，计算机科学与电子学一样，是信息时代的奠基科学，也是信息革命的驱动力，被视为继工业革命（公元1750-1850年）和新石器革命（公元前8000-5000年）之后人类技术进步的第三次重大飞跃。这些贡献包括：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>开启“数字化革命”，包括当今的信息时代和互联网。[22]</li><li>对计算和可计算性的形式定义，证明了存在计算上不可解及难解型问题。[23]</li><li>提出编程语言的概念，作为一种使用不同的抽象层次来精确表达进程的工具。[24]</li><li>在密码学领域，恩尼格玛密码机的破译被视为盟军在二战获取胜利的重要因素。[21]</li><li>科学计算让分析实际中非常复杂的过程和场景成为可能，可以完全借助软件来进行一些实验。同时也实现了对人类思想的深入研究，使得人类基因组计划绘制人类基因成为可能。[22] 还有探索蛋白质折叠的分布式计算项目Folding@home。</li><li>算法交易通过使用人工智能、机器学习和其他大规模的统计和数值方法，提高了金融市场的效率和流通性。[25] 高频率的算法交易也会加快波动性。[26]</li><li>计算机图形和电脑成像（CGI）在现代娱乐中无处不在，尤其是在电视、电影、广告、动画和视频游戏中。即便是没有用到CGI技术的电影，通常也是用数字相机拍摄，或者使用数字视频编辑器剪辑或后期处理过的。[27][28]</li><li>仿真各种过程，包括计算流体动力学、物理、电气和电子系统和电路，以及同人类居住地联系在一起的社会和社会形态（尤其是战争游戏，war games）。现代计算机能够对这些设计进行优化，如飞机设计。尤其在电气与电子电路设计中，SPICE软件对新的物理实现（或修改）设计具有很大帮助。[29] 它包含了针对集成电路的基本设计软件。[来源请求]</li><li>人工智能变得越来越重要，因为它变得更加高效和复杂。人工智能的应用有很多，其中一些可以在家里看到，比如机器人吸尘器。它也出现在视频游戏和现代战场上的无人机、反导弹系统和小队支持机器人中。[30]</li><li>人机交互将新颖的算法与设计策略相结合，可实现快速的人类绩效，低错误率，易于学习和高度满意度。研究人员利用人种学观察和自动化数据收集来了解用户需求，然后进行可用性测试来完善设计。关键的创新包括直接操纵、可选择的网页链接、触摸屏设计、移动应用程序和虚拟现实。</li><li><h1 id="哲学"><a href="#哲学" class="headerlink" title="哲学"></a>哲学</h1><pre class="line-numbers language-none"><code class="language-none">Peter Wegner提出计算机科学可以分成三个领域：数学、工程学、科学。Amnon H. Eden提议了三种范式应用于计算机科学的各个领域：[31]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>“理性主义范式”，将计算机科学看作是数学的分支，在理论计算机科学中很流行，主要利用演绎推理。</li><li>“技术专家范式”，这类范式有着很明显的工程学倾向，尤其是在软件工程领域。</li><li>“科学范式”，人工智能的某些分支可以作为这类范式的代表（比如说对于人工生命的研究）。<h1 id="计算机科学的领域"><a href="#计算机科学的领域" class="headerlink" title="计算机科学的领域"></a>计算机科学的领域</h1></li></ul><pre class="line-numbers language-none"><code class="language-none">作为一个学科，计算机科学涵盖了从算法的理论研究和计算的极限，到如何通过硬件和软件实现计算系统。[32][33] CSAB（以前被叫做Computing Sciences Accreditation Board），由Association for Computing Machinery（ACM）和IEEE计算机协会（IEEE-CS）的代表组成[34]，确立了计算机科学学科的4个主要领域：计算理论，算法与数据结构，编程方法与编程语言，以及计算机组成与架构。CSAB还确立了其它一些重要领域，如软件工程，人工智能，计算机网络与通信，数据库系统，并行计算，分布式计算，人机交互，计算机图形学，操作系统，以及数值和符号计算。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="理论计算机科学"><a href="#理论计算机科学" class="headerlink" title="理论计算机科学"></a>理论计算机科学</h1><pre class="line-numbers language-none"><code class="language-none">广义的理论计算机科学包括经典的计算理论和其它专注于更抽象、逻辑与数学方面的计算。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="数据结构和算法"><a href="#数据结构和算法" class="headerlink" title="数据结构和算法"></a>数据结构和算法</h1><ul><li><a href="/upload/2022/04/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.png">算法分析</a></li><li>[算法] <img src="/upload/2022/04/Sorting_quicksort_anim.gif" alt="image"></li><li>数据结构<img src="/upload/2022/04/Singly-linked-list.svg.png" alt="image"></li><li>计算几何<img src="/upload/2022/04/SimplexRangeSearching.png" alt="image"></li><li>图论<img src="/upload/2022/04/6n-graf.svg.png" alt="image"><pre class="line-numbers language-none"><code class="language-none">算法指定义良好的计算过程，它取一个或一组值作为输入，经过一系列定义好的计算过程，得到一个或一组输出。算法是计算机科学研究的一个重要领域，也是许多其他计算机科学技术的基础。算法主要包括数据结构、计算几何、图论等。除此之外，算法还包括许多杂项，如模式匹配、部分数论等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h1 id="计算理论"><a href="#计算理论" class="headerlink" title="计算理论"></a>计算理论</h1><pre class="line-numbers language-none"><code class="language-none">按照Peter J. Denning的说法，计算机科学的最根本问题是“什么能够被有效地自动化？”计算理论的研究就是专注于回答这个根本问题，关于什么能够被计算，去实施这些计算又需要用到多少资源。为了试图回答第一个问题，递归论检验在多种理论计算模型中哪个计算问题是可解的。而计算复杂性理论则被用于回答第二个问题，研究解决一个不同目的的计算问题的时间与空间消耗。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>著名的“<a href="https://zh.wikipedia.org/wiki/P/NP%E9%97%AE%E9%A2%98">P=NP</a>?”问题，千禧年大奖难题之一，是计算理论的一个开放问题。<ul><li>自动机理论    </li><li>递归论    </li><li>计算复杂性理论    </li><li>密码学    </li><li>量子计算论<h1 id="信息论与编码理论"><a href="#信息论与编码理论" class="headerlink" title="信息论与编码理论"></a>信息论与编码理论</h1><pre class="line-numbers language-none"><code class="language-none">信息论与信息量化相关，由克劳德·香农创建，用于寻找信号处理操作的根本极限，比如压缩数据和可靠的数据存储与通讯。编码理论是对编码以及它们适用的特定应用性质的研究。编码（code）被用于数据压缩，密码学，前向纠错，近期也被用于网络编码。研究编码的目的在于设计更高效、可靠的数据传输方法。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="编程语言和编译器"><a href="#编程语言和编译器" class="headerlink" title="编程语言和编译器"></a>编程语言和编译器</h1><pre class="line-numbers language-none"><code class="language-none">编程语言理论是计算机科学的一个分支，主要处理编程语言的设计、实现、分析、描述和分类，以及它们的个体特性。它属于计算机科学学科，既受影响于也影响着数学、软件工程和语言学。它是公认的计算机科学分支，同时也是活跃的研究领域，研究成果被发表在众多学术期刊，计算机科学以及工程出版物。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li>类型论<br><img src="/upload/2022/04/%E7%B1%BB%E5%9E%8B%E8%AE%BA.png" alt="image"></li><li>编译器设计<br><img src="/upload/2022/04/Ideal_compiler.png" alt="image"></li><li>程序设计语言<br><img src="/upload/2022/04/Python_add5_syntax.svg.png" alt="image"></li></ul><h1 id="形式化方法"><a href="#形式化方法" class="headerlink" title="形式化方法"></a>形式化方法</h1><pre class="line-numbers language-none"><code class="language-none">形式化方法是一种特别的基于数学的技术，用于软件和硬件系统的形式规范、开发以及验证。在软件和硬件设计方面，形式化方法的使用动机，如同其它工程学科，是通过适当的数学分析便有助于设计的可靠性和健壮性的期望。但是，使用形式化方法会带来很高的成本，意味着它们通常只用于高可靠性系统，这种系统中安全或保安（security）是最重要的。对于形式化方法的最佳形容是各种理论计算机科学基础种类的应用，特别是计算机逻辑演算，形式语言，自动机理论和形式语义学，此外还有类型系统、代数数据类型，以及软件和硬件规范和验证中的一些问题。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="计算机系统"><a href="#计算机系统" class="headerlink" title="计算机系统"></a>计算机系统</h1><h2 id="计算机体系结构与计算机工程"><a href="#计算机体系结构与计算机工程" class="headerlink" title="计算机体系结构与计算机工程"></a>计算机体系结构与计算机工程</h2><pre class="line-numbers language-none"><code class="language-none">计算机系统结构，或者数字计算机组织，是一个计算机系统的概念设计和根本运作结构。它主要侧重于CPU的内部执行和内存访问地址。这个领域经常涉及计算机工程和电子工程学科，选择和互连硬件组件以创造满足功能、性能和成本目标的计算机。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><pre class="line-numbers language-none"><code class="language-none">操作系统是管理电脑硬件与软件资源的电脑程序，同时也是电脑系统的核心与基石。作业系统需要处理如管理与配置记忆体、决定系统资源供需的优先次序、控制输入与输出设备、操作网路与管理文件系统等基本事务。作业系统也提供一个让用户与各电脑设备互动的操作接口。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="并发、并行与分布式系统"><a href="#并发、并行与分布式系统" class="headerlink" title="并发、并行与分布式系统"></a>并发、并行与分布式系统</h2><pre class="line-numbers language-none"><code class="language-none">并发性（concurrency）是系统的一种性质，这类系统可以同时执行多个可能互相交互的计算。一些数学模型，如Petri网、进程演算和PRAM模型，被创建以用于通用并发计算。分布式系统将并发性的思想扩展到了多台由网络连接的计算机。同一分布式系统中的计算机拥有自己的私有内存，它们之间经常交换信息以达到一个共同的目的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><p><code>计算机网络是管理遍及全球的计算机连接成的网络的计算机科学分支。</code></p><h2 id="计算机安全和密码学"><a href="#计算机安全和密码学" class="headerlink" title="计算机安全和密码学"></a>计算机安全和密码学</h2><pre class="line-numbers language-none"><code class="language-none">计算机安全是计算机技术的一个分支，其目标包括保护信息免受未经授权的访问、中断和修改，同时为系统的预期用户保持系统的可访问性和可用性。密码学是对于隐藏（加密）和破译（解密）信息的实践与研究。现代密码学主要跟计算机科学相关，很多加密和解密算法都是基于它们的计算复杂性。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><pre class="line-numbers language-none"><code class="language-none">数据库是为了更容易地组织、存储和检索大量数据。数据库由数据库管理系统管理，通过数据模型和查询语言来存储、创建、维护和搜索数据。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="计算机应用技术"><a href="#计算机应用技术" class="headerlink" title="计算机应用技术"></a>计算机应用技术</h1><h2 id="计算机图形学"><a href="#计算机图形学" class="headerlink" title="计算机图形学"></a>计算机图形学</h2><pre class="line-numbers language-none"><code class="language-none">计算机图形学是对于数字视觉内容的研究，涉及图像数据的合成和操作。它跟计算机科学的许多其它领域密切相关，包括计算机视觉、图像处理、计算几何与可视化，同时也被大量运用在特效和电子游戏。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="科学计算"><a href="#科学计算" class="headerlink" title="科学计算"></a>科学计算</h2><pre class="line-numbers language-none"><code class="language-none">科学计算（或者计算科学）是关注构建数学模型和量化分析技术的研究领域，同时通过计算机分析和解决科学问题。在实际使用中，它通常是计算机模拟和计算等形式在各个科学学科问题中的应用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>数值分析    </li><li>计算物理学    </li><li>计算化学    </li><li>生物信息学</li></ul><h2 id="多媒体技术"><a href="#多媒体技术" class="headerlink" title="多媒体技术"></a>多媒体技术</h2><pre class="line-numbers language-none"><code class="language-none">多媒体技术是指通过计算机对文字、数据、图形、图像、动画、声音等多种媒体信息进行综合处理和管理，使用户可以通过多种感官与计算机进行实时信息交互的技术，又称为计算机多媒体技术。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h2><pre class="line-numbers language-none"><code class="language-none">这个计算机科学分支旨在创造可以解决计算问题，以及像动物和人类一样思考与交流的人造系统。无论是在理论还是应用上，都要求研究者在多个学科领域具备细致的、综合的专长，比如应用数学，逻辑，符号学，电机工程学，精神哲学，神经生理学和社会智力，用于推动智能研究领域，或者被应用到其它需要计算理解与建模的学科领域，如金融或是物理科学。人工智能领域开始变得正式源于Alan Turing这位人工智能先驱提出了图灵试验，以回答这样一个终极问题：“计算机能够思考吗？”<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h1><pre class="line-numbers language-none"><code class="language-none">软件工程是对于设计、实现和修改软件的研究，以确保软件的高质量、适中的价格、可维护性，以及能够快速构建。它是一个系统的软件设计方法，涉及工程实践到软件的应用。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">计算机科学和软件工程的关系是一个有争议的话题，随后关于什么是“软件工程”，计算机科学又该如何定义的争论使得情况更加混乱。David Parnas从其它工程和科学学科之间的关系得到启示，宣称计算机科学的主要重点总的来说是研究计算的性质，而软件工程的主要重点是具体的计算设计，以达到实用的目的，这样便构成了两个独立但又互补的学科。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="作为高等教育的二级专业"><a href="#作为高等教育的二级专业" class="headerlink" title="作为高等教育的二级专业"></a>作为高等教育的二级专业</h1><ul><li><p>在中国，“计算机科学”或“计算机科学与技术”是工科（一级门类）下的二级专业。一般可细分为三级专业：</p><ul><li>计算机软件：围绕着软件开发、软件工程、编程语言等</li><li>计算机应用：计算机的各种应用算法、技术。如：模式识别、计算视觉、计算机图形学等等。</li><li>计算机体系结构：关于计算机或计算机信息系统的“硬件”。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 科普文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
            <tag> Software engineering </tag>
            
            <tag> Database </tag>
            
            <tag> Concurrent </tag>
            
            <tag> algorithms </tag>
            
            <tag> Data structures </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入C语言与程序原理_01</title>
      <link href="/2022/04/29/%E6%B7%B1%E5%85%A5C%E8%AF%AD%E8%A8%80%E4%B8%8E%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%86_01-%E6%B7%B1%E5%85%A5c%E8%AF%AD%E8%A8%80%E4%B8%8E%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%8601md/"/>
      <url>/2022/04/29/%E6%B7%B1%E5%85%A5C%E8%AF%AD%E8%A8%80%E4%B8%8E%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%86_01-%E6%B7%B1%E5%85%A5c%E8%AF%AD%E8%A8%80%E4%B8%8E%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%8601md/</url>
      
        <content type="html"><![CDATA[<h4 id="深入C语言与程序原理"><a href="#深入C语言与程序原理" class="headerlink" title="深入C语言与程序原理"></a>深入C语言与程序原理</h4><h5 id="第一篇-基础知识回顾"><a href="#第一篇-基础知识回顾" class="headerlink" title="第一篇    基础知识回顾"></a>第一篇    基础知识回顾</h5><h6 id="数据量单位"><a href="#数据量单位" class="headerlink" title="数据量单位"></a>数据量单位</h6><ul><li><strong>位(bit)</strong><ul><li>计算机中最小的存储单位，每一个位可以存储一个二进制码值的 0 或 1</li></ul></li><li><strong>字节(byte</strong>)<ul><li>通常是由八个位组成的一个存储单元。</li><li>在计算机中，字节是最小的可寻址单位，这意味着 CPU 在使用数据时，可以以字节为单位，为每一字节内存分配一个相应的独立地址。</li></ul></li><li><strong>字(word)</strong><ul><li>字的大小并不固定，一个字的大小可能是 2 的幂次个位，比如 16 位、32 位，也有可能是 12 位、27 位等一些并不常见的大小</li><li>字的概念与具体的处理器或硬件体系架构直接相关</li><li>字是处理器设计时使用的自然数据单位</li><li>x86-64 平台的字长为 64 位</li></ul></li></ul><h6 id="汇编语言-Assembly-Language"><a href="#汇编语言-Assembly-Language" class="headerlink" title="汇编语言(Assembly Language)"></a>汇编语言(Assembly Language)</h6><ul><li>特性<ul><li>汇编代码可以经由汇编程序（如 as）进行转换，从而得到二进制的可执行代码</li><li>汇编语言在机器指令之上基本不具有任何抽象</li><li>汇编语言使用助记符（Mnemonic）来表示每个低级的机器指令<ul><li>助记符是一类带有自然语义的符号，比如 mov 指令，它是英文单词 “move” 的简写</li><li>这个指令用来将一个操作数从计算机中的某个位置移动到另一个位置<ul><li>举例来说<ul><li>MOV r/m</li><li> rMOV r</li><li> r/mMOV r/m, imm</li><li>r 表示 register，即寄存器；m 表示 memory，即内存中的某个具体位置；imm 表示 immediate，即直接书写在指令中的立即数<ul><li>指令 mov ebx, 1    表示将立即数 1 存放到寄存器 ebx 中（右侧参数为数据来源 src，左侧参数为移动的目的地 dest）<ul><li>指令 mov ebx, 1  对应的机器指令代码为二进制值 bb 01 00 00 00 </li><li></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li>机器指令包含信息<ul><li>OpCode</li><li>Immediate Data</li><li>MOdR/M</li><li>SIB</li><li>Displacement</li><li>REX</li></ul></li></ul><h6 id="指令集中的寄存器"><a href="#指令集中的寄存器" class="headerlink" title="指令集中的寄存器"></a>指令集中的寄存器</h6><ul><li><p>概念</p><ul><li>由 CPU 提供的一组位于芯片上的高速存储器硬件，可用于存储数据</li><li>寄存器拥有最快的数据访问速度和最低的延迟</li></ul></li><li><p>物理寄存器的分类</p><ul><li>通用目的寄存器<ul><li>一般用于存放程序运行过程中产生的临时数据，这些寄存器在大多数情况下都可以被当作普通寄存器使用。</li><li>而在某些特殊情况下，它们可能会被用于存放指令计算结果、系统调用号，以及与栈帧相关的内存地址等信息</li></ul></li><li>状态寄存器<ul><li>一般用于存放与指令执行结果相关的状态信息，比如指令执行是否引起进位、计算结果是否为 0 等</li></ul></li><li>系统寄存器<ul><li>一般由操作系统使用，这些寄存器描述了与虚拟内存、中断、CPU 模式等有关的信息</li></ul></li><li>用于支持浮点计算和SIMD的寄存器<ul><li>AVX,SSE寄存器</li></ul></li></ul></li><li><p>x86-64架构中的寄存器</p><ul><li>CPU指令集架构定义了16个通用目的寄存器，寄存器最大可以存储4个<strong>指令字</strong>(此处的字与CPU硬件中的<strong>硬件字</strong>概念不一样，字长位16位)，即64位长的数据</li></ul></li><li><p>寄存器名称示意图</p><p><img src="/images/science/%E5%AF%84%E5%AD%98%E5%99%A8.png" alt="image"></p></li></ul><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ul><li>常见数据量单位包括位、字节和字。其中，一个字节等于 8 位，而字的大小则与具体的 CPU 体系结构紧密相关，常见大小可以是 32 位与 64 位</li><li>汇编语言是一种低级编程语言，它用助记符的形式来描述程序对应机器指令的基本逻辑。由于它直接对应于 CPU 指令集之上，因此不具有可移植性</li><li>寄存器是位于 CPU 芯片上的高速数据存储单元，根据功能，它可以被分为通用目的寄存器、状态寄存器等多种类型。x86-64 一共提供了 16 个通用目的寄存器，通过在汇编代码中使用不同的寄存器别名，我们可以快速访问这些寄存器中存放的数据</li></ul><h5 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c">当所有指令执行完毕时，寄存器 eax 中的值是多少？mov eax<span class="token punctuation">,</span> <span class="token number">0x1</span>inc eaxsub eax<span class="token punctuation">,</span> <span class="token number">10</span>xor eax<span class="token punctuation">,</span> eaxadd eax<span class="token punctuation">,</span> <span class="token number">1</span>mul eax<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 字节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记_02-算术运算符和表达式</title>
      <link href="/2022/04/29/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F-c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8Fmd/"/>
      <url>/2022/04/29/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F-c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8Fmd/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言学习笔记-02之算术运算符和表达式"><a href="#C语言学习笔记-02之算术运算符和表达式" class="headerlink" title="C语言学习笔记_02之算术运算符和表达式"></a>C语言学习笔记_02之算术运算符和表达式</h1><h1 id="简单的算术运算"><a href="#简单的算术运算" class="headerlink" title="简单的算术运算"></a>简单的算术运算</h1><ul><li>算术运算符</li><li>增1和减1运算符</li><li>类型强制转换运算符</li></ul><h1 id="较为复杂的数学运算"><a href="#较为复杂的数学运算" class="headerlink" title="较为复杂的数学运算"></a>较为复杂的数学运算</h1><ul><li>常用的标准数学函数</li></ul><p>#宏常量和const常量</p><ul><li><p>宏常量</p><ul><li>定义格式<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">标识符字符串</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PI</span> <span class="token expression"><span class="token number">3.1415926</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>const常量</p><ul><li><p>定义格式</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">const</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">float</span> pi <span class="token operator">=</span> <span class="token number">3.13</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>const常量可以拥有数据类型</p></li><li><p>const常量在debug中可以查看数值</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装VScode以及安装GCC</title>
      <link href="/2022/04/29/Ubuntu%E5%AE%89%E8%A3%85VScode%E4%BB%A5%E5%8F%8A%E5%AE%89%E8%A3%85GCC-ubuntu%E5%AE%89%E8%A3%85vscode%E4%BB%A5%E5%8F%8A%E5%AE%89%E8%A3%85gccmd/"/>
      <url>/2022/04/29/Ubuntu%E5%AE%89%E8%A3%85VScode%E4%BB%A5%E5%8F%8A%E5%AE%89%E8%A3%85GCC-ubuntu%E5%AE%89%E8%A3%85vscode%E4%BB%A5%E5%8F%8A%E5%AE%89%E8%A3%85gccmd/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu安装VScode以及安装GCC"><a href="#Ubuntu安装VScode以及安装GCC" class="headerlink" title="Ubuntu安装VScode以及安装GCC"></a>Ubuntu安装VScode以及安装GCC</h1><h1 id="Installing-GCC-on-Ubuntu-20-04"><a href="#Installing-GCC-on-Ubuntu-20-04" class="headerlink" title="Installing GCC on Ubuntu 20.04"></a>Installing GCC on Ubuntu 20.04</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$sudo</span> <span class="token function">apt-get</span> update<span class="token variable">$sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> build-essential<span class="token variable">$sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> manpages-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$gcc</span> --version    Ubuntu <span class="token number">20.04</span> repositories provide GCC version <span class="token number">9.3</span>.0:gcc <span class="token punctuation">(</span>Ubuntu <span class="token number">9.3</span>.0-10ubuntu2<span class="token punctuation">)</span> <span class="token number">9.3</span>.0    Copyright <span class="token punctuation">(</span>C<span class="token punctuation">)</span> <span class="token number">2019</span> Free Software Foundation, Inc.    This is <span class="token function">free</span> software<span class="token punctuation">;</span> see the <span class="token builtin class-name">source</span> <span class="token keyword">for</span> copying conditions.  There is NO    warranty<span class="token punctuation">;</span> not even <span class="token keyword">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c">$nano hello<span class="token punctuation">.</span>c     <span class="token comment">// hello.c</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>    <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, world!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>```   ```bash$gcc hello<span class="token punctuation">.</span>c <span class="token operator">-</span>o hello$<span class="token punctuation">.</span><span class="token operator">/</span>hello    The program should print<span class="token operator">:</span>Hello World<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h1><ul><li>用<code>sudo gedit /etc/apt/sources.list </code>打开，把地址复制进去</li></ul><p>镜像地址加速–阿里云</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如何卸载GCC</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dpkg -l <span class="token operator">|</span> <span class="token function">grep</span> gcc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>安装gcc报错信息</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rudy@rudy:~/Desktop$ <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> build-essential<span class="token punctuation">[</span>sudo<span class="token punctuation">]</span> password <span class="token keyword">for</span> rudy: Reading package lists<span class="token punctuation">..</span>. DoneBuilding dependency tree       Reading state information<span class="token punctuation">..</span>. DoneSome packages could not be installed. This may mean that you haverequested an impossible situation or <span class="token keyword">if</span> you are using the unstabledistribution that some required packages have not yet been createdor been moved out of Incoming.The following information may <span class="token builtin class-name">help</span> to resolve the situation:The following packages have unmet dependencies: build-essential <span class="token builtin class-name">:</span> Depends: libc6-dev but it is not going to be installed or                            libc-dev                   Depends: g++ <span class="token punctuation">(</span><span class="token operator">&gt;=</span> <span class="token number">4</span>:7.2<span class="token punctuation">)</span> but it is not going to be installed                   Depends: dpkg-dev <span class="token punctuation">(</span><span class="token operator">&gt;=</span> <span class="token number">1.17</span>.11<span class="token punctuation">)</span> but it is not going to be installedE: Unable to correct problems, you have held broken packages.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">###### Ubuntu Main Repos</span>deb http://us.archive.ubuntu.com/ubuntu/ wily maindeb-src http://us.archive.ubuntu.com/ubuntu/ wily main<span class="token comment">###### Ubuntu Update Repos</span>deb http://us.archive.ubuntu.com/ubuntu/ wily-security maindeb http://us.archive.ubuntu.com/ubuntu/ wily-updates maindeb-src http://us.archive.ubuntu.com/ubuntu/ wily-security maindeb-src http://us.archive.ubuntu.com/ubuntu/ wily-updates main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>处理gcc安装报错信息</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$sudo</span> gedit /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记_01-数据类型</title>
      <link href="/2022/04/29/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Bmd/"/>
      <url>/2022/04/29/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Bmd/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">------------------ | ----------- | ------------------------------------ |        | 基本整型              | int         | C标准未规定,与系统相关.一般占4个字节 |        | 短整型                | short       | 2                                    |        | 长整型                | long        | 4                                    |        | 单精度实型            | float       | 4                                    |        | 双精度实型            | double      | 8                                    |        | 长双精度实型          | long double | 与系统相关,VC++中占8个字节           |        | 字符型                | char        | 1                                    |        | 无符号整型(正整数和0) | unsigned    | 用来修饰 int 、short 和long          |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>存储方式</p><ul><li><p>不同数据类型的存储形式不同</p><ul><li><p>Inter CPU上的整数</p><ul><li><p>排列顺序图</p><table><thead><tr><th>低位字节</th><th>高位字节</th></tr></thead></table></li></ul></li><li><p>实型数</p><ul><li>定点数<ul><li><code>12.34567</code></li></ul></li><li>浮点数<ul><li><code>12.34567*10^0</code></li><li><code>12.3456.7*10^-4</code></li><li><code>1.234567*10^1</code></li></ul></li></ul><h6 id="浮点数的探究"><a href="#浮点数的探究" class="headerlink" title="浮点数的探究"></a>浮点数的探究</h6><ul><li><p>浮点数并非真正意义上的实数,只是其在某种范围内的近似</p></li><li><p><code>ANSI C</code>未规定3种浮点类型的长度、精度和表数范围</p></li><li><p><code>N = S * r^j </code> 表示浮点数</p><table><thead><tr><th align="center">阶码j (指数部分)</th><th align="center">尾数S(小数部分)</th></tr></thead><tbody><tr><td align="center">阶码符号|阶码的数值</td><td align="center">尾数符号|尾数的数值</td></tr></tbody></table><ul><li>系统如果使用更多位数存储小数部分,精度提高但是表数(数值)范围减小</li><li>系统如果使用更多尾数存储指数部分,精度下降但是表数(数值)范围提高</li></ul></li></ul></li></ul></li><li><p>字符型数据是以二进制编码方式存储在内存中</p><ul><li>一个字节保存一个字符(英文字母、数字、控制符)</li><li>字符常数就是一个整数</li></ul></li><li><p>字符编码的方式取决于计算机系统使用的字符集</p><ul><li>以<code>ASCII</code> 字符集为例</li><li>每个字符具有一个 0~127之间的编码值(只利用了7个bit位,最高位未利用)</li><li>最高位被用作奇偶校验位<ul><li>奇偶校验<ul><li>校验代码在传输过程中是否出现错误</li><li>奇校验规定<ul><li>若一个字节的编码序列中1的个数是奇数,则校验位,置为1,否则置为0.</li></ul></li><li>偶校验规定与奇校验相反</li></ul></li></ul></li></ul></li><li><p><code>ASCII</code> 扩展码</p><ul><li>利用了最高位,值扩展128~255</li><li>存放英文的制表符、部分英标符和其他符号</li></ul><h6 id="汉字是如何存储的"><a href="#汉字是如何存储的" class="headerlink" title="汉字是如何存储的"></a>汉字是如何存储的</h6><ul><li>汉字编码,必须兼容<code>ASCII</code> 码,使用连续的2个字节,仅在其第7位均为1时被当作是汉字</li><li><code>GB2312</code>、<code>BIG5</code></li></ul></li><li><p>更强大的编码</p><ul><li>国际标准化组织(ISO)制定了Unicode字符集，为各种语言中的每个字符设定统一且唯一的数字编号</li><li>所有字符统一用两个字节保存,宽字节字符–65536个字符</li></ul></li><li><p>计算变量类型占内存空间的大小</p><ul><li>使用<code>C</code>运算符–<code>sizeof</code>(变量名)</li><li>计算类型所占的字节数</li></ul></li><li><p>总结</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> datatype </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人如何高效学习？</title>
      <link href="/2022/04/29/%E4%B8%AA%E4%BA%BA%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%EF%BC%9F-%E4%B8%AA%E4%BA%BA%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0md/"/>
      <url>/2022/04/29/%E4%B8%AA%E4%BA%BA%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%EF%BC%9F-%E4%B8%AA%E4%BA%BA%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0md/</url>
      
        <content type="html"><![CDATA[<h1 id="个人如何高效学习？"><a href="#个人如何高效学习？" class="headerlink" title="个人如何高效学习？"></a>个人如何高效学习？</h1><h1 id="找准学习目标"><a href="#找准学习目标" class="headerlink" title="找准学习目标"></a>找准学习目标</h1><ul><li>学习某个知识体系是为了完成什么任务？学完后能做什么？弄清楚学习一门技术/某个知识的意义！</li><li>学习动机是什么？学习这个知识有什么作用？<h1 id="明确学习思路"><a href="#明确学习思路" class="headerlink" title="明确学习思路"></a>明确学习思路</h1></li><li><strong>基本准则</strong><ul><li>二八定律<pre><code>- 百分之八十**功利主义**      -  学习java语言，通过二八定律又可以重新分为80%是语言技巧,20%是底层原理.      - 学习Spring等开源框架，80%是框架如何运用，20%是底层技术原理.      - 学习数据结构、算法等知识，80%是应付面试,20%是培养自己分析问题的思想和提高解决问题的能力.</code></pre><ul><li>百分之二十<strong>情怀主义</strong><ul><li>学习操作系统</li><li>学习计算机网络</li><li>学习系统架构、数学基础课、物理课<h1 id="技术路线规划"><a href="#技术路线规划" class="headerlink" title="技术路线规划"></a>技术路线规划</h1></li></ul></li></ul></li><li>三年内个人技术上应当具有哪些技能？<ul><li>技术栈(广度和深度并行提升)</li><li>业务能力(相当成熟)</li><li>架构思想的成长变化</li></ul></li><li>进入公司一年学到什么程度？具备哪些软技能？<ul><li>团队任务分配、业务开发流程熟悉程度</li><li>部门内部使用的架构设计、代码功能模块如何实现(深入到每一个函数的功能以及系统内部调用机制)</li><li>和部门、同事沟通能力(个人表达能力、协调处理问题的效率、技术分享/CR中交流程度体现)</li><li>抗压能力体现</li></ul></li><li>五年内个人技术上应该达的高度？<ul><li>个人技术栈(深度重点挖掘,聚焦云计算方向)</li><li>个人团队领导能力/团队协同能力</li><li>技术架构设计思想以及实践</li></ul></li></ul></li></ul><h1 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h1><h1 id="学习方法的核心"><a href="#学习方法的核心" class="headerlink" title="学习方法的核心"></a>学习方法的核心</h1><ul><li><strong>输出</strong></li><li><strong>学习途径</strong><ul><li>博客、<code>github</code>开源项目</li><li>权威书籍、官方文档</li><li>技术平台如极客时间、知识星球和同行一起求知、分享心得</li><li>动手实践(将学到的新知识应用到日常开发)</li><li>勤做笔记,记录学习技术遇到的问题,总结每一阶段的学习内容.</li><li>技术分享会、线下技术研讨会，促进学习交流.</li></ul></li><li><strong>找到最适合自己的学习方法</strong><ul><li>学习时间管理知识、总结诸如费曼学习法的精髓</li><li>可持续学习的基础上不断的调整学习方法</li></ul></li><li>培养技术思维体系<ul><li>学习第一性原理    - 软件知识技术体系    - 软件的基础原理    - 软件的设计原理    - 架构的核心原理</li></ul></li></ul><h1 id="总结学习收获"><a href="#总结学习收获" class="headerlink" title="总结学习收获"></a>总结学习收获</h1><ul><li>个人技术的收获</li><li>人际圈</li><li>业务理解</li><li>商业模式的理解</li><li>个人思考方式</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习方法论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二八原则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职工患病须知法律知识</title>
      <link href="/2022/04/29/%E8%81%8C%E5%B7%A5%E6%82%A3%E7%97%85%E9%A1%BB%E7%9F%A5%E6%B3%95%E5%BE%8B%E7%9F%A5%E8%AF%86-%E5%90%88%E5%90%8C%E6%B3%95%E5%BE%8B%E7%9F%A5%E8%AF%86md/"/>
      <url>/2022/04/29/%E8%81%8C%E5%B7%A5%E6%82%A3%E7%97%85%E9%A1%BB%E7%9F%A5%E6%B3%95%E5%BE%8B%E7%9F%A5%E8%AF%86-%E5%90%88%E5%90%8C%E6%B3%95%E5%BE%8B%E7%9F%A5%E8%AF%86md/</url>
      
        <content type="html"><![CDATA[<h1 id="合同法律知识"><a href="#合同法律知识" class="headerlink" title="合同法律知识"></a>合同法律知识</h1><h1 id="公司提前解除劳动合同怎么赔偿金额标准有哪些"><a href="#公司提前解除劳动合同怎么赔偿金额标准有哪些" class="headerlink" title="公司提前解除劳动合同怎么赔偿金额标准有哪些"></a>公司提前解除劳动合同怎么赔偿金额标准有哪些</h1><ul><li><p>新<a href="http://www.64365.com/baike/ldfct/">劳动法辞退</a>员工补偿规定</p></li><li><p>根据《<a href="http://www.64365.com/baike/ldhtf/">劳动合同法</a>》第46条规定,用人单位按照上述第36条、第40条、第41条的规定<a href="http://www.64365.com/baike/jcldgx/">解除劳动关系</a>的,应当向劳动者支付经济补偿。</p></li><li><p>第47条规定,经济补偿按劳动者在本单位工作的年限,每满一年支付一个月<a href="http://www.64365.com/baike/gz/">工资</a>的标准向劳动者支付。六个月以上不满一年的,按一年计算;不满六个月的,向劳动者支付半个月工资的经济补偿。月工资是指劳动者在劳动<a href="http://www.64365.com/baike/htjc/">合同解除</a>或者终止前十二个月的平均工资。</p></li><li><p>除了上述情形以外,用人单位辞退员工的,就属于<a href="http://www.64365.com/baike/wfjcldht/">违法解除劳动合同</a>,要按照经济补偿标准的二倍向劳动者支付赔偿金,即按劳动者在本单位工作的年限,每满一年支付二个月工资的标准向劳动者支付。六个月以上不满一年的,按一年计算;不满六个月的,向劳动者支付一个月工资的赔偿金。</p></li></ul><h1 id="相关法律规定"><a href="#相关法律规定" class="headerlink" title="相关法律规定"></a>相关法律规定</h1><h3 id="《劳动合同法》第36条规定-用人单位与劳动者协商一致-可以解除劳动合同。"><a href="#《劳动合同法》第36条规定-用人单位与劳动者协商一致-可以解除劳动合同。" class="headerlink" title="《劳动合同法》第36条规定,用人单位与劳动者协商一致,可以解除劳动合同。"></a>《劳动合同法》第36条规定,用人单位与劳动者协商一致,可以解除劳动合同。</h3><ol><li><p>第39条规定,劳动者有下列情形之一的,用人单位可以解除劳动合同:</p><ul><li>在<a href="http://www.64365.com/baike/syq/">试用期</a>间被证明不符合录用条件的;</li><li>严重违反用人单位的规章制度的;</li><li>严重失职,营私舞弊,给用人单位造成重大损害的;</li><li>劳动者同时与其他用人单位建立劳动关系,对完成本单位的工作任务造成严重影响,或者经用人单位提</li><li>因本法第二十六条第一款第一项规定的情形致使<a href="http://www.64365.com/baike/ldhtwx/">劳动合同无效</a>的;</li><li>被依法追究刑事责任的。</li></ul></li><li><p>第40条规定,有下列情形之一的,用人单位提前三十日以书面形式通知劳动者本人或者额外支付劳动者一个月工资后,可以解除劳动合同:</p><ul><li><p>劳动者患病或者非因工负伤,在规定的医疗期满后不能从事原工作,也不能从事由用人单位另行安排的工作的;</p></li><li><p>劳动者不能胜任工作,经过培训或者调整工作岗位,仍不能胜任工作的;</p></li><li><p>劳动<a href="http://www.64365.com/baike/htdl/">合同订立</a>时所依据的客观情况发生重大变化,致使劳动合同无法履行,经用人单位与劳动者协商,未能就变更劳动合同内容达成协议的。</p></li></ul></li><li><p>第41条规定,有下列情形之一,需要裁减人员二十人以上或者裁减不足二十人但占企业职工总数百分之十以上的,用人单位提前三十日向工会或者全体职工说明情况,听取工会或者职工的意见后,裁减人员方案经向劳动行政部门报告,可以裁减人员:</p><ul><li>依照<a href="http://www.64365.com/fagui/article-640343.aspx">企业破产法</a>规定进行重整的;</li><li>生产经营发生严重困难的;</li><li>企业转产、重大技术革新或者经营方式调整,经变更劳动合同后,仍需裁减人员的;</li><li>其他因劳动合同订立时所依据的客观经济情况发生重大变化,致使劳动合同无法履行的。<h1 id="裁减人员时-应当优先留用下列人员"><a href="#裁减人员时-应当优先留用下列人员" class="headerlink" title="裁减人员时,应当优先留用下列人员"></a>裁减人员时,应当优先留用下列人员</h1></li></ul></li></ol><ul><li>与本单位订立较长期限的固定期限劳动合同的;</li><li>与本单位订立<a href="http://www.64365.com/baike/wgdqxldht/">无固定期限劳动合同</a>的;</li><li>家庭无其他就业人员,有需要<a href="http://www.64365.com/zs/979072.aspx">扶养</a>的老人或者未成年人的。</li></ul><p>用人单位依照本条第一款规定裁减人员,在六个月内重新招用人员的,应当通知被裁减的人员,并在同等条件下优先招用被裁减的人员。</p><p><strong>三、 <a href="http://www.64365.com/baike/zzldht/">终止劳动合同</a>，应当向劳动者支付<a href="http://www.64365.com/baike/jjbcj/">经济补偿金</a>的有8情形：</strong></p><p>1、劳动合同期满，劳动者同意续订劳动合同而用人单位不同意续订劳动合同，由用人单位终止固定期限劳动合同的;(《劳动合同法》第四十四条第(一)项)</p><p>2、因用人单位被依法宣告破产而终止劳动合同的;(《劳动合同法》第四十四条第(四)项)</p><p>3、因用人单位被吊销<a href="http://www.64365.com/baike/yyzz/">营业执照</a>、责令关闭、撤销或者用人单位决定提前解散而终止劳动合同的。(《劳动合同法》第四十四条第(五)项)</p><p><strong>四、法律、行政<a href="http://www.64365.com/fagui/">法规</a>规定的其他情形</strong></p><p>1、用人单位自用工之日起超过一个月不满一年，劳动者不与用人单位订立书面劳动合同的，用人单位应当书面通知劳动者终止劳动关系，并支付经济补偿;(《<a href="http://www.64365.com/fagui/article-650282.aspx">劳动合同法实施条例</a>》第六条)</p><p>2、以完成一定工作任务为期限的劳动合同因任务完成而终止的。(《劳动合同法实施条例》第二十二条;《指导意见第二十一条第二款》)</p><h3 id="提前解除劳动合同的一般程序"><a href="#提前解除劳动合同的一般程序" class="headerlink" title="提前解除劳动合同的一般程序"></a>提前解除劳动合同的一般程序</h3><p><strong>一、提前解除<a href="https://www.66law.cn/special/ldht/">劳动合同</a>的程序</strong></p><p>员工必须提前30日以书面形式通知用人单位。劳动者提前30日以书面形式通知用人单位，既是解除劳动合同的程序，也是解除劳动合同的条件。劳动者提前30日以书面形式通知用人单位，解除劳动合同，无需征得用人单位的同意。但通知的内容必须是肯定的，不能出现：请领导批准、请予以考虑等要约性质的文字，否则决定权即交到用人单位处，由用人单位对要约进行承诺，其实此行为就依法演变为双方协议<a href="https://www.66law.cn/laws/122846.aspx">解除合同</a>的过程了。</p><p>无论是劳动者还是用人单位在解除劳动合同时，都必须以书面形式告知对方。因为这一时间的确定直接关系到解除预告期的起算时间，也关系到劳动者的工资等利益，所以必须采用慎重的方式来表达。</p><p><strong>二、提前解除劳动合同的方法</strong></p><p>1.寻找单位的违法行为，随时向单位行使单方解除权</p><p>2.与单位协商解除劳动合同</p><p>3.提前三十天通知单位解除劳动合同</p><p><strong>相关知识</strong></p><p><strong>劳动合同的续订的程序</strong></p><p>(一)劳动合同期限届满或其他的法定、约定终止条件出现，任何一方要求续订劳动合同，应当提前30日向对方发出《续订劳动合同通知书》，并及时与对方进行协商，依法续订劳动合同;</p><p>(二)续订劳动合同，如原劳动合同的主要条款已有较大改变，双方应重新协商签订新的劳动合同;如原劳动合同的条款变动不大，双方可以签订《延续劳动合同协议书》，并明确劳动合同延续的期限及其他需重新确定的合同条款;</p><p>(三)续订劳动合同后，用人单位应将双方重新签订的劳动合同或《延续劳动合同协议书》(附原劳动合同)一式两份，送有管辖权的劳动鉴证机构进行鉴证，并到社会保险经办机构办理社会保险延续手续。</p><h3 id="公司提前解除劳动合同怎么赔偿"><a href="#公司提前解除劳动合同怎么赔偿" class="headerlink" title="公司提前解除劳动合同怎么赔偿"></a>公司提前解除劳动合同怎么赔偿</h3><p><strong>一、提前解除<a href="https://www.66law.cn/special/ldht/">劳动合同</a>的通知</strong></p><p>1、用人单位解除劳动合同需要提前通知的情况</p><p>我国<a href="https://www.66law.cn/tiaoli/3.aspx">劳动合同法</a>第四十条规定：用人单位有下列情形之一的，用人单位提前三十日以书面形式通知劳动者本人或者额外支付劳动者一个月工资后，可以解除劳动合同：</p><p>(1)劳动者患病或者非因工负伤，在规定的医疗期满后不能从事原工作，也不能从事由用人单位另行安排的工作的;</p><p>(2)劳动者不能胜任工作，经过培训或者调整工作岗位后，仍不能胜任工作的;</p><p>(3)劳动合同订立时所依据的客观情况发生重大变化，致使劳动合同无法履行，经用人单位与劳动者协商，未能就变更劳动合同内容达成协议的。</p><p>法律明确规定，用人单位以劳动者不胜任、医疗期满以及客观情况发生重大变化为由与劳动者解除劳动合同的，需要履行提前三十日书面通知的义务，如果没有履行该通知义务，则需要支付劳动者一个月工资。</p><p>另外，在一些地方性法规中，对于劳动合同期满终止，用人单位不续签也有提前通知的义务。例如：《<a href="https://www.66law.cn/jiangsu/">江苏</a>省劳动合同条例》第三十七条规定，劳动合同期满终止，用人单位不续签的，需要提前三十日通知劳动者。</p><p>2、劳动者解除劳动合同需要提前通知的情况</p><p>我国劳动合同法第三十七条规定：劳动者提前三十日以书面形式通知用人单位，可以解除劳动合同。劳动者在<a href="https://www.66law.cn/special/shiyongqi/">试用期</a>内提前三日通知用人单位，可以解除劳动合同。</p><p>劳动合同法赋予了劳动者单方面解除的权利，且该解除无须任何的理由，但须履行提前通知的义务，对于试用期内的劳动者提出解除，只要提前三天通知即可，对于试用期满的劳动者单方面解除劳动合同，需要三十日书面通知用人单位。</p><p>需要注意的是，法律虽然规定了劳动者解除劳动合同提前通知的义务，但没有规定劳动者不履行该义务，用人单位可以要求劳动者支付一个月工资作为补偿/替代。如果劳动者没有提前通知用人单位解除劳动合同，该行为给用人单位造成损失的，用人单位可以依据劳动合同法第九十条的规定要求劳动者承担赔偿责任。</p><p><strong>二、提前解除劳动合同如何赔偿</strong></p><p>劳动者签订了劳动合同，就应该遵守诚实信用原则，全面、完全的履行劳动合同，而劳动合同的主要条款之一：合同期限，则是双方必须遵守的首要条款。用人单位不遵守，违反此约定的，应该承担法定违约责任，必须支付经济补偿金。劳动者违反此约定的，当然也应属违约行为，法律明确规定劳动者依法定程序解除，但未明确规定解除的法律后果，但不等于劳动者可以随意<a href="https://www.66law.cn/laws/122846.aspx">解除合同</a>，否则对用人单位是不公平的，也不利于建立劳动者合理流动的社会制度和信用制度。对此，相关部门也采取了相应的措施并制定了相应的政策。</p><p>1、劳动部关于《违反〈<a href="https://www.66law.cn/tiaoli/2.aspx">劳动法</a>〉有关劳动合同规定的赔偿办法》第四条：劳动者违反规定或劳动合同的约定解除劳动合同，对用人单位造成损失的，劳动者应赔偿用人单位下列损失：</p><p>(1)用人单位招收录用其所支付的费用;</p><p>(2)用人单位为其支付的培训费用，双方另有约定的按约定办理;</p><p>(3)对生产、经营和工作造成的直接经济损失;</p><p>(4)劳动合同约定的其他赔偿费用。</p><p>2、《劳动部关于企业职工流动若干问题的通知》规定：</p><p>(1)用人单位招接收的大中专毕业生，按有关规定签订了服务合同或其他协议的，未到期的仍应继续履行，并应与用人单位签订劳动合同;拒绝签订劳动合同又不履行协议的，在提前三十日以书面形式通知用人单位后，用人单位可与其解除劳动关系。劳动关系解除后，如原服务合同(协议)约定或用人单位依法规定了赔偿办法的，职工应按服务合同(协议)的约定或用人单位的依法规定承担赔偿责任;如无约定或无规定的，按国家有关规定执行。</p><p>(2)用人单位与掌握<a href="https://www.66law.cn/special/symm/">商业秘密</a>的职工在劳动合同中约定保守商业秘密有关事项时，可以约定在劳动合同终止前或该职工提出解除劳动合同后的一定时间内(不超过六个月)，调整其工作岗位，变更劳动合同中相关内容;用人单位也可规定掌握商业秘密的职工在终止或解除劳动合同后的一定期限内(不超过三年)，不得到生产同类产品或经营同类业务且有竞争关系的其他用人单位任职，也不得自己生产与原单位有竞争关系的同类产品或经营同类业务，但用人单位应当给予该职工一定数额的经济补偿。</p><p>(3)用人单位与职工可以在劳动合同中约定违约金。解除劳动合同，应当按照《劳动法》的有关规定执行。未经当事人双方协商一致或劳动合同中约定的工作任务尚未完成，任何一方解除劳动合同给对方造成损失的，应按照《违反〈劳动法〉有关劳动合同规定的赔偿办法》承担赔偿责任。</p><p>针对以上规定，建议用人单位和劳动者在签订劳动合同是，对违约金予以约定，对违约情形予以明确，以便于出现纠纷时依法、依约定处理。</p><h1 id="2020上海市劳动法病假工资有多少"><a href="#2020上海市劳动法病假工资有多少" class="headerlink" title="2020上海市劳动法病假工资有多少"></a>2020上海市劳动法病假工资有多少</h1><ul><li><p>职工疾病或非因工负伤连续休假在<code>6</code>个月<strong>以内</strong>的，企业应按下列标准支付疾病休假工资：</p><ul><li>连续<a href="https://www.66law.cn/special/gongl/">工龄</a>不满<code>2</code>年的，按本人工资的<code>60%</code>计发；</li><li>连续工龄满<code>2</code>年不满<code>4</code>年的，按本人工资的<code>70%</code>计发；</li><li>连续工龄满<code>4</code>年不满<code>6</code>年的，按本人工资的<code>80%</code>计发；</li><li>连续工龄满<code>6</code>年不满<code>8</code>年的，按本人工资的<code>90%</code>计发；连续工龄满<code>8</code>年及以上的，按本人工资的<code>100%</code>计发。</li></ul></li><li><p>职工疾病或非因工负伤连续休假<strong>超过</strong><code>6</code>个月的，由企业支付疾病救济费，其中</p><ul><li>连续工龄不满<code>1</code>年的，按本人工资的<code>40%</code>计发；</li><li>连续工龄满<code>1</code>年不满<code>3</code>年的，按本人工资的<code>50%</code>计发；</li><li>连续工龄满<code>3</code>年及以上的，按本人工资的<code>60%</code>计发。</li></ul></li><li><p>备注</p><ul><li>用人单位与劳动者无任何约定的，假期工资的计算基数统一按劳动者本人所在岗位（职位）正常出勤的月工资的70%确定。<br>（一）连续工龄不满二年者，病假工资为前述计算基数的60%；<br>（二）连续工龄满两年不满四年者，病假工资为前述计算基数的70%；</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程序员应该懂得法律知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 劳动法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何成为一个有钱人</title>
      <link href="/2022/04/29/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E9%92%B1%E4%BA%BA-how-to-be-rich-man/"/>
      <url>/2022/04/29/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E9%92%B1%E4%BA%BA-how-to-be-rich-man/</url>
      
        <content type="html"><![CDATA[<h1 id="主题-怎样成为有钱人"><a href="#主题-怎样成为有钱人" class="headerlink" title="主题: 怎样成为有钱人"></a>主题: 怎样成为有钱人</h1><ul><li>引子: 《富爸爸与穷爸爸》</li><li>作者: 罗伯特清崎 &amp; 莎朗莱希特<ul><li>穷爸爸教育理念：传统稳定概念输入</li><li>富爸爸教育理念:不要追求稳定也不要追求一份工作,你唯一需要追求的东西是机遇</li></ul></li><li>补充:<ul><li>什么是资产？<ul><li>资产就是能够带来正向资金流的东西,或者说能帮人赚钱的东西</li></ul></li><li>什么是负债？<ul><li>负债就是帮你花钱的东西,比如车、贷款买的房子(如果房子在未来不断升值就是资产)</li></ul></li><li>什么是消费？<ul><li>比喻：买了一个东西吃完后,东西就没了</li></ul></li><li>作者观点: <ul><li>不能赚钱的东西都是垃圾</li></ul></li><li>全书结论:<ul><li>尽可能的多保留资产,减少负债。<h1 id="如何成为有钱人"><a href="#如何成为有钱人" class="headerlink" title="如何成为有钱人"></a>如何成为有钱人</h1></li></ul></li></ul></li><li>六个角度<ol><li>增加收入</li><li>减少不必要的消费</li><li>勇于尝试和冒险</li><li>辞掉工作自主创业</li><li>尽可能的节税</li><li>管理个人的资产和负债    </li></ol></li><li>补充知识:</li><li>收入类型分为三种:<ul><li>1.劳动所得(主动收入),干活才有收入,不干就没有</li><li>2.资本利得:即通过资本交易获得收入比如股票交易、房地产交易</li><li>3.现金流:房租收入、利息收入、股息收入等</li></ul></li><li>普通人为第一种收入类型,有钱人为第二和第三种收入类型也就是被动收入。</li><li>世界上个人所得税最高得是丹麦，亚洲国家个人所得税在55%以上<h1 id="作者认为世界上人分四种"><a href="#作者认为世界上人分四种" class="headerlink" title="作者认为世界上人分四种"></a>作者认为世界上人分四种</h1></li></ul><ol><li>雇员 被雇佣的人</li><li>专家 如律师、会计师等自营者</li><li>老板 经营者</li><li>投资者<ul><li>投资者分为七种:<ul><li>一无所有的投资者 即那些把钱都花费在负债或者用于消费，而这些人都以为自己的购买的负债是在投资</li><li>借钱投资者 借钱投资，风险太高</li><li>储蓄投资者 即钱都拿来存储吃利息</li><li>聪敏投资者 </li><li>分为三种类型：<ul><li>别烦我型</li><li>愤世嫉俗型</li><li>赌徒型</li></ul></li><li>长期投资者 一般有钱人，和第六种投资者的区别在于敢不敢冒险</li><li>成熟投资者 如巴菲特</li><li>资本家投资的最高境界–被投资,比如自己开公司，发行股票给别人投资。通过别人的时间、头脑、金钱来投资自己。<h1 id="作者的观点"><a href="#作者的观点" class="headerlink" title="作者的观点"></a>作者的观点</h1></li></ul></li></ul></li></ol><ul><li>学校只能培养1、2两种类型的人,所以不会教育税的知识,3、4的收入是没有上限的</li><li>成为投资者比企业家难度更大</li><li>钱是信用的象征,只有真正有信用的人才能赚到钱。越能赚到钱，越代表你越有信用<h1 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h1></li><li>如果想要有钱,必须学会投资</li></ul>]]></content>
      
      
      <categories>
          
          <category> 程序员的理财 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投资 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杭州一游小记.md</title>
      <link href="/2022/04/29/%E6%9D%AD%E5%B7%9E%E4%B8%80%E6%B8%B8%E5%B0%8F%E8%AE%B0.md-travle-hangzhou/"/>
      <url>/2022/04/29/%E6%9D%AD%E5%B7%9E%E4%B8%80%E6%B8%B8%E5%B0%8F%E8%AE%B0.md-travle-hangzhou/</url>
      
        <content type="html"><![CDATA[<h5 id="中兴四将"><a href="#中兴四将" class="headerlink" title="中兴四将"></a>中兴四将</h5><ul><li>刘光世</li><li>韩世忠</li><li>岳飞</li><li>张俊</li></ul><h5 id="杭州四大名塔"><a href="#杭州四大名塔" class="headerlink" title="杭州四大名塔"></a>杭州四大名塔</h5><ul><li>六和塔</li><li>保俶塔</li><li>雷峰塔</li><li>白塔</li></ul>]]></content>
      
      
      <categories>
          
          <category> travel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo搭建个人博客</title>
      <link href="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/04/28/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建Hexo"><a href="#搭建Hexo" class="headerlink" title="搭建Hexo"></a>搭建Hexo</h1><h1 id="搭建前提"><a href="#搭建前提" class="headerlink" title="搭建前提"></a>搭建前提</h1><ul><li>Installation</li><li>Requirements<ul><li><a href="http://nodejs.org/">Node.js</a> (Should be at least Node.js 10.13, recommends 12.0 or higher)</li><li><a href="http://git-scm.com/">Git</a></li></ul></li><li>Install Git<ul><li>Windows: Download &amp; install <a href="https://git-scm.com/download/win">git</a>.</li><li>Mac: Install it with <a href="https://brew.sh/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> or <a href="http://sourceforge.net/projects/git-osx-installer/">installer</a>.</li><li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li></ul></li><li>Install Node.js</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">For Mac usersYou may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed<span class="token punctuation">,</span> open Xcode and go to Preferences <span class="token punctuation">-</span><span class="token punctuation">&gt;</span> Download <span class="token punctuation">-</span><span class="token punctuation">&gt;</span> Command Line Tools <span class="token punctuation">-</span><span class="token punctuation">&gt;</span> Install to install command line tools.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p><code>Windows</code>: Install it with <a href="https://github.com/jasongin/nvs/">nvs</a> (recommended) or <a href="https://github.com/nvm-sh/nvm">nvm</a>.</p></li><li><p><code>Mac</code>: Install it with <a href="https://brew.sh/">Homebrew</a> or <a href="http://www.macports.org/">MacPorts</a>.</p></li><li><p><code>Linux</code> (<code>DEB</code>/<code>RPM</code>-based): Install it with <a href="https://github.com/nodesource/distributions">NodeSource</a>.</p></li><li><p>Others: Install it through respective package manager. Refer to <a href="https://nodejs.org/en/download/package-manager/">the guide</a> provided by Node.js.</p></li><li><p>安装<code>Hexo-cli</code></p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>初始化博客目录<ul><li> 进入目录,并安装依赖</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 初始化博客目录</span>hexo init website-hexo<span class="token comment"># 进入博客目录</span><span class="token builtin class-name">cd</span> website-hexo<span class="token comment"># 安装博客相关依赖</span><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>目录结构如下</li></ul><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><h5 id="Site-configuration-file-You-can-configure-most-settings-here"><a href="#Site-configuration-file-You-can-configure-most-settings-here" class="headerlink" title="Site configuration file. You can configure most settings here."></a>Site <a href="https://hexo.io/docs/configuration">configuration</a> file. You can configure most settings here.</h5><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">package.json<span class="token punctuation">{</span>  <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"hexo-site"</span>,  <span class="token string">"version"</span><span class="token builtin class-name">:</span> <span class="token string">"0.0.0"</span>,  <span class="token string">"private"</span><span class="token builtin class-name">:</span> true,  <span class="token string">"hexo"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>    <span class="token string">"version"</span><span class="token builtin class-name">:</span> <span class="token string">""</span>  <span class="token punctuation">}</span>,  <span class="token string">"dependencies"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>    <span class="token string">"hexo"</span><span class="token builtin class-name">:</span> <span class="token string">"^3.8.0"</span>,    <span class="token string">"hexo-generator-archive"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.1.5"</span>,    <span class="token string">"hexo-generator-category"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.1.3"</span>,    <span class="token string">"hexo-generator-index"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.2.1"</span>,    <span class="token string">"hexo-generator-tag"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.2.0"</span>,    <span class="token string">"hexo-renderer-ejs"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.3.1"</span>,    <span class="token string">"hexo-renderer-stylus"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.3.3"</span>,    <span class="token string">"hexo-renderer-marked"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.3.2"</span>,    <span class="token string">"hexo-server"</span><span class="token builtin class-name">:</span> <span class="token string">"^0.3.3"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><h6 id="Scaffold-folder-When-you-create-a-new-post-Hexo-bases-the-new-file-on-the-scaffold"><a href="#Scaffold-folder-When-you-create-a-new-post-Hexo-bases-the-new-file-on-the-scaffold" class="headerlink" title="Scaffold folder. When you create a new post, Hexo bases the new file on the scaffold."></a><a href="https://hexo.io/docs/writing#Scaffolds">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</h6><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><pre class="line-numbers language-none"><code class="language-none">Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with _ (underscore) - except the _posts folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the public folder, while other files will simply be copied.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><h5 id="Theme-folder-Hexo-generates-a-static-website-by-combining-the-site-contents-with-the-theme"><a href="#Theme-folder-Hexo-generates-a-static-website-by-combining-the-site-contents-with-the-theme" class="headerlink" title="Theme folder. Hexo generates a static website by combining the site contents with the theme"></a><a href="https://hexo.io/docs/themes">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme</h5><ul><li>使用命令启动<code>hexo</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h1 id="HEXO整体配置"><a href="#HEXO整体配置" class="headerlink" title="HEXO整体配置"></a><code>HEXO</code>整体配置</h1><ul><li><p>下载主题,并解压到<code>thems</code>目录下</p><ul><li>下载地址<code>https://github.com/blinkfox/hexo-theme-matery</code></li></ul></li><li><p>修改项目根目录下的配置文件<code>_config.yml</code>,将<code>theme</code>属性改为 <code>hexo-theme-matery</code></p></li><li><p>```bash<br>theme: hexo-theme-matery</p><pre class="line-numbers language-none"><code class="language-none">- 其他配置  - 网站配置  - 网址配置  - 首页配置```yaml# 网站配置title: rudy's blog # 网站标题subtitle: 'rudy 的个人博客' # 网站副标题description: 'Justice may be late, but will never be absent.' # 网站描述keywords:author: rudy # 网站作者language: zh-CN # 网站使用的语言，可以设置为中文timezone: ''# 网址配置url: http://localhost:4000 # 网址，会影响文章页的原文链接地址permalink: :year/:month/:day/:title/ # 文章的永久链接格式# 首页配置index_generator:  path: ''  per_page: 12 # 分页设置，该主题设置6、12、18比较好  order_by: -date # 按时间倒序排列# 分页配置per_page: 12pagination_dir: page<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="添加固定页面"><a href="#添加固定页面" class="headerlink" title="添加固定页面"></a>添加固定页面</h1><ul><li><p>创建导航按钮如标签、分类、归档对应页面</p></li><li><p>使用<code>hexo new page "categories"</code>命令新建分类页，分类页至少包含如下内容；</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: categoriesdate: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:19:56type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page "tags"</code>命令新建标签页，标签页至少包含如下内容；</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: tagsdate: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:25:04type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page "about"</code> 命令新建关于页面,关于页至少包含如下内容;</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: aboutdate: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:28:56type: <span class="token string">"about"</span>layout: <span class="token string">"about"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page 404</code>命令新建404页，404至少包含如下内容；</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: <span class="token number">404</span>date: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:32:48type: <span class="token string">"404"</span>layout: <span class="token string">"404"</span>description: <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>hexo new page "friends"</code></li></ul><p>Edit the file <code>/source/friends/index.md</code> you just created, at least you need the following:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: friendsdate: <span class="token number">2018</span>-12-12 <span class="token number">21</span>:25:30type: <span class="token string">"friends"</span>layout: <span class="token string">"friends"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page "contact"</code>现建一个交流页面</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: contactdate: <span class="token number">2018</span>-09-30 <span class="token number">17</span>:25:30type: <span class="token string">"contact"</span>layout: <span class="token string">"contact"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><ul><li>菜单导航配置 修改<code>hexo-theme-matery</code>下的<code>_config.yml</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子菜单配置</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book  <span class="token comment"># 子菜单配置</span>  Medias:    icon: fas fa-list    children:      - name: Music        url: /music        icon: fas fa-music      - name: Movies        url: /movies        icon: fas fa-film      - name: Books        url: /books        icon: fas fa-book      - name: Galleries        url: /galleries        icon: fas fa-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>代码高亮配置 修改<code>website-hexo</code>下的<code>_config.yml</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>  line_number: <span class="token boolean">true</span>  auto_detect: <span class="token boolean">false</span>  tab_replace: <span class="token string">''</span>  wrap: <span class="token boolean">true</span>  hljs: <span class="token boolean">false</span>prismjs:  enable: <span class="token boolean">true</span>  preprocess: <span class="token boolean">true</span>  line_number: <span class="token boolean">true</span>  tab_replace: <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="搜索插件安装"><a href="#搜索插件安装" class="headerlink" title="搜索插件安装"></a>搜索插件安装</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="汉语转拼音"><a href="#汉语转拼音" class="headerlink" title="汉语转拼音"></a>汉语转拼音</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li> 修改<code>website-hexo</code>下的<code>_config.yml</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">permalink_pinyin:  enable: <span class="token boolean">true</span>  separator: <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="文章统计分析"><a href="#文章统计分析" class="headerlink" title="文章统计分析"></a>文章统计分析</h1><ul><li>安装插件命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改主题中的<code>_config.yml</code>文件</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="添加表情支持"><a href="#添加表情支持" class="headerlink" title="添加表情支持"></a>添加表情支持</h1><ul><li>安装插件命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改<code>website-hexo</code>目录下的<code>_config.ymal</code>文件</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Add-RSS-feed-support-Optional"><a href="#Add-RSS-feed-support-Optional" class="headerlink" title="Add RSS feed support (Optional)"></a>Add RSS feed support (Optional)</h1><ul><li>支持<code>RSS</code>反馈,插件安装命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改<code>website-hexo</code>目录下的<code>_config.ymal</code>文件</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>运行命令完成配置</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="社交链接修改"><a href="#社交链接修改" class="headerlink" title="社交链接修改"></a>社交链接修改</h1><ul><li><p>修改主题目录下<code>_config.yaml</code>文件,主题默认支持<code>QQ</code>,<code>Github</code>和邮箱配置</p></li><li><p>然后修改主题文件<code>/layout/_partial/social-link.ejs</code> ,添加或者修改链接信息</p></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>github<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%= theme.socialLink.github %&gt;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tooltipped"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span> data<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"访问我的GitHub"</span> data<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"top"</span> data<span class="token operator">-</span>delay<span class="token operator">=</span><span class="token string">"50"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fab fa-github"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="编写文章"><a href="#编写文章" class="headerlink" title="编写文章"></a>编写文章</h1><ul><li>熟悉MarkDown语法</li><li>编写Fornt Matter</li></ul><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><ul><li><p>常规部署到nginx中</p><ul><li><code>Hexo</code>生成网站既快速又简单，一个命令生成静态文件，然后放置到<code>Nginx</code>的<code>html</code>目录下即可。</li><li>在命令行使用<code>hexo generate</code>命令可以将项目打包成静态文件，输出文件目录为<code>public</code>；</li><li>接下来把<code>public</code>目录下的所有文件复制到Nginx的<code>html</code>目录下即可完成部署，部署后显示内容如下。</li></ul></li><li><p>一键部署</p><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1></li><li><p>安装 hexo-deployer-git。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> &lt;repository url<span class="token punctuation">&gt;</span> <span class="token comment">#https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span>  <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>部署命令</p><ul><li>Run <code>hexo clean</code> &amp;&amp; <code>hexo deploy</code></li><li>查看网站地址 <code>&lt;username&gt;.github.io</code></li></ul></li><li><p>Github Pages</p><ul><li>创建一个Github页面站点</li><li>添加主题<ul><li>Settings配置选择主题</li></ul></li><li>配置发布资源<ul><li>发布之前确定指定分支的仓库是存在的</li></ul></li><li>自定义404页面</li><li>配置Https</li><li>使用子模块访问私有仓库</li><li>关闭部署的网站</li><li><a href="https://docs.github.com/en/pages/getting-started-with-github-pages" title="GitHubPages文档">参考部署链接</a></li></ul></li><li><p>GitLab Pages</p><ul><li>部署参考Github Pages<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1></li></ul></li><li><p>使用Hexo搭配<code>hexo-theme-matery</code>来搭建博客网站，不仅界面漂亮，而且功能强大。如果你想搭建自己的博客网站，这是个很好的选择</p></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>hexo-theme-matery主题官网：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></li><li>hexo官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></li></ul><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p>主题地址:<br><code>https://github.com/blinkfox/hexo-theme-matery</code></p><hr>]]></content>
      
      
      <categories>
          
          <category> 服务器篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Hexo </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo搭建博客就是这么酷炫</title>
      <link href="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B0%B1%E6%98%AF%E8%BF%99%E4%B9%88%E9%85%B7%E7%82%AB-hexo/"/>
      <url>/2022/04/28/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B0%B1%E6%98%AF%E8%BF%99%E4%B9%88%E9%85%B7%E7%82%AB-hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建Hexo"><a href="#搭建Hexo" class="headerlink" title="搭建Hexo"></a>搭建<code>Hexo</code></h1><h1 id="搭建前提"><a href="#搭建前提" class="headerlink" title="搭建前提"></a>搭建前提</h1><ul><li>Installation</li><li>Requirements<ul><li><a href="http://nodejs.org/">Node.js</a> (Should be at least Node.js 10.13, recommends 12.0 or higher)</li><li><a href="http://git-scm.com/">Git</a></li></ul></li><li>Install Git<ul><li>Windows: Download &amp; install <a href="https://git-scm.com/download/win">git</a>.</li><li>Mac: Install it with <a href="https://brew.sh/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> or <a href="http://sourceforge.net/projects/git-osx-installer/">installer</a>.</li><li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li></ul></li><li>Install Node.js</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">For Mac usersYou may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed<span class="token punctuation">,</span> open Xcode and go to Preferences <span class="token punctuation">-</span><span class="token punctuation">&gt;</span> Download <span class="token punctuation">-</span><span class="token punctuation">&gt;</span> Command Line Tools <span class="token punctuation">-</span><span class="token punctuation">&gt;</span> Install to install command line tools.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p><code>Windows</code>: Install it with <a href="https://github.com/jasongin/nvs/">nvs</a> (recommended) or <a href="https://github.com/nvm-sh/nvm">nvm</a>.</p></li><li><p><code>Mac</code>: Install it with <a href="https://brew.sh/">Homebrew</a> or <a href="http://www.macports.org/">MacPorts</a>.</p></li><li><p><code>Linux</code> (<code>DEB</code>/<code>RPM</code>-based): Install it with <a href="https://github.com/nodesource/distributions">NodeSource</a>.</p></li><li><p>Others: Install it through respective package manager. Refer to <a href="https://nodejs.org/en/download/package-manager/">the guide</a> provided by Node.js.</p></li><li><p>安装<code>Hexo-cli</code></p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>初始化博客目录<ul><li> 进入目录,并安装依赖</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 初始化博客目录</span>hexo init website-hexo<span class="token comment"># 进入博客目录</span><span class="token builtin class-name">cd</span> website-hexo<span class="token comment"># 安装博客相关依赖</span><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>目录结构如下</li></ul><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><h5 id="Site-configuration-file-You-can-configure-most-settings-here"><a href="#Site-configuration-file-You-can-configure-most-settings-here" class="headerlink" title="Site configuration file. You can configure most settings here."></a>Site <a href="https://hexo.io/docs/configuration">configuration</a> file. You can configure most settings here.</h5><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">package.json<span class="token punctuation">{</span>  <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"hexo-site"</span><span class="token punctuation">,</span>  <span class="token key atrule">"version"</span><span class="token punctuation">:</span> <span class="token string">"0.0.0"</span><span class="token punctuation">,</span>  <span class="token key atrule">"private"</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">,</span>  <span class="token key atrule">"hexo"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token key atrule">"version"</span><span class="token punctuation">:</span> <span class="token string">""</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token key atrule">"dependencies"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token key atrule">"hexo"</span><span class="token punctuation">:</span> <span class="token string">"^3.8.0"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-generator-archive"</span><span class="token punctuation">:</span> <span class="token string">"^0.1.5"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-generator-category"</span><span class="token punctuation">:</span> <span class="token string">"^0.1.3"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-generator-index"</span><span class="token punctuation">:</span> <span class="token string">"^0.2.1"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-generator-tag"</span><span class="token punctuation">:</span> <span class="token string">"^0.2.0"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-renderer-ejs"</span><span class="token punctuation">:</span> <span class="token string">"^0.3.1"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-renderer-stylus"</span><span class="token punctuation">:</span> <span class="token string">"^0.3.3"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-renderer-marked"</span><span class="token punctuation">:</span> <span class="token string">"^0.3.2"</span><span class="token punctuation">,</span>    <span class="token key atrule">"hexo-server"</span><span class="token punctuation">:</span> <span class="token string">"^0.3.3"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><h6 id="Scaffold-folder-When-you-create-a-new-post-Hexo-bases-the-new-file-on-the-scaffold"><a href="#Scaffold-folder-When-you-create-a-new-post-Hexo-bases-the-new-file-on-the-scaffold" class="headerlink" title="Scaffold folder. When you create a new post, Hexo bases the new file on the scaffold."></a><a href="https://hexo.io/docs/writing#Scaffolds">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</h6><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><pre class="line-numbers language-none"><code class="language-none">Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with _ (underscore) - except the _posts folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the public folder, while other files will simply be copied.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><h5 id="Theme-folder-Hexo-generates-a-static-website-by-combining-the-site-contents-with-the-theme"><a href="#Theme-folder-Hexo-generates-a-static-website-by-combining-the-site-contents-with-the-theme" class="headerlink" title="Theme folder. Hexo generates a static website by combining the site contents with the theme"></a><a href="https://hexo.io/docs/themes">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme</h5><ul><li>使用命令启动<code>hexo</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h1 id="HEXO整体配置"><a href="#HEXO整体配置" class="headerlink" title="HEXO整体配置"></a><code>HEXO</code>整体配置</h1><ul><li><p>下载主题,并解压到<code>thems</code>目录下</p><ul><li>下载地址<code>https://github.com/blinkfox/hexo-theme-matery</code></li></ul></li><li><p>修改项目根目录下的配置文件<code>_config.yml</code>,将<code>theme</code>属性改为 <code>hexo-theme-matery</code></p></li><li><p>```bash<br>theme: hexo-theme-matery</p><pre class="line-numbers language-none"><code class="language-none">- 其他配置  - 网站配置  - 网址配置  - 首页配置```yaml# 网站配置title: rudy's blog # 网站标题subtitle: 'rudy 的个人博客' # 网站副标题description: 'Justice may be late, but will never be absent.' # 网站描述keywords:author: rudy # 网站作者language: zh-CN # 网站使用的语言，可以设置为中文timezone: ''# 网址配置url: http://localhost:4000 # 网址，会影响文章页的原文链接地址permalink: :year/:month/:day/:title/ # 文章的永久链接格式# 首页配置index_generator:  path: ''  per_page: 12 # 分页设置，该主题设置6、12、18比较好  order_by: -date # 按时间倒序排列# 分页配置per_page: 12pagination_dir: page<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="添加固定页面"><a href="#添加固定页面" class="headerlink" title="添加固定页面"></a>添加固定页面</h1><ul><li><p>创建导航按钮如标签、分类、归档对应页面</p></li><li><p>使用<code>hexo new page "categories"</code>命令新建分类页，分类页至少包含如下内容；</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: categoriesdate: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:19:56type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page "tags"</code>命令新建标签页，标签页至少包含如下内容；</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: tagsdate: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:25:04type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page "about"</code> 命令新建关于页面,关于页至少包含如下内容;</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: aboutdate: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:28:56type: <span class="token string">"about"</span>layout: <span class="token string">"about"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page 404</code>命令新建404页，404至少包含如下内容；</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: <span class="token number">404</span>date: <span class="token number">2021</span>-09-06 <span class="token number">10</span>:32:48type: <span class="token string">"404"</span>layout: <span class="token string">"404"</span>description: <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>hexo new page "friends"</code></li></ul><p>Edit the file <code>/source/friends/index.md</code> you just created, at least you need the following:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: friendsdate: <span class="token number">2018</span>-12-12 <span class="token number">21</span>:25:30type: <span class="token string">"friends"</span>layout: <span class="token string">"friends"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用<code>hexo new page "contact"</code>现建一个交流页面</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: contactdate: <span class="token number">2018</span>-09-30 <span class="token number">17</span>:25:30type: <span class="token string">"contact"</span>layout: <span class="token string">"contact"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><ul><li>菜单导航配置 修改<code>hexo-theme-matery</code>下的<code>_config.yml</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子菜单配置</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book  <span class="token comment"># 子菜单配置</span>  Medias:    icon: fas fa-list    children:      - name: Music        url: /music        icon: fas fa-music      - name: Movies        url: /movies        icon: fas fa-film      - name: Books        url: /books        icon: fas fa-book      - name: Galleries        url: /galleries        icon: fas fa-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>代码高亮配置 修改<code>website-hexo</code>下的<code>_config.yml</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>  line_number: <span class="token boolean">true</span>  auto_detect: <span class="token boolean">false</span>  tab_replace: <span class="token string">''</span>  wrap: <span class="token boolean">true</span>  hljs: <span class="token boolean">false</span>prismjs:  enable: <span class="token boolean">true</span>  preprocess: <span class="token boolean">true</span>  line_number: <span class="token boolean">true</span>  tab_replace: <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="搜索插件安装"><a href="#搜索插件安装" class="headerlink" title="搜索插件安装"></a>搜索插件安装</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="汉语转拼音"><a href="#汉语转拼音" class="headerlink" title="汉语转拼音"></a>汉语转拼音</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li> 修改<code>website-hexo</code>下的<code>_config.yml</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">permalink_pinyin:  enable: <span class="token boolean">true</span>  separator: <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="文章统计分析"><a href="#文章统计分析" class="headerlink" title="文章统计分析"></a>文章统计分析</h1><ul><li>安装插件命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改主题中的<code>_config.yml</code>文件</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># set true.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="添加表情支持"><a href="#添加表情支持" class="headerlink" title="添加表情支持"></a>添加表情支持</h1><ul><li>安装插件命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改<code>website-hexo</code>目录下的<code>_config.ymal</code>文件</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Add-RSS-feed-support-Optional"><a href="#Add-RSS-feed-support-Optional" class="headerlink" title="Add RSS feed support (Optional)"></a>Add RSS feed support (Optional)</h1><ul><li>支持<code>RSS</code>反馈,插件安装命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改<code>website-hexo</code>目录下的<code>_config.ymal</code>文件</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>运行命令完成配置</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="社交链接修改"><a href="#社交链接修改" class="headerlink" title="社交链接修改"></a>社交链接修改</h1><ul><li><p>修改主题目录下<code>_config.yaml</code>文件,主题默认支持<code>QQ</code>,<code>Github</code>和邮箱配置</p></li><li><p>然后修改主题文件<code>/layout/_partial/social-link.ejs</code> ,添加或者修改链接信息</p></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>github<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%= theme.socialLink.github %&gt;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tooltipped"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span> data<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"访问我的GitHub"</span> data<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"top"</span> data<span class="token operator">-</span>delay<span class="token operator">=</span><span class="token string">"50"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fab fa-github"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="编写文章"><a href="#编写文章" class="headerlink" title="编写文章"></a>编写文章</h1><ul><li>熟悉MarkDown语法</li><li>编写Fornt Matter</li></ul><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><ul><li><p><code>Hexo</code>生成网站既快速又简单，一个命令生成静态文件，然后放置到<code>Nginx</code>的<code>html</code>目录下即可。</p></li><li><p>在命令行使用<code>hexo generate</code>命令可以将项目打包成静态文件，输出文件目录为<code>public</code>；</p></li><li><p>接下来把<code>public</code>目录下的所有文件复制到Nginx的<code>html</code>目录下即可完成部署，部署后显示内容如下。</p></li><li><p>部署命令</p><ul><li>Run <code>hexo clean</code> &amp;&amp; <code>hexo deploy</code></li><li>查看网站地址 <code>&lt;username&gt;.github.io</code></li></ul></li><li><p>Github Pages</p><ul><li>创建一个Github页面站点</li><li>添加主题<ul><li>Settings配置选择主题</li></ul></li><li>配置发布资源<ul><li>发布之前确定指定分支的仓库是存在的</li></ul></li><li>自定义404页面</li><li>配置Https</li><li>使用子模块访问私有仓库</li><li>关闭部署的网站</li><li><a href="https://docs.github.com/en/pages/getting-started-with-github-pages" title="GitHubPages文档">参考部署链接</a></li></ul></li><li><p>GitLab Pages</p><ul><li>部署参考Github Pages<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1></li></ul></li><li><p>使用Hexo搭配<code>hexo-theme-matery</code>来搭建博客网站，不仅界面漂亮，而且功能强大。如果你想搭建自己的博客网站，这是个很好的选择</p></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>hexo-theme-matery主题官网：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></li><li>hexo官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></li></ul><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p>项目github地址: </p><pre class="line-numbers language-none"><code class="language-none">https://github.com/blinkfox/hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 静态网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令基础篇</title>
      <link href="/2022/04/28/linux/Linux%E5%91%BD%E4%BB%A4%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/2022/04/28/linux/Linux%E5%91%BD%E4%BB%A4%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h4 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h4><h4 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h4><ul><li>tar命令<ul><li>-c: 建立压缩档案</li><li>-x：解压</li><li>-t：查看内容</li><li>-r：向压缩归档文件末尾追加文件</li><li>-u：更新原压缩包中的文件</li><li>这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</li><li>-z：有gzip属性的</li><li>-j：有bz2属性的</li><li>-Z：有compress属性的</li><li>-v：显示所有过程</li><li>-O：将文件解开到标准输出</li><li>下面的参数-f是必须的</li><li>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。<h4 id="tar-cf-all-tar-jpg"><a href="#tar-cf-all-tar-jpg" class="headerlink" title="tar -cf all.tar *.jpg"></a>tar -cf all.tar *.jpg</h4></li></ul></li><li>这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。<h4 id="tar-rf-all-tar-gif"><a href="#tar-rf-all-tar-gif" class="headerlink" title="tar -rf all.tar *.gif"></a>tar -rf all.tar *.gif</h4></li><li>这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。<h4 id="tar-uf-all-tar-logo-gif"><a href="#tar-uf-all-tar-logo-gif" class="headerlink" title="tar -uf all.tar logo.gif"></a>tar -uf all.tar logo.gif</h4></li><li>这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。<h4 id="tar-tf-all-tar"><a href="#tar-tf-all-tar" class="headerlink" title="tar -tf all.tar"></a>tar -tf all.tar</h4></li><li>这条命令是列出all.tar包中所有文件，-t是列出文件的意思<h4 id="tar-xf-all-tar"><a href="#tar-xf-all-tar" class="headerlink" title="tar -xf all.tar"></a>tar -xf all.tar</h4></li><li>这条命令是解出all.tar包中所有文件，-x是解开的意思<h4 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h4><ul><li>tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg</li><li>tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</li><li>tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</li><li>tar –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</li><li>rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux</li><li>zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux</li></ul></li><li>解压<ul><li>tar –xvf file.tar //解压 tar包</li><li>tar -xzvf file.tar.gz //解压tar.gz</li><li>tar -xjvf file.tar.bz2 //解压 tar.bz2</li><li>tar –xZvf file.tar.Z //解压tar.Z</li><li>unrar e file.rar //解压rar</li><li>unzip file.zip //解压zip<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li></ul></li><li>1、*.tar 用 tar –xvf 解压</li><li>2、*.gz 用 gzip -d或者gunzip 解压</li><li>3、*.tar.gz和*.tgz 用 tar –xzf 解压</li><li>4、*.bz2 用 bzip2 -d或者用bunzip2 解压</li><li>5、*.tar.bz2用tar –xjf 解压</li><li>6、*.Z 用 uncompress 解压</li><li>7、*.tar.Z 用tar –xZf 解压</li><li>8、*.rar 用 unrar e解压</li><li>9、*.zip 用 unzip 解压<h2 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h2></li></ul><ul><li>mv</li><li>cp</li><li>apt-get</li><li>tail</li><li>head</li><li>cat</li><li>man</li><li>less</li><li>more</li><li>wc</li><li>ps aux</li><li>top</li><li>netstat</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux卸载安装</title>
      <link href="/2022/04/28/linux/Linux%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
      <url>/2022/04/28/linux/Linux%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="linux-卸载系列"><a href="#linux-卸载系列" class="headerlink" title="linux 卸载系列"></a>linux 卸载系列</h2><h4 id="mysql卸载"><a href="#mysql卸载" class="headerlink" title="mysql卸载"></a>mysql卸载</h4><ul><li><p>查看是否有安装mysql</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># rpm -qa|grep -i mysql</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>mysql57-community-release-el7-9.noarch<br>mysql-community-libs-5.7.37-1.el7.x86_64<br>mysql-community-common-5.7.37-1.el7.x86_64<br>mysql-community-server-5.7.37-1.el7.x86_64<br>mysql-community-client-5.7.37-1.el7.x86_64</p></blockquote></li><li><p>停止mysql服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># systemctl stop mysqld</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>开始删除mysql</p><ul><li>删除列表中的第一个就可以了<pre class="line-numbers language-none"><code class="language-none">[root@192 lib]# rpm -ev mysql57-community-release-el7-9.noarch --nodeps# 如果不放心全部删除 注意依赖关系 先删除server--&gt;client--&gt;libs--&gt;common[root@192 lib]# rpm -ev mysql-community-client-5.7.37-1.el7.x86_64error: Failed dependencies:mysql-community-client(x86-64) &gt;= 5.7.9 is needed by (installed) mysql-community-server-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-server-5.7.37-1.el7.x86_64Preparing packages...mysql-community-server-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-client-5.7.37-1.el7.x86_64Preparing packages...mysql-community-client-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-common-5.7.37-1.el7.x86_64error: Failed dependencies:mysql-community-common(x86-64) &gt;= 5.7.9 is needed by (installed) mysql-community-libs-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-libs-5.7.37-1.el7.x86_64Preparing packages...mysql-community-libs-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-common-5.7.37-1.el7.x86_64Preparing packages...mysql-community-common-5.7.37-1.el7.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>再执行一边过滤查询确定删除干净</p><ul><li>[root@192 lib]# rpm -qa|grep -i mysql</li></ul></li><li><p>删除之前旧版本mysql安装目录</p><ul><li>先查看mysql目录</li><li>再依次删除<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / -name mysql<span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># rm -rf /var/lib/mysql</span><span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># rm -rf /var/lib/mysql/mysql</span><span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># rm -rf /usr/lib64/mysql</span><span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># rm -rf /usr/share/mysql</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>卸载后/etc/my.cnf不会删除，需要进行手工删除</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># rm -rf /etc/my.cnf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>再次检查是否删除干净</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@192 lib<span class="token punctuation">]</span><span class="token comment"># rpm -qa|grep -i mysql</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>mysql安装推荐阿里云官方文档 安装示例</p><ul><li>nginx卸载<ul><li>待更新…</li></ul></li><li>docker 卸载<ul><li>待更新…<br>redis卸载    </li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> BSD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公安备案信息</title>
      <link href="/2022/04/27/%E5%85%AC%E5%AE%89%E5%A4%87%E6%A1%88%E4%BF%A1%E6%81%AF-beian/"/>
      <url>/2022/04/27/%E5%85%AC%E5%AE%89%E5%A4%87%E6%A1%88%E4%BF%A1%E6%81%AF-beian/</url>
      
        <content type="html"><![CDATA[<h1 id="联网登录备案"><a href="#联网登录备案" class="headerlink" title="联网登录备案"></a>联网登录备案</h1><ul><li>Xxx云备案申请<ul><li>准备材料<ul><li>身份证正反面各一张</li><li>上海本地居住证一张</li><li>背景墙视频认证</li><li>邮箱认证</li><li>电话号码认证</li></ul></li></ul></li><li>域名实名认证<h1 id="ICP备案流程"><a href="#ICP备案流程" class="headerlink" title="ICP备案流程"></a>ICP备案流程</h1><ul><li>填写备案申请材料</li><li>备案提交</li><li>审核完成</li><li>短信认证(24小时有效)<h1 id="联网登录备案-1"><a href="#联网登录备案-1" class="headerlink" title="联网登录备案"></a>联网登录备案</h1></li><li>注册信息<ul><li>公安联网登录地址<ul><li>用户名 <code>javacoldeyes</code></li><li>密码 <code>A25%xbp+C</code> </li></ul></li></ul></li><li>填写个人网站信息<ul><li> 邮箱认证</li><li> 电话号码认证</li></ul></li><li>申请填写<ul><li>个人主页填写网站备案信息</li><li>个人手持身份证一张</li><li>身份证正反面各一张</li><li>照片大小控制在400kb以内 </li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言和C++技术书籍</title>
      <link href="/2022/04/27/C%E8%AF%AD%E8%A8%80%E5%92%8CC++%E6%8A%80%E6%9C%AF%E4%B9%A6%E7%B1%8D-c-language/"/>
      <url>/2022/04/27/C%E8%AF%AD%E8%A8%80%E5%92%8CC++%E6%8A%80%E6%9C%AF%E4%B9%A6%E7%B1%8D-c-language/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="C语言-amp-amp-C"><a href="#C语言-amp-amp-C" class="headerlink" title="C语言 &amp;&amp; C++"></a><code>C</code>语言 &amp;&amp; <code>C++</code></h1><ul><li>书籍文献<ul><li><code>C</code>语言 <ul><li><a href="https://www.javacoldly.xyz/upload/2022/04/C%20Primer%20Plus%EF%BC%88%E7%AC%AC%E4%BA%94%E7%89%88%EF%BC%89%20.pdf" title="C Primer Plus(第五版)">C Primer Plus（第五版）</a>    </li><li><a href="https://www.javacoldly.xyz/upload/2022/04/C%E5%92%8C%E6%8C%87%E9%92%88.pdf" title="C和指针">C和指针</a></li><li><a href="https://www.javacoldly.xyz/upload/2022/04/C%E9%99%B7%E9%98%B1%E4%B8%8E%E7%BC%BA%E9%99%B7.pdf" title="C陷阱与缺陷">C陷阱与缺陷</a>    </li><li><a href="https://www.javacoldly.xyz/upload/2022/04/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B.pdf" title="C专家编程">C专家编程</a></li></ul></li><li><code>C++</code>语言入门<ul><li><a href="https://www.javacoldly.xyz/upload/2022/04/C++%20Primer%20%E7%AC%AC%E4%BA%94%E7%89%88---%20%E9%AB%98%E6%B8%85%E7%89%88.pdf" title="C++ Primer 第五版— 高清版">C++ Primer 第五版— 高清版</a>    </li></ul></li><li><code>C++</code>语言深入学习<ul><li><a href="https://www.javacoldly.xyz/upload/2022/04/C++%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97.pdf" title="C++性能优化指南"><code>C++</code>性能优化指南</a>    </li><li><a href="https://www.javacoldly.xyz/upload/2022/04/STL%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90--%E4%BE%AF%E6%8D%B7.pdf" title="STL源码剖析–侯捷"><code>STL</code>源码剖析–侯捷</a></li><li><a href="https://www.javacoldly.xyz/upload/2022/04/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2C++%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%20PDF%E4%B8%AD%E6%96%87%E6%B8%85%E6%99%B0%E7%89%88.pdf" title="深度探索C++对象模型 PDF中文清晰版">深度探索<code>C++</code>对象模型 <code>PDF</code>中文清晰版</a>    </li><li><a href="https://www.javacoldly.xyz/upload/2022/04/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3c11(c11%E6%96%B0%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8).pdf" title="深入理解c11(c11新特性解析与应用)">深入理解<code>c11</code>(<code>c11</code>新特性解析与应用)</a></li></ul></li><li><code>C++</code>语言实战<ul><li><a href="https://www.javacoldly.xyz/upload/2022/04/Effective.Modern.C++%20-%20%E8%8B%B1%E6%96%87%E7%89%88.pdf" title="Effective.Modern.C++ - 英文版">Effective.Modern.<code>C++</code> - 英文版</a>    </li><li><a href="https://www.javacoldly.xyz/upload/2022/04/Effective.Modern.C++%20-%20%E4%B8%AD%E6%96%87%E7%89%88.pdf" title="Effective.Modern.C++ - 中文版">Effective.Modern.<code>C++</code> - 中文版</a></li><li><a href="https://www.javacoldly.xyz/upload/2022/04/Effective+STL%E4%B8%AD%E6%96%87%E7%89%88%EF%BC%9A50%E6%9D%A1%E6%9C%89%E6%95%88%E4%BD%BF%E7%94%A8STL%E7%9A%84%E7%BB%8F%E9%AA%8C.pdf" title="Effective+STL中文版：50条有效使用STL的经验">Effective+<code>STL</code>中文版：50条有效使用STL的经验</a>    </li><li><a href="https://www.javacoldly.xyz/upload/2022/04/EffectiveC++%E4%B8%AD%E6%96%87%E7%89%88%EF%BC%88%E7%AC%AC%E4%B8%89%E7%89%88%EF%BC%89.pdf" title="EffectiveC++中文版（第三版）">Effective<code>C++</code>中文版（第三版）</a></li><li><a href="https://www.javacoldly.xyz/upload/2022/04/More%20Effective%20C++%E4%B8%AD%E6%96%87.pdf" title="More Effective C++中文">More Effective <code>C++</code>中文</a></li></ul></li></ul></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 文献资料 </category>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis技术书籍</title>
      <link href="/2022/04/27/redis%E6%8A%80%E6%9C%AF%E4%B9%A6%E7%B1%8D-redis/"/>
      <url>/2022/04/27/redis%E6%8A%80%E6%9C%AF%E4%B9%A6%E7%B1%8D-redis/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="redis书籍"><a href="#redis书籍" class="headerlink" title="redis书籍"></a>redis书籍</h1><ul><li>参考书目<ul><li><a href="https://www.javacoldly.xyz/upload/2022/04/REDIS%20%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97.pdf" title="redis入门指南">REDIS入门指南</a></li><li><a href="https://www.javacoldly.xyz/upload/2022/04/Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0.pdf" title="Redis设计与实现">Redis设计与实现</a></li><li><a href="https://www.javacoldly.xyz/upload/2022/04/Redis%E6%BA%90%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90.pdf" title="Redis源代码分析">Redis源代码分析</a></li><li><a href="https://www.javacoldly.xyz/upload/2022/04/Redis%E5%AE%9E%E6%88%98_%EF%BC%88%E7%BE%8E%EF%BC%89%E5%8D%A1%E5%B0%94%E6%A3%AE%E8%91%97_%E5%8C%97%E4%BA%AC%EF%BC%9A%E4%BA%BA%E6%B0%91%E9%82%AE%E7%94%B5%E5%87%BA%E7%89%88%E7%A4%BE_2015.11_281_13900741.pdf" title="Redis实战_（美）卡尔森著">Redis实战_（美）卡尔森著</a></li></ul></li></ul><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络协议应用</title>
      <link href="/2022/04/26/%E5%8D%8F%E8%AE%AE%E6%B5%85%E6%9E%90-protecol/"/>
      <url>/2022/04/26/%E5%8D%8F%E8%AE%AE%E6%B5%85%E6%9E%90-protecol/</url>
      
        <content type="html"><![CDATA[<h2 id="影响因素"><a href="#影响因素" class="headerlink" title="影响因素"></a>影响因素</h2><ul><li>协议</li><li>特征</li><li>服务器提供商</li><li>使用方法</li><li><code>GFW</code><ul><li>判断流量头</li><li>判断特征</li><li>判断<code>IP</code></li><li>判断端口</li><li>数据量大小/长短</li><li><code>TCP</code>长连接时长</li><li>被动监听</li><li>主动嗅探</li><li>人工干预</li><li>时间维度</li></ul></li><li>协议<ul><li>影响硬度<ul><li>取决于服务器的安全</li></ul></li><li><code>shadowsocks</code>协议<ul><li>特点</li><li>简单粗暴,程序设计的目的直接是为了解决问题</li></ul></li><li><code>shadowsocksR</code>协议<ul><li>特点</li><li>基于<code>shadowsocks</code>协议升级</li></ul></li><li><code>V2ray</code><ul><li>特点<ul><li>支持多种加密算法</li><li>支持多种协议</li><li>弹性能力高</li><li>安全性相对更高</li></ul></li><li>缺点<ul><li>部署复杂化</li><li><code>vemess</code>协议和<code>tls</code>协议导致<code>cpu</code>负载更高</li><li><code>RTT</code>次数大大多于<code>shadowsocks</code>协议</li></ul></li><li>方案<ul><li><code>vemess</code> + <code>websocket</code> + <code>tls</code>    </li><li>伪装流量<ul><li><code>V2ray</code>外面加一个真实网站作为掩护</li><li><code>V2ray</code> + <code>websocket</code> + <code>tls</code> + <code>web</code> </li></ul></li><li></li></ul></li></ul></li><li><code>trojan</code><ul><li>特点<ul><li>支持协议只有一种 <code>websocket</code> + <code>tls</code></li><li>只使用了 <code>tls</code> 加密方式</li><li>速度较快</li><li>轻量化</li></ul></li><li>缺点<ul><li>安全性一般</li><li>多平台兼容性较差<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1></li></ul></li></ul></li></ul></li><li>理性看待新协议的出现</li><li>破解和反破解是一个博弈过程,双方也是一直在互相提升。</li><li>博弈过程是一直存在的,除非一方完全消失</li><li>有了成熟的<code>AI</code>,大数据分析特征的方式.一切加密协议都只是暂时存在的</li><li>特征是一定有的,只是样本不够,不能暂时分析清楚的特征。</li><li>普通用户使用大机场,<code>shadowsocks</code>依然适合绝大数机场用户</li><li><code>VPS</code>用户建议使用<code>V2ray</code>,弹性功能支持更多自定义功能</li><li>学习网络基础,动态的科学上网</li><li>协议的选择<ul><li>需求</li><li>部署环境</li><li>使用习惯</li></ul></li><li>概念<ul><li><code>RTT</code> 通讯延迟</li><li>服务代理中转</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V2ray </tag>
            
            <tag> Shadowsocks </tag>
            
            <tag> Trojan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="/2022/04/26/MarkDown%E8%AF%AD%E6%B3%95-markdown-yu-fa/"/>
      <url>/2022/04/26/MarkDown%E8%AF%AD%E6%B3%95-markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="今日学习任务"><a href="#今日学习任务" class="headerlink" title="今日学习任务"></a>今日学习任务</h1><h2 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h2><hr><ul><li>有序列表  </li></ul><ol><li>rownumber1</li><li>rownumber2</li></ol><hr><ul><li>无序列表</li><li>无序列表1</li><li>无序列表2<ul><li>无序列表2.1</li><li>无序列表2.2</li></ul></li><li>无序列表3</li></ul><hr><ul><li>代码块</li></ul><hr><ul><li>MarkDown代码块<pre class="line-numbers language-md" data-language="md"><code class="language-md">This is a MarkDown Block<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><hr><ul><li>编程语言代码块</li></ul><hr><ul><li><code>js</code>代码块<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>tr<span class="token operator">&gt;</span><span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span><span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span><span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span><span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><ul><li><code>java</code>代码块<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><hr><ul><li>图片<ul><li>段落中引入</li><li>格式 ：<code>![data](ID)</code></li><li>示例 : <code>![ image ](https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/nginx%E9%85%8D%E7%BD%AE.png "title is here")</code><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/nginx%E9%85%8D%E7%BD%AE.png" alt=" image " title="nginx配置修改"></li></ul></li></ul><hr><ul><li>链接<ul><li>行内<ul><li>段落中直接引入 <ul><li>格式: <code>[描述](链接ID)</code></li><li>示例1：<code>[Google](https://www.google.com)</code></li><li>示例2：<code>[Google][https://www.google.com]</code></li><li>示例3：<code>[Google][2]</code><ul><li>[Google][2]</li></ul></li><li>示例4： This is <a href="http://example.com/" title="Title">an example</a> inline link. <a href="http://example.net/">This<br>link</a> has no title attribute.</li></ul></li></ul></li><li>引入主机资源使用相对路径或者绝对路径<ul><li>示例1：<code>See my [About](/about/) page for details.</code></li><li>See my <a href="/about/">About</a> page for details.</li><li>示例2</li><li><code>See my [ServerUplpoad](/upload/2022/04/AI.png/) page for details. </code> </li><li>See my <a href="/upload/2022/04/AI.png/">ServerUplpoad</a> page for details.  </li></ul></li><li>参考 <ul><li>参考形式的链接使用另外一个方括号接在链接文字的括号后面，而在第二个方括号里面要填入用以辨识链接的标签:</li><li>示例1：<ul><li><code>This is [an example][1] reference-style link.</code></li><li>This is <a href="http://example.com/" title="Optional Title Here">an example</a> reference-style link.</li></ul></li><li>示例2：        <ul><li><code>[Google][]</code></li><li><a href="http://www.google.com/" title="GoogleSearch">Google</a></li></ul></li><li>示例3：        <ul><li><code>[class][foo]</code></li><li><a href="http://www.foo.com/" title="Foo class">class</a></li></ul></li></ul></li></ul></li></ul><hr><ul><li>强调</li></ul><p><strong>single asterisks</strong><br><strong>single asterisks</strong></p><hr><ul><li>引言</li></ul><hr><ul><li>转义符号和适用的符号</li></ul><hr><ul><li>脚注</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> MarkDown工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器的入门使用</title>
      <link href="/2022/04/24/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%20-server/"/>
      <url>/2022/04/24/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%20-server/</url>
      
        <content type="html"><![CDATA[<h2 id="云服务器的入门系列"><a href="#云服务器的入门系列" class="headerlink" title="云服务器的入门系列"></a>云服务器的入门系列</h2><ul><li><p>LAMP环境搭建</p></li><li><p>个人博客Wordpress搭建</p></li><li><p>GItlab搭建</p></li><li><p>Ftp搭建</p><ul><li>服务端搭建</li><li>客户端搭建 <h2 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h2></li></ul></li><li><p>公网IP</p><pre class="line-numbers language-none"><code class="language-none">youIP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/%E9%98%BF%E9%87%8C%E4%BA%91ECS.png" alt=" image "></p></li><li><p>密码</p><pre class="line-numbers language-none"><code class="language-none">pwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>域名</p><pre class="line-numbers language-none"><code class="language-none">javacoldly.xyz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>SSL证书申请    </p><ul><li>todo..    </li></ul></li><li><p>API 密钥</p><pre class="line-numbers language-none"><code class="language-none">SecretId:&nbsp;XxxSecretKey:Xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h2></li><li><p>账号密码</p><ul><li>公网IP<pre class="line-numbers language-none"><code class="language-none">120.79.150.12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p> 密码</p><pre class="line-numbers language-none"><code class="language-none">pwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>个人建站环境搭建</p><ul><li>防火墙</li><li>查看状态</li><li>关闭防火墙</li><li> <code>stemctl stop firewalld</code></li><li>永久关闭防火墙</li><li><code>systemctl disable firewalld</code></li><li>关闭SELInux<ul><li>开启或关闭SELinux</li></ul></li><li>禁用 selinux：setenforce 0</li><li> <code>[root@iZwz9c743j35koyx2hety8Z ~]# getenforce</code> </li><li><code>[root@iZwz9c743j35koyx2hety8Z ~]# systemctl status firewalld</code></li></ul></li><li><p>部署LNMP环境    </p><ul><li>nginx安装<br>  -<code> yum -y install nginx</code></li><li>mysql安装</li><li>更新yum源</li><li><code> rpm -   http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</code></li><li>安装mysql命令</li><li><code>yum -y install mysql-community-server</code></li><li>查看版本号</li><li><code>mysql -V</code></li></ul></li><li><p>启动mysql</p><ul><li><code>systemctl start mysqld</code></li><li>其他命令<ul><li> <code>systemctl enable mysqld</code></li><li><code>systemctl daemon-reload</code></li></ul></li></ul></li><li><p>php安装</p><ul><li>更新yum源</li><li><code>yum install https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></li><li>运行以下命令添加Webtatic源。    </li><li><code>rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></li><li>命令安装</li><li><code>yum -y install php70w-devel php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64  php70w-pdo.x86_64   php70w-mysqlnd  php70w-fpm php70w-opcache php70w-pecl-redis php70w-pecl-mongodb</code></li><li>查看php版本<ul><li><code>php -v</code></li></ul></li><li>nginx配置<ul><li>nginx备份<ul><li> <code>cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak</code></li></ul></li><li>修改nginx文件支持php</li><li>配置参考<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/nginx%E9%85%8D%E7%BD%AE.png" alt=" image"></li></ul></li><li>启动nginx服务</li><li>设置nginx开机自启动</li></ul></li><li><p>Mysql配置</p><ul><li>获取初始密码</li><li><code>grep 'temporary password' /var/log/mysqld.log</code><pre class="line-numbers language-none"><code class="language-none">2022-04-22T07:12:28.723970Z 1 [Note] A temporary password is generated for root@localhost: tN/TN0rfV+0c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>配置Mysql安全</li><li>mysql_secure_installation</li><li>输入初始密码    <code>tN/TN0rfV+0c</code></li><li>配置新密码<pre class="line-numbers language-none"><code class="language-none">#输入新密码。长度为8至30个字符，必须同时包含大小写英文字母、数字和特殊符号。特殊符号包含()` ~!@#$%^&amp;*-+=|{}[]:;‘&lt;&gt;,.?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code> mysql</code>新密码：<code>FrsEKF,m9a$dn2N</code></p><ul><li>接下来操作一直 <code>yes!</code></li><li> 删除匿名用户</li><li>禁止使用<code>root</code>用户远程登录<code>mysql</code></li><li>删除<code>test</code>库以及用户访问<code>test</code>库的权限</li><li>重新加载授权表</li></ul></blockquote></li></ul></li><li><p>PHP配置</p><ul><li>新建phpinfo.php文件（网站根目录配置）<ul><li>root参数<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/nginx%E9%85%8D%E7%BD%AE.png" alt=" image "></li></ul></li><li> <code>vim /usr/share/nginx/html/phpinfo.php</code></li><li>添加如下内容 保存关闭<ul><li><code>&lt;?php echo phpinfo(); ?&gt;</code></li></ul></li></ul></li><li><p>启动<code>php-fpm</code></p><ul><li><code>systemctl start php-fpm</code></li><li>设置开机自启动<ul><li><code>systemctl enable php-fpm</code></li></ul></li><li>测试访问<code>LNMP</code>配置信息页面</li><li>在浏览器的地址栏输入<code>http://&lt;ECS实例公网IP地址&gt;/phpinfo.php</code>进行访问 <code>http://120.79.150.12</code></li><li>访问成功后删除php页面<ul><li><code>rm -rf /usr/share/nginx/html/phpinfo.php</code></li></ul></li><li><code>其他nginx版本安装 如1.18.1 参考文档 阿里云LNMP环境搭建</code><ul><li><code>[root@iZwz9c743j35koyx2hety8Z mysql]# php -v</code><pre class="line-numbers language-none"><code class="language-none">PHP 7.0.33 (cli) (built: Dec  6 2018 22:30:44) ( NTS ) Copyright (c) 1997-2017 The PHP Group Zend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies with Zend OPcache v7.0.33, Copyright (c) 1999-2017, by Zend Technologies<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul></li><li><p>查看LNMP配置信息</p><ul><li><code>[root@iZwz9c743j35koyx2hety8Z mysql]# mysql -V</code><pre class="line-numbers language-none"><code class="language-none">mysql  Ver 14.14 Distrib 5.7.37, for Linux (x86_64) using  EditLine wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p><code>[root@iZwz9c743j35koyx2hety8Z mysql]# nginx -v</code></p><pre class="line-numbers language-none"><code class="language-none">nginx version: nginx/1.20.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="阿里云安装Mysql报错"><a href="#阿里云安装Mysql报错" class="headerlink" title="阿里云安装Mysql报错"></a>阿里云安装Mysql报错</h4></li><li><p>报错信息</p><pre class="line-numbers language-Failing" data-language="Failing"><div class="caption"><span>package is: mysql-community-server-5.7.37-1.el7.x86_64</span></div><code class="language-Failing"> GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql源 “MySQL 5.7 Community Server” 的 GPG&nbsp;密钥已安装，但是不适用于此软件包。请检查源的公钥 URL 是否配置正确<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>解决方法</p><ul><li><code>[root@iZwz9c743j35koyx2hety8Z mysql]# rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</code></li><li>再继续执行mysql-server安装    </li><li><code>yum -y install mysql-community-server</code><h4 id="搭建WordPress的准备工作"><a href="#搭建WordPress的准备工作" class="headerlink" title="搭建WordPress的准备工作"></a>搭建WordPress的准备工作</h4></li></ul></li><li><p><code>由于mysql5.7密码强度太高</code></p><ul><li>修改mysql密码</li><li><code>mysql&gt; show variables like "%password%";    </code><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">+----------------------------------------+-----------------+| Variable_name                          | Value           |+----------------------------------------+-----------------+| default_password_lifetime              | 0               || disconnect_on_expired_password         | ON              || log_builtin_as_identified_by_password  | OFF             || mysql_native_password_proxy_users      | OFF             || old_passwords                          | 0               || report_password                        |                 || sha256_password_auto_generate_rsa_keys | ON              || sha256_password_private_key_path       | private_key.pem || sha256_password_proxy_users            | OFF             || sha256_password_public_key_path        | public_key.pem  || validate_password_check_user_name      | OFF             || validate_password_dictionary_file      |                 || validate_password_length               | 8               || validate_password_mixed_case_count     | 1               || validate_password_number_count         | 1               || validate_password_policy               | MEDIUM          || validate_password_special_char_count   | 1               |+----------------------------------------+-----------------+17 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>mysql创建新用户方便记忆</p><ul><li>创建数据库 名称为<code>wordpress</code></li><li><code>create database wordpress;</code></li><li>创建一个用户管理数据库<code>wordpress</code></li><li><code>mysql&gt; create user 'reader'@'localhost' identified by 'PASSword123.';</code></li><li>赋予user操作wordpress权限</li><li><code>mysql grant all privileges on wordpress.* to 'user'@'localhost' identified by 'PASSword123.';</code></li><li>刷新<ul><li><code>flush privileges;</code></li></ul></li><li><code>exit;</code></li></ul></li><li><p>至此LAMP环境搭建完成</p><h3 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装<code>wordpress</code></h3></li><li><p>根据提示一步步安装</p><ul><li>wordpress 自注册</li><li>用户名<pre class="line-numbers language-none"><code class="language-none">rudy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>密码</p><pre class="line-numbers language-none"><code class="language-none">lPa^PEfXqY1L92C3aR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>域名替换<code>公网IP</code>优化访问安全</p><h5 id="除了搭建LNMP-LAMP环境外-还可以搭建FTP服务器-Gitlab服务等"><a href="#除了搭建LNMP-LAMP环境外-还可以搭建FTP服务器-Gitlab服务等" class="headerlink" title="除了搭建LNMP/LAMP环境外 还可以搭建FTP服务器,Gitlab服务等"></a>除了搭建LNMP/LAMP环境外 还可以搭建FTP服务器,Gitlab服务等</h5><h3 id="搭建Gitlab示例"><a href="#搭建Gitlab示例" class="headerlink" title="搭建Gitlab示例"></a>搭建<code>Gitlab</code>示例</h3></li><li><p>前提条件</p><ul><li> <code>Linux 实例已配置安全组规则：放通80端口 拥有一台服务器 内存至少4G</code> </li><li><code>安装mysql后再安装postfix，系统会针对已安装mysql-server服务安装对应的postfix</code></li></ul></li><li><p>安装<code>GitLab</code></p><ul><li>执行以下命令，安装依赖包</li><li>yum install -y curl policycoreutils-python openssh-server</li><li>依次执行以下命令，设置 SSH 开机自启动并启动 SSH 服务<ul><li><code>systemctl enable sshd</code></li><li><code>systemctl start sshd</code></li></ul></li><li>执行以下命令，安装 <code>Postfix</code><ul><li><code>yum install -y postfix</code></li></ul></li><li>执行以下命令，设置 <code>Postfix</code> 服务开机自启动<ul><li><code>systemctl enable postfix</code></li></ul></li><li>执行以下命令，打开 <code>Postfix</code> 的配置文件 <code>main.cf</code> <ul><li><code>vim /etc/postfix/main.cf</code> </li></ul></li></ul></li><li><p>gitlab命令安装</p><ul><li><code>curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</code></li><li><code>sudo EXTERNAL_URL="120.79.150.12" yum install -y gitlab-ce</code></li><li>修改配置启动端口<ul><li><code>vim /etc/gitlab/gitlab.rb</code></li></ul></li><li>修改/添加行如下<ul><li> <code>external_url 'http://192.168.1.9' </code></li><li><code>nginx['listen_port'] = 8000</code><blockquote><ul><li> unicorn不在适用gitlab高版本 建议使用上面一行配置</li></ul></blockquote></li><li><code>unicorn['port']=9000</code></li></ul></li><li>执行重启命令<ul><li><code>gitlab-ctl reconfigure</code></li><li><code>gitlab-ctl restart</code></li></ul></li><li>创建项目</li><li>克隆项目 <h4 id="gitlab卸载"><a href="#gitlab卸载" class="headerlink" title="gitlab卸载"></a><code>gitlab</code>卸载</h4></li></ul></li><li><p><code>Linux</code>基于CentOS7卸载<code>Gitlab</code></p><ul><li>停止<code>gitlab</code>进程 <ul><li><code>gitlab-ctl stop</code></li></ul></li><li>卸载<code>gitlab</code><ul><li><code>rpm -e gitlab-ce</code>    </li></ul></li><li>查看<code>gitlab</code>进程<ul><li><code>ps aux | grep gitlab</code></li></ul></li><li>杀掉第一个进程<ul><li><code>kill -9 18777</code>  </li><li><code>（18777 是第一个进程的pid号，根据显示情况输入）</code></li></ul></li><li>杀掉后，使用<code>ps aux | grep gitlab</code>确认一遍，还有没有<code>gitlab</code>的进程</li><li>如果还有进程请用以下命令杀死所有进程<ul><li><code>ps -ef | grep gitlab | xargs kill -s 9 </code></li></ul></li><li>删除所有包含gitlab文件<ul><li><code>find / -name gitlab | xargs rm -rf</code><h4 id="gitlib安装可能出现的报错信息"><a href="#gitlib安装可能出现的报错信息" class="headerlink" title="gitlib安装可能出现的报错信息"></a><code>gitlib</code>安装可能出现的报错信息</h4></li></ul></li></ul></li><li><p> <code>MySQL</code>安装报错</p><pre class="line-numbers language-none"><code class="language-none">- warning: /var/cache/yum/x86_64/7/mysql57-community/packages/mysql-community-common-5.7.37-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Signature, key ID 3a79bd29: NOKEY- Public key for mysql-community-common-5.7.37-1.el7.x86_64.rpm is not installed- (1/4): mysql-community-common-5.7.37-1.el7.x86_64.rpm                                                                                                                 | 311 kB  00:00:00     - (2/4): mysql-community-libs-5.7.37-1.el7.x86_64.rpm                                                                                                                   | 2.4 MB  00:00:00     - (3/4): mysql-community-client-5.7.37-1.el7.x86_64.rpm                                                                                                                 |  25 MB  00:00:01     - (4/4): mysql-community-server-5.7.37-1.el7.x86_64.rpm                                                                                                                 | 174 MB  00:00:06     - ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- Total                                                                                                                                                         27 MB/s | 202 MB  00:00:07     - Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql- Importing GPG key 0x5072E1F5:-  Userid     : "MySQL Release Engineering &lt;mysql-build@oss.oracle.com&gt;"-  Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5-  Package    : mysql57-community-release-el7-9.noarch (installed)-  From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql- - - Public key for mysql-community-server-5.7.37-1.el7.x86_64.rpm is not installed- <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>报错分析</p><pre class="line-numbers language-none"><code class="language-none">-  Failing package is: mysql-community-server-5.7.37-1.el7.x86_64-  GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>报错原因：需安装<code>GPG</code>密钥</p><ul><li>执行如下命令     </li><li><code>rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</code></li><li>再继续执行安装<code>mysql-server</code></li></ul></li></ul><h3 id="gitlab-修改访问端口"><a href="#gitlab-修改访问端口" class="headerlink" title="gitlab 修改访问端口"></a><code>gitlab</code> 修改访问端口</h3><blockquote><ul><li><code>gitlab</code>安装完成默认访问的是<code>80</code>端口,这个其实是<code>gitlab</code>自带<code>nigix</code>的端口</li><li>修改<code>80</code>端口为<code>8000</code>,修改方式为 <ul><li> <code>vim /etc/gitlab/gitlab.rb</code></li><li> <code>nginx['listen_port'] = 8000</code></li></ul></li></ul></blockquote><h4 id="重启配置"><a href="#重启配置" class="headerlink" title="重启配置"></a>重启配置</h4><blockquote><ul><li><code>gitlab-ctl reconfigure</code><blockquote><ul><li>修改监听端口<pre><code> - `vim /var/opt/gitlab/nginx/conf/gitlab-http.conf ` -  ```listen *:8000;```</code></pre></li><li>然后重启<code>gitlab</code>服务<pre><code> - `gitlab-ctl restart`</code></pre></li></ul></blockquote></li></ul></blockquote><blockquote><ul><li>注意:如果修改完<code>gitlab-http.conf</code>再运行<code>gitlab-ctl reconfigure</code>，就会被还原,修改并不会被覆盖</li><li>查看端口占用情况<ul><li><code>netstat -tunlp mkdir /var/ftp/upload</code></li><li>如下显示,则<code>nigix 8000</code>端口启动成功<ul><li> <code>tcp        0      0 0.0.0.0:8000            0.0.0.0:*               LISTEN      78769/nginx: master</code></li></ul></li></ul></li><li><code>gitlab-ctl tail</code> 命令可以查看启动报错问题</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务器篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven入门和使用</title>
      <link href="/2022/04/24/Maven%E5%85%A5%E9%97%A8%E5%92%8C%E4%BD%BF%E7%94%A8-maven-basic/"/>
      <url>/2022/04/24/Maven%E5%85%A5%E9%97%A8%E5%92%8C%E4%BD%BF%E7%94%A8-maven-basic/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven入门和使用"><a href="#Maven入门和使用" class="headerlink" title="Maven入门和使用"></a>Maven入门和使用</h1><h4 id="maven介绍"><a href="#maven介绍" class="headerlink" title="maven介绍"></a>maven介绍</h4><ul><li><p>Maven本质上是一个项目管理和理解工具，因此提供了一种帮助管理的方法</p><ul><li>Builds</li><li>Documentation</li><li>Reporting</li><li>Dependencies</li><li>SCMs</li><li>Releases</li><li>Distribution<h4 id="maven的功能"><a href="#maven的功能" class="headerlink" title="maven的功能"></a>maven的功能</h4></li></ul></li><li><p>simple project setup that follows best practices</p><pre class="line-numbers language-none"><code class="language-none">Maven tries to avoid as much configuration as possible, by supplying project templates (named&nbsp;archetypes)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>dependency management</p><pre class="line-numbers language-none"><code class="language-none">it includes automatic updating, downloading and validating the compatibility, as well as reporting the dependency closures (known also as transitive dependencies)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>isolation between project dependencies and plugins</p><pre class="line-numbers language-none"><code class="language-none">with Maven, project dependencies are retrieved from the&nbsp;dependency repositories&nbsp;while any plugin's dependencies are retrieved from the&nbsp;plugin repositories,&nbsp;resulting in fewer conflicts when plugins start to download additional dependencies<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>central repository system&nbsp;</p><pre class="line-numbers language-none"><code class="language-none">project dependencies can be loaded from the local file system or public repositories, such as&nbsp;Maven Central<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="maven属性"><a href="#maven属性" class="headerlink" title="maven属性"></a>maven属性</h4></li><li><p>遵循最佳实践的简单项目设置 - 在几秒钟内启动新项目或模块</p></li><li><p>所有项目的一致使用 - 意味着新开发人员进入项目没有加速时间</p></li><li><p>高级依赖管理，包括自动更新、依赖关闭（也称为传递依赖）</p></li><li><p>能够轻松地同时处理多个项目</p></li><li><p>一个庞大且不断增长的库和元数据存储库，开箱即用，并与最大的开源项目安排到位，以实时提供最新版本</p></li><li><p>可扩展，能够轻松地用Java 或脚本语言编写插件</p></li><li><p>只需很少或无需额外配置即可即时访问新功能</p></li><li><p>在 Maven 之外进行依赖管理和部署的 Ant 任务</p></li><li><p>基于模型的构建：Maven 能够将任意数量的项目构建为预定义的输出类型，例如 JAR、WAR 或基于项目元数据的分发，而在大多数情况下无需编写任何脚本。</p></li><li><p>项目信息的一致站点：使用与构建过程相同的元数据，Maven 能够生成一个网站或 PDF，包括您想要添加的任何文档，并添加到有关项目开发状态的标准报告中。此信息的示例可以在本网站左侧导航底部的“项目信息”和“项目报告”子菜单下查看。</p></li><li><p>发布管理和分发发布：无需太多额外配置，Maven 将与您的源代码控制系统（如 Subversion 或 Git）集成，并根据某个标签管理项目的发布。它还可以将其发布到分发位置以供其他项目使用。Maven 能够发布单独的输出，例如 JAR、包含其他依赖项和文档的存档，或作为源分发。</p></li><li><p>依赖管理：Maven 鼓励使用 JAR 和其他依赖的中央存储库。Maven 带有一种机制，项目的客户可以使用该机制从中央 JAR 存储库下载构建项目所需的任何 JAR，这与 Perl 的 CPAN 非常相似。这允许 Maven 的用户跨项目重用 JAR，并鼓励项目之间的通信以确保处理向后兼容性问题。</p><h4 id="POM-Project-Object-Model"><a href="#POM-Project-Object-Model" class="headerlink" title="POM(Project Object Model)"></a>POM(Project Object Model)</h4></li><li><p>描述Project信息</p></li><li><p>管理依赖</p></li><li><p>为构建的应用配置插件</p></li><li><p>典型的pom.xml</p><pre class="line-numbers language-XML" data-language="XML"><code class="language-XML">&lt;project&gt;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;    &lt;groupId&gt;com.baeldung&lt;/groupId&gt;    &lt;artifactId&gt;baeldung&lt;/artifactId&gt;    &lt;packaging&gt;jar&lt;/packaging&gt;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;    &lt;name&gt;com.baeldung&lt;/name&gt;    &lt;url&gt;http://maven.apache.org&lt;/url&gt;    &lt;dependencies&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;            &lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;            &lt;version&gt;5.8.2&lt;/version&gt;            &lt;scope&gt;test&lt;/scope&gt;        &lt;/dependency&gt;    &lt;/dependencies&gt;    &lt;build&gt;        &lt;plugins&gt;            &lt;plugin&gt;            //...            &lt;/plugin&gt;        &lt;/plugins&gt;    &lt;/build&gt;&lt;/project&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><a href="https://maven.apache.org/ref/3.6.3/maven-model-builder/super-pom.html">Super POM</a></p></li><li><p>Project Inheritance</p><ul><li>Elements in the POM that are merged are the following:</li><li>dependencies</li><li>developers and contributors</li><li>plugin lists (including reports)</li><li>plugin executions with matching ids</li><li>plugin configuration</li><li>resources</li><li>Example</li></ul></li><li><p>module artifact</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>dirtory structure</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">. |-- my-module |   `-- pom.xml `-- pom.xml Note: my-module/pom.xml is the POM of com.mycompany.app:my-module:1 while pom.xml is the POM of com.mycompany.app:my-app:1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Solution</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    // if parent.pom.xml and module.pom are the same directory use relativePath    //<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">&gt;</span></span>../parent/pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Project Aggregation</p><ul><li>Change the parent POMs packaging to the value “pom”.</li><li>Specify in the parent POM the directories of its modules (children POMs).</li><li>Example</li></ul></li><li><p>com.mycompany.app:my-module:1’s POM</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>com.mycompany.app:my-app:1’s POM</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>directory structure1</p><pre class="line-numbers language-none"><code class="language-none">. |-- my-module |   `-- pom.xml `-- pom.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Solution1</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>my-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>directory structure2</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">. |-- my-module |   `-- pom.xml `-- parent     `-- pom.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Solution2</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">com.mycompany.app:my-app:1's POM<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>../my-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>com.mycompany.app:my-module:1's POM<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">&gt;</span></span>../parent/pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>pom.xml的构造组成</p><ul><li>项目标识符<ul><li>groupId&nbsp;– a unique base name of the company or group that created the project</li><li>artifactId&nbsp;– a unique name of the project</li><li>version&nbsp;– a version of the project</li><li>packaging&nbsp;– a packaging method (e.g.&nbsp;WAR/JAR/ZIP)</li></ul></li><li>依赖<ul><li>通过坐标groupId,artifactId,version引入外部的库</li></ul></li><li>仓库<ul><li>作用</li><li>Maven中的仓库用于保存各种类型的构建Artifacts和依赖项</li><li>示例<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><p>默认本地仓库目录</p><ul><li><code>user</code>目录下的 <code>.m2/repository</code></li></ul></li><li><p><code>Maven</code>的中央仓库</p><ul><li><a href="https://search.maven.org/classic/#search|ga|1|centra">Maven Central</a></li></ul></li><li><p>example</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>JBoss repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://repository.jboss.org/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Properties</p><ul><li>maven中properties都是值占位符并且可以在pom.xml中的任何地方通过使用<code>${name} </code>来使用<code>name</code>属性</li><li><code>properties</code>也可用于定义变量<code>build path</code></li><li>示例<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.version</span><span class="token punctuation">&gt;</span></span>5.3.16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.folder</span><span class="token punctuation">&gt;</span></span>${project.build.directory}/tmp/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.folder</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>    //...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>outputDirectory</span><span class="token punctuation">&gt;</span></span>${project.resources.build.folder}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>outputDirectory</span><span class="token punctuation">&gt;</span></span>    //...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>Build</p><ul><li>maven goal</li><li>项目编译存放的目录<br><code>${basedir}/target</code></li><li>最终应用名称<br><code>${artifactId}-${version}</code></li><li>example<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defaultGoal</span><span class="token punctuation">&gt;</span></span>install<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defaultGoal</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>${basedir}/target<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>${artifactId}-${version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filters</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span>filters/filter1.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filters</span><span class="token punctuation">&gt;</span></span>    //...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>Profiles</p><ul><li>配置文件是一组配置值</li><li>自定义构建不同的环境<ul><li>Production</li><li>Test</li><li>Development</li></ul></li><li>示例<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>production<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                //...                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>development<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                //...                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>使用profiles</p><pre class="line-numbers language-none"><code class="language-none">mvn clean install -Pproduction<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Maven Build Lifecycles</p><ul><li>&nbsp;Lifecycle Phases</li><li>重要Phases<ul><li>validate&nbsp;– checks the correctness of the project</li><li>compile&nbsp;– compiles the provided source code into binary artifacts</li><li>test&nbsp;– executes unit tests</li><li>package&nbsp;– packages compiled code into an archive file</li><li>integration-test&nbsp;– executes additional tests, which require the packaging</li><li>verify&nbsp;– checks if the package is valid</li><li>install&nbsp;– installs the package file into the local Maven repository</li><li>deploy&nbsp;– deploys the package file to a remote server or repository</li></ul></li></ul></li><li><p>Plugins and Goals</p><h4 id="maven的使用"><a href="#maven的使用" class="headerlink" title="maven的使用"></a>maven的使用</h4></li><li><p>First Maven Project</p><ul><li>Generating a Simple Java Project<pre class="line-numbers language-none"><code class="language-none">mvn -B archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mycompany.app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>my-app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>my-app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- FIXME change it to the project's website --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://www.example.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginManagement</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-clean-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-resources-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.22.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-jar-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-install-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-deploy-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-site-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.7.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-project-info-reports-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginManagement</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Compiling and Packaging a Project</p><pre class="line-numbers language-none"><code class="language-none">mvn compilemvn package<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>Executing an Application</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sourceDirectory</span><span class="token punctuation">&gt;</span></span>src<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sourceDirectory</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.6.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.codehaus.mojo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>exec-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>com.mycompany.app.APP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>execute application</p><pre class="line-numbers language-none"><code class="language-none">mvn exec:java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="maven文档"><a href="#maven文档" class="headerlink" title="maven文档"></a>maven文档</h4><p><a href="https://maven.apache.org/download.cgi">maven下载地址</a><br><a href="https://maven.apache.org/users/index.html">官方文档地址</a><br><a href="https://maven.apache.org/guides/introduction/introduction-to-the-pom.html">what is a POM?</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Maven入门篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
            <tag> Apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 卸载的那些事</title>
      <link href="/2022/04/24/linux/Linux%20%E5%8D%B8%E8%BD%BD%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B-linux-uninstall/"/>
      <url>/2022/04/24/linux/Linux%20%E5%8D%B8%E8%BD%BD%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B-linux-uninstall/</url>
      
        <content type="html"><![CDATA[<h2 id="linux-卸载系列"><a href="#linux-卸载系列" class="headerlink" title="linux 卸载系列"></a>linux 卸载系列</h2><h4 id="mysql卸载"><a href="#mysql卸载" class="headerlink" title="mysql卸载"></a>mysql卸载</h4><ul><li><p>查看是否有安装mysql</p></li><li><p>[root@192 lib]# rpm -qa|grep -i mysql</p><blockquote><p>mysql57-community-release-el7-9.noarch<br>mysql-community-libs-5.7.37-1.el7.x86_64<br>mysql-community-common-5.7.37-1.el7.x86_64<br>mysql-community-server-5.7.37-1.el7.x86_64<br>mysql-community-client-5.7.37-1.el7.x86_64</p></blockquote></li><li><p>停止mysql服务</p><ul><li><code>[root@192 lib]# systemctl stop mysqld</code></li></ul></li><li><p>开始删除mysql</p><ul><li>删除列表中的第一个就可以了<pre class="line-numbers language-none"><code class="language-none">[root@192 lib]# rpm -ev mysql57-community-release-el7-9.noarch --nodeps# 如果不放心全部删除 注意依赖关系 先删除server--&gt;client--&gt;libs--&gt;common[root@192 lib]# rpm -ev mysql-community-client-5.7.37-1.el7.x86_64error: Failed dependencies:mysql-community-client(x86-64) &gt;= 5.7.9 is needed by (installed) mysql-community-server-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-server-5.7.37-1.el7.x86_64Preparing packages...mysql-community-server-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-client-5.7.37-1.el7.x86_64Preparing packages...mysql-community-client-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-common-5.7.37-1.el7.x86_64error: Failed dependencies:mysql-community-common(x86-64) &gt;= 5.7.9 is needed by (installed) mysql-community-libs-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-libs-5.7.37-1.el7.x86_64Preparing packages...mysql-community-libs-5.7.37-1.el7.x86_64[root@192 lib]# rpm -ev mysql-community-common-5.7.37-1.el7.x86_64Preparing packages...mysql-community-common-5.7.37-1.el7.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>再执行一边过滤查询确定删除干净</p><ul><li>[root@192 lib]# rpm -qa|grep -i mysql</li></ul></li><li><p>删除之前旧版本mysql安装目录</p><ul><li>先查看mysql目录</li><li>再依次删除<pre class="line-numbers language-none"><code class="language-none">find / -name mysql[root@192 lib]# rm -rf /var/lib/mysql[root@192 lib]# rm -rf /var/lib/mysql/mysql[root@192 lib]# rm -rf /usr/lib64/mysql[root@192 lib]# rm -rf /usr/share/mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>卸载后/etc/my.cnf不会删除，需要进行手工删除</p><ul><li>[root@192 lib]# rm -rf /etc/my.cnf</li></ul></li><li><p>再次检查是否删除干净</p></li><li><p>[root@192 lib]# rpm -qa|grep -i mysql</p></li><li><p>mysql安装推荐阿里云官方文档 安装示例</p><ul><li>nginx卸载<ul><li>待更新…</li></ul></li><li>docker 卸载<ul><li>待更新…<br>redis卸载    </li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM监控利器之Jprofiler</title>
      <link href="/2022/04/24/JVM%E7%9B%91%E6%8E%A7%E5%88%A9%E5%99%A8%E4%B9%8BJprofiler-jvm-jprofiler/"/>
      <url>/2022/04/24/JVM%E7%9B%91%E6%8E%A7%E5%88%A9%E5%99%A8%E4%B9%8BJprofiler-jvm-jprofiler/</url>
      
        <content type="html"><![CDATA[<h1 id="Jprofiler概念"><a href="#Jprofiler概念" class="headerlink" title="Jprofiler概念"></a>Jprofiler概念</h1><p>见图（官方介绍表达最详细）<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler1.png" alt=" image "></p><ul><li>Jprofiler下载<ul><li><a href="!%5Bimage-1650804658638%5D(/upload/2022/04/image-1650804658638.png)">官方下载链接</a><ul><li>linux下载XXx.tar.gz<ul><li>gunzip&nbsp;filename</li><li>tar xf&nbsp;filename</li></ul></li></ul></li></ul></li><li>windows直接下载默认版本</li><li>Jprofiler安装<ul><li>linux</li><li>下载的是Xxx.tar.gz直接解压命令<br><code>tar xzvf filename.tar.gz</code></li><li>解压到到文件目录 /opt/Jprofiler</li><li>下载的是 .sh文件,使用如下图命令<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler2.png" alt=" image "></li></ul></li><li>window（一步步傻瓜式操作安装）<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler3.png" alt=" image "></li><li>Jprofiler使用<ul><li>本机环境<ul><li>windows <pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">版本Windows <span class="token number">11</span> 家庭中文版版本<span class="token number">21</span>H2安装日期‎<span class="token number">2021</span><span class="token operator">/</span>‎<span class="token number">11</span><span class="token operator">/</span>‎<span class="token number">3</span>操作系统版本<span class="token number">22000.556</span>体验Windows 功能体验包 <span class="token number">1000.22000</span><span class="token number">.556</span><span class="token number">.0</span> 处理器Intel<span class="token punctuation">(</span><span class="token constant">R</span><span class="token punctuation">)</span> Core<span class="token punctuation">(</span><span class="token constant">TM</span><span class="token punctuation">)</span> i7<span class="token operator">-</span><span class="token number">8550</span>U <span class="token constant">CPU</span> @ <span class="token number">1.80</span>GHz   <span class="token number">2.00</span> GHz机带 <span class="token constant">RAM</span><span class="token number">8.00</span> <span class="token constant">GB</span> <span class="token punctuation">(</span><span class="token number">7.89</span> <span class="token constant">GB</span> 可用<span class="token punctuation">)</span>设备 <span class="token constant">ID</span><span class="token constant">B03DBFA5</span><span class="token operator">-</span><span class="token constant">EADF</span><span class="token operator">-</span><span class="token number">4</span>DB1<span class="token operator">-</span><span class="token number">8</span>F22<span class="token operator">-</span><span class="token constant">BA27B798547B</span>产品 <span class="token constant">ID</span><span class="token number">00342</span><span class="token operator">-</span><span class="token number">34867</span><span class="token operator">-</span><span class="token number">48758</span><span class="token operator">-</span><span class="token constant">AAOEM</span>系统类型<span class="token number">64</span> 位操作系统<span class="token punctuation">,</span> 基于 x64 的处理器笔和触控没有可用于此显示器的笔或触控输入<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li><li>ubuntu<ul><li>说明<pre class="line-numbers language-none"><code class="language-none">Linux version 5.13.0-30-generic (buildd@lcy02-amd64-003) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; linux内核版本号gcc  9.3.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                               gcc编译器版本号Ubuntu 5.4.0-6ubuntu1 &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       Ubuntu版本号Linux rudy 5.13.0-30-generic #33~20.04.1-Ubuntu SMP Mon Feb 7 14:25:10 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux 显示linux的内核版本和系统是多少位的：X86_64代表系统是64位的Distributor ID:Ubuntu &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//类别是ubuntuDescription:Ubuntu 20.04.4 LTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     //20年4月发布的版本，LTS是Long Term Support：长时间支持版本，支持周期长达三至五年Release:20.04 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; //发行日期或者是发行版本号Codename:focal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ubuntu的代号名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li>rudy@rudy:~/jprofiler13/bin$ cat /proc/version</li><li>Linux version 5.13.0-30-generic (buildd@lcy02-amd64-003) (gcc (Ubuntu 9.3.0-17ubuntu1<del>20.04) 9.3.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #33</del>20.04.1-Ubuntu SMP Mon Feb 7 14:25:10 UTC 2022</li><li>rudy@rudy:~/jprofiler13/bin$ lsb_release -a<pre class="line-numbers language-none"><code class="language-none">Distributor ID:UbuntuDescription:Ubuntu 20.04.4 LTSRelease:20.04Codename:focalrudy@rudy:~/jprofiler13/bin$ uname -a    Linux rudy 5.13.0-30-generic #33~20.04.1-Ubuntu SMP Mon Feb 7 14:25:10 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>注意事项<ul><li>windows如果想监控远程linux中的jvm进程,需要linux安装Jprofiler,并且暴露jvm端口才可以在windows中使用远程连接</li><li>如果是windows监控本地jvm进程,使用默认监控端口(结合jvm中的jps命令使用)即可</li><li>远程访问需要注意防火墙是否关闭</li><li>本文档测试 使用的虚拟机ubuntu,并在ubuntu环境中使用了vscode(非必须安装)、maven、openJDK8、VIM</li></ul></li><li>window下使用jprofiler13</li></ul><hr><ul><li><p>此处演示tomcat jvm监控<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler4.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler5.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler6.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler7.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler8.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler9.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler10.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler11.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler12.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler13.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler14.png" alt=" image "><br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler15.png" alt=" image "></p></li><li><p>效果展示</p><ul><li>遥测展示<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler16.png" alt=" image "></li></ul></li><li><p>线程展示<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler17.png" alt=" image "></p></li><li><p>linux下使用(结合window Jprofiler GUI工具使用)</p></li></ul><hr><ul><li>在linux中启动一个jvm进程(例如 springboot demo)<br><code>rudy@rudy:~/tmp/demos/demo$ ./mvnw spring-boot:run</code></li><li>启动jpenable<br><code>rudy@rudy:~/jprofiler13/bin$ ./jpenable</code></li><li>获取JVM进程端口<pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">Select a <span class="token constant">JVM</span><span class="token operator">:</span><span class="token operator">/</span>home<span class="token regex-literal"><span class="token regex">/rudy/</span></span><span class="token punctuation">.</span>vscode<span class="token operator">/</span>extensions<span class="token operator">/</span>redh<span class="token operator">...</span>dd4d90c<span class="token operator">/</span>redhat<span class="token punctuation">.</span>java<span class="token operator">/</span>jdt_ws <span class="token punctuation">[</span><span class="token number">5003</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>DemoApplication <span class="token punctuation">[</span><span class="token number">12762</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token number">2</span>Please select the profiling mode<span class="token operator">:</span><span class="token constant">GUI</span> mode <span class="token punctuation">(</span>attach with JProfiler <span class="token constant">GUI</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> Enter<span class="token punctuation">]</span>Offline mode <span class="token punctuation">(</span>use config file to set profiling settings<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token number">1</span>Please enter a profiling port<span class="token punctuation">[</span><span class="token number">33687</span><span class="token punctuation">]</span>You can now use the JProfiler <span class="token constant">GUI</span> to connect on port <span class="token number">33687</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>IDE可查看Jprofiler的信息<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler18.png" alt=" image "></li><li>window GUI 远程访问<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler19.png" alt=" image "></li><li>linux有关环境配置(本机使用是linux为虚拟机,仅作为参考)<ul><li>rudy@rudy:~/jprofiler13/bin$ cat /etc/enviroment<blockquote><p>JAVA_HOME=”/usr/lib/jvm/java-8-openjdk-amd64”<br>export MAVEN_HOME=/opt/maven/apache-maven-3.6.3<br>export M2=$MAVEN_HOME/bin<br>export PATH=$M2:$PATH</p></blockquote></li></ul></li><li>报错<ul><li><pre><code>版本问题</code></pre></li><li><pre><code>客户端和服务端使用同一个版本,本文中使用的Jprofiler13</code></pre><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/jprofiler13/jprofiler20.png" alt=" image "><br>参考链接<br><a href="https://www.linuxidc.com/Linux/2020-04/162862.htm">ubuntu maven 安装和配置</a><br><a href="https://www.cnblogs.com/chinda/p/14297338.html">MAVEN环境变量配置</a><br><a href="https://www.ej-technologies.com/download/jprofiler/files">Jprofiler官网下载地址</a><br><a href="https://www.ej-technologies.com/products/jprofiler/docs">Jprofiler官方文档</a><br><a href="https://blog.csdn.net/willingtolove/article/details/109863064">Ubuntu中防火墙的使用和开放、关闭端口</a><br><a href="https://spring.io/quickstart">SpringBoot quickstart build demo</a><br><a href="https://www.cnblogs.com/pxblog/p/11617609.html">Maven配置使用阿里云镜像</a><br><a href="https://blog.csdn.net/willingtolove/article/details/109863064">Ubuntu中防火墙的使用和开放、关闭端口</a><br><a href="https://code.visualstudio.com/">vscode官网下载</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> JVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> Jprofiler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub解决Pull和Push速度慢的问题</title>
      <link href="/2022/04/23/GitHub%E8%A7%A3%E5%86%B3Pull%E5%92%8CPush%E9%80%9F%E5%BA%A6%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98-gitbub-clone/"/>
      <url>/2022/04/23/GitHub%E8%A7%A3%E5%86%B3Pull%E5%92%8CPush%E9%80%9F%E5%BA%A6%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98-gitbub-clone/</url>
      
        <content type="html"><![CDATA[<h3 id="GitHub解决Pull和Push速度慢的问题"><a href="#GitHub解决Pull和Push速度慢的问题" class="headerlink" title="GitHub解决Pull和Push速度慢的问题"></a>GitHub解决Pull和Push速度慢的问题</h3><h3 id="亲自测得出的效果，git-clone-能达到-M-s-的速度"><a href="#亲自测得出的效果，git-clone-能达到-M-s-的速度" class="headerlink" title="亲自测得出的效果，git clone 能达到 M/s 的速度"></a>亲自测得出的效果，git clone 能达到 M/s 的速度</h3><ul><li>打开<a href="http://tool.chinaz.com/dns">DNS 网站查询ip</a>网站查询域名映射IP，例如<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">52.217</span><span class="token number">.37</span><span class="token number">.68</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token operator">-</span>windows<span class="token punctuation">.</span>s3<span class="token punctuation">.</span>amazonaws<span class="token punctuation">.</span>com<span class="token number">157.240</span><span class="token number">.11</span><span class="token number">.40</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>global<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net<span class="token number">185.199</span><span class="token number">.110</span><span class="token number">.153</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>assets<span class="token operator">-</span>cdn<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token number">20.205</span><span class="token number">.243</span><span class="token number">.166</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>修改host文件<blockquote><ul><li><code>C:\Windows\System32\drivers\etc</code>，打开host文件在最文件底部输入上述映射关系，<ul><li>保存 <code>win + r</code>快捷键打开cmd命令行输入cmd<br>输入<code>ipconfig/flushdns</code>刷新DNS</li></ul></li></ul></blockquote><h3 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h3></li><li>github加速通道插件下载</li><li>插件如图所示<br><img src="https://rudy-1259746058.cos.ap-shanghai.myqcloud.com/file/2022/image/article/git/github%E5%8A%A0%E9%80%9F%E9%80%9A%E9%81%93%E6%8F%92%E4%BB%B6.png" alt=" image "></li></ul>]]></content>
      
      
      <categories>
          
          <category> git 入门篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>why-programmers-love-mac comments</title>
      <link href="/2022/04/23/why-programmers-love-mac%20comments-why-programmers-love-maccomments/"/>
      <url>/2022/04/23/why-programmers-love-mac%20comments-why-programmers-love-maccomments/</url>
      
        <content type="html"><![CDATA[<h2 id="本文内容-精选自为什么国外程序员爱用-Mac？"><a href="#本文内容-精选自为什么国外程序员爱用-Mac？" class="headerlink" title="本文内容 精选自为什么国外程序员爱用 Mac？"></a>本文内容 精选自<a href="https://www.vpsee.com/2009/06/why-programmers-love-mac/#comment-409396">为什么国外程序员爱用 Mac？</a></h2><h3 id="一个长达15年的问题讨论"><a href="#一个长达15年的问题讨论" class="headerlink" title="一个长达15年的问题讨论"></a>一个长达15年的问题讨论</h3><h4 id="comment-list"><a href="#comment-list" class="headerlink" title="comment list"></a>comment list</h4><hr><blockquote><ul><li>为什么程序员喜欢某个架构的组合？不能理性一点分析一下吗？我想对一个中学生或者大学尚未毕业的同学从长远上说点看法：<br>我们看问题，排除干扰因素，才能抓住问题的实质，是吧？那么，答案是不是显然这样的——只有当环境是自由的，你才能用你喜欢的组合。是吧？<ul><li>为了工作，得看公司目标产品平台的要求决定用哪个软硬件组合。做某种平台指定的产品，或者别人都用某种专属平台及其专属的交换文件格式，你想交换文件，就得迁就，而公司的决策恐怕是市场份额说了算。</li><li>为了个人娱乐，看你想跑什么大游戏，然后决定用什么操作系统吧。</li><li>为了学习和工作的长期效益，我很赞同那位工程师说的：考虑可编程/积累/继承的平台。<br>说到底，是“专利法 + 商业竞争”导致了专属平台的割据，从而导致了平台之争。作为竞争的受益者和受害者，讨论平台之前，不能意识到这个无奈的局面，以及探讨根本的应对之策这样一个定位，讨论就是盲目的。<br>既然如此，问题很简单，无非是哪个平台覆盖了你最主要的需求集合，你就更趋向于长期使用哪个平台，或者哪几个平台。在目前这个法律框架下，恐怕，多会两个平台，甚至同时安装几个平台，都是无奈的选择。<br>对于没有被先入为主捆绑在某个平台上又不是程序员这样密切关注技术走向的人来说，用什么就是个习惯，不需要讨论，纯粹从不给自己找麻烦的角度来看，当然是随大流了！随大流也要被引导，被鄙视，真是可悲。<br>从一个长期的角度来说，如果很在乎自己使用计算机的一贯性，和累计性，甚至关心自己的劳动成果的可继承性，可迁移性，那么就是另外一个问题了，那么，我建议从最难的学起，而不是从最容易的学起，因此，MS Windows的傻瓜化，无疑是影响你深刻理解计算机的，Mac不过是为了抓住唯美、简洁风格的另一个群体而设计的，但是，它仍然是现有法律框架下的产品——具有专属知识产权割据风格的东西，那么答案很明显，真正的FreeBSD，Linux，才能满足你深入学习计算机的要求，你从这里进入这个领域学到的东西才不会过时（比如有人提到的vi，emacs），然后再去接触Mac和Win，就会感到无非就是一些小儿科的东西（不要喷，我没说GUI简单的意思，而说是后台不再神秘），你进入服务器领域（UNIX，Redhat等*NIX不用说了）也没什么难度。否则，你习惯了被某个平台专属的东西代理了你对基础的跟踪，有一天你会发现，你离不开它了，你的知识进步会落后时代一个周期或更多</li></ul></li></ul></blockquote><hr><blockquote><ul><li>用VIM两年的感受：<ul><li>用VIM的人不是装B，而是VIM的确可以提高编程效率。不使用一年以上的人很难体会到这种感觉。学J2EE出身，当初完全依赖Eclipse。参加工作后转向多语言（FLEX，PHP，JAVA，C++），工程依赖于CentOS平台，于是强迫自己用VIM，半年时间对各种常用命令操作如臂使指，头脑中可以形成清晰的类图关系。一年后开始安装各种插件以及自定义vimrc，随着优秀插件的加入，开发速度大幅度提升。前段时间因为使用新语言(Scala)回到eclipse，各种不适应，开发速度明显下降。</li><li>用习惯IDE的确很难使用VIM，但是用习惯VIM也很难再使用IDE。对于大家经常提到的VIM的弊端，我的体会是这样的：<ul><li>自动补全：我使用autocomplete插件，自动匹配buffer中的相似字符串，ctrl+n\p 选择，速度比eclipse快。弊端是没有智能的语法补全支持，只能把常用方法和属性都记忆在脑子里，不熟悉的时候查API文档，但是速度没有想象的那么慢，而且经常会有意外的发现。</li><li>错误提示：我最初使用Syntastic插件，但是对静态语言的检查速度太慢，后来干脆不用任何语法检查工具，只依靠编译器。现在很少会有编译错误。</li><li>编译运行：IDE提供方便的”one click”编译与打包过程，但是这个优势基本可以忽略，我一般是多开一个shell完成编译以及部署。写一个简单的bash脚本或者alias，”one command”也可以完成编译打包，还可以远程部署到测试服务器上直接查看运行结果，很方便。</li><li>重构：IDE的重构速度的确比VIM快，这一点是用VIM很难赶上的，也没有找到优秀的插件能做到IDE那么强大的重构。一般只能依靠查找替换来重构，靠编译器来排查重构错误，但是动态语言的重构非常不给力。</li><li>拿VIM单独和IDE相比是不公平的，VIM核心关注的就是编辑。但VIM不是一个人在作战，它依赖于SHELL，VIM+SHELL要远比IDE强大。</li></ul></li></ul><ul><li>附上我常用的插件：<ul><li>CtrlP：模糊查找插件，我主要用来打开文件，速度很快。</li><li>bufexplorer: buffer之间转换的利器。</li><li>nerdtree：类似文件树浏览器的插件，我一般只有在忘记文件名的时候才用。</li><li>autocompletion:自动补全插件。</li><li>easymotion:基于标签的快速移动插件，我一般用来移动到特定行。然后用f命令移动到具体位置。</li><li>snipMate:代码片段插件，很少用。</li><li>Align:格式化代码插件，对于喜欢代码排列整齐的人很有用。</li><li>bclose:关闭buffer而不退出split窗口。</li><li>pathogen:插件管理器。</li><li>solarized：配色方案，个人最爱。</li></ul></li></ul></li></ul></blockquote><hr><blockquote><pre><code> annunaki - March 27th, 2022 5:40 pm</code></pre><p>基于wiki介绍：Linux被打包成供个人计算机和服务器使用的Linux发行版，一些流行的主流Linux发布版，包括Debian（及其衍生版本Ubuntu、Linux Mint）、Fedora（及其相关版本Red Hat Enterprise Linux、CentOS）和openSUSE等.<br>我们争论的话题主要围绕着Linux的发行版,很少有人讨论Linux内核，感觉讨论的点没有找准定位，现在程序员越来越内卷，几乎很多人渐渐重视往核心原理，而不再只是使用调用API之类的，对于国内互联网发展是一件好事情。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程杂论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> mac </tag>
            
            <tag> windows </tag>
            
            <tag> android </tag>
            
            <tag> ios </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux wiki介绍</title>
      <link href="/2022/04/23/linux/Linux%20wiki%E4%BB%8B%E7%BB%8D-linux-introduce/"/>
      <url>/2022/04/23/linux/Linux%20wiki%E4%BB%8B%E7%BB%8D-linux-introduce/</url>
      
        <content type="html"><![CDATA[<h3 id="资源基于WiKipedia"><a href="#资源基于WiKipedia" class="headerlink" title="资源基于WiKipedia"></a>资源基于WiKipedia</h3><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><blockquote><p>Linux是一種自由和開放源碼的類UNIX作業系統。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布，在加上使用者空間的應用程式之後，成為Linux作業系統。Linux也是自由软件和开放源代码软件发展中最著名的例子。只要遵循GNU 通用公共许可证（GPL），任何个人和机构都可以自由地使用Linux的所有底层源代码，也可以自由地修改和再发布。大多數Linux系統還包括像提供GUI的X Window之類的程序。除了一部分專家之外，大多數人都是直接使用Linux 發行版，而不是自己選擇每一樣組件或自行設置。<br>Linux嚴格來說是單指作業系統的内核，因作業系統中包含了許多用戶圖形介面和其他实用工具。如今Linux常用来指基于Linux的完整操作系统，內核則改以Linux内核稱之。由于这些支持用户空间的系统工具和库主要由理查德·斯托曼于1983年发起的GNU计划提供，自由软件基金会提议将其组合系统命名为GNU/Linux，但Linux不屬於GNU計劃，這個名稱並沒有得到社群的一致認同。<br>Linux最初是作为支持英特尔x86架构的个人电脑的一个自由操作系统。目前Linux已经被移植到更多的计算机硬件平台，远远超出其他任何操作系统。Linux可以运行在服务器和其他大型平台之上，如大型计算机和超级计算机。世界上500个最快的超级计算机已100％运行Linux发行版或变种。Linux也广泛应用在嵌入式系统上，如手机（Mobile Phone）、平板电脑（Tablet）、路由器（Router）、电视（TV）和电子游戏机等。在移动设备上广泛使用的Android操作系统就是建立在Linux内核之上。<br>通常情况下，Linux被打包成供个人计算机和服务器使用的Linux发行版，一些流行的主流Linux发布版，包括Debian（及其衍生版本Ubuntu、Linux Mint）、Fedora（及其相关版本Red Hat Enterprise Linux、CentOS）和openSUSE等。Linux发行版包含Linux内核和支撑内核的实用程序和库，通常还带有大量可以满足各类需求的应用程序。个人计算机使用的Linux发行版通常包含X Window和一个相应的桌面环境，如GNOME或KDE。桌面Linux操作系统常用的应用程序，包括Firefox网页浏览器、LibreOffice办公软件、GIMP图像处理工具等。由于Linux是自由软件，任何人都可以创建一个符合自己需求的Linux发行版</p></blockquote><hr><h2 id="Linux-发行版"><a href="#Linux-发行版" class="headerlink" title="Linux 发行版"></a>Linux 发行版</h2><blockquote><p>Linux 发行版（英语：Linux distribution，也被叫做GNU/Linux 发行版），为一般用户预先集成好的Linux操作系统及各种应用软件。一般用户不需要重新编译，在直接安装之后，只需要小幅度更改设置就可以使用，通常以软件包管理系统来进行应用软件的管理。Linux发行版通常包含了包括桌面环境、办公包、媒体播放器、数据库等应用软件。这些操作系统通常由Linux内核、以及来自GNU计划的大量的函数库，和基于X Window或者Wayland的图形界面。有些发行版考虑到容量大小而没有预装 X Window，而使用更加轻量级的软件，如：BusyBox、musl或uClibc-ng。现在有超过300个Linux发行版（Linux发行版列表）。大部分都正处于活跃的开发中，不断地改进。<br>由于大多数软件包是自由软件和开源软件，所以Linux发行版的形式多种多样——从功能齐全的桌面系统以及服务器系统到小型系统（通常在嵌入式设备，或者启动软盘）。除了一些定制软件（如安装和配置工具），发行版通常只是将特定的应用软件安装在一堆函数库和内核上，以满足特定用户的需求。<br>这些发行版可以分为商业发行版，比如Ubuntu（Canonical公司）、Red Hat Enterprise Linux、SUSE Linux Enterpise；和社区发行版，它们由自由软件社区提供支持，如Debian、Fedora、Arch、openSUSE和Gentoo。</p></blockquote><hr><h2 id="软件包管理系统"><a href="#软件包管理系统" class="headerlink" title="软件包管理系统"></a>软件包管理系统</h2><blockquote><p>软件包管理系统是在电脑中自动安装、配制、卸载和升级软件包的工具组合，在各种系统软件和应用软件的安装管理中均有广泛应用。<br>在Linux发行版中，几乎每一个发行版都有自己的软件包管理系统。常见的有：<br>管理deb软件包的dpkg以及它的前端APT（使用于Debian、Ubuntu）。<br>RPM包管理员以及它的前端dnf（使用于Fedora、Red Hat Enterprise Linux&nbsp;8、CentOS&nbsp;8）、前端yum（使用于Red Hat Enterprise Linux、CentOS）、前端ZYpp（使用于openSUSE）、前端urpmi（使用于Mandriva Linux、Mageia）等。<br>使用软件包管理系统将大大简化在Linux发行版中安装软件的过程。</p></blockquote><hr><h2 id="Linux市场"><a href="#Linux市场" class="headerlink" title="Linux市场"></a>Linux市场</h2><blockquote><p>傳統的Linux使用者一般都是專業人士。他們願意安裝並設置自己的作業系統，往往比其他作業系統的用戶花更多的時間在安裝並設置自己的作業系統。這些用戶有時被稱作「駭客」或是「極客」。使用Linux主要的成本為移植、培訓和學習的費用，早期由於會使用Linux的人較少，並且在軟體設計時並未考慮非專業者的使用，導致這方面費用極高。但這方面的費用已經隨著Linux的日益普及和Linux上的軟體越來越多、越來越方便而降低，但專業仍是使用Linux的主要成本。<br>Linux在歐洲、美國和日本的流行程度較高，歐美地區還發行Linux平台的遊戲和其他家用軟體。Linux開源社群方面也是以歐洲、美國、日本等已開發國家的人士居多。在家庭與企業中使用Linux套件的情況越來越多.整個亞洲，比较缺乏對Linux的支援，硬體和應用程式皆只考量微軟作業系統設計的需求。例如：Internet Explorer及ActiveX需求、Microsoft Office相容性、網絡遊戲以及一般用戶都傾向於使用Windows。轉換作業系統的開銷在於，自由開源意識形態與商業用途的衝突、缺乏強而有力的推廣廠商、缺乏對特殊的硬件和應用程序的支援、電腦技術人員不願再花費時間重覆學習、對已有平台的依賴，是制約Linux被採納的主要因素。</p></blockquote><hr><h2 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h2><ul><li>正面</li></ul><blockquote><ul><li>開放原始碼的Linux可以讓知識延續下去，新興的軟體公司可以從開放原始碼上快速、低價的建立專業能力，豐富市場的競爭，防止獨霸軟體巨獸的存在。<br>個人使用很少有版權問題，絕大多數都是免費使用，幾乎無所謂盜版問題。<br>新的Linux發行版大多數軟體都有伺服器的服務，只要點選就可以自動下載、安裝經過認證的軟體，不需要到市面購買、安裝。<br>Linux學習的投資有效時間較長。舊版軟體、系統都還是存在，有原始碼可以衍生、分支，維護週期普遍比Windows長很多。就算被放棄，還是可以憑藉原始碼衍生。新的軟體更新發展多樣化，容易養成使用者習慣掌握原理，而不是養成操作習慣。<br>強大的Shell及脚本支援，容易組合出符合需求的環境或創造自動程序。<br>預設安全設定相對於目前主流的Windows作業系統安全很多。[48]Windows作業系統為了非專業使用者降低了預設安全性的設定，導致系統容易受到木馬、病毒的侵害。盜版的Windows更糟糕，可能隨盜版作業系統捆绑木馬、惡意程式，部分預設超級使用者（Administrator）登入、關閉安全更新等問題導致安全性更差。</li></ul></blockquote><ul><li>負面</li></ul><blockquote><ul><li>BSD的開發人員曾經批評過Linux核心開發人員過於重視新功能的添加而不是踏踏實實的把程式碼寫好、整理好。<br>Minix愛好者認為微核心是將來技術發展的方向，Linux在技術上是落伍陳舊的。（参见塔能鲍姆-林纳斯辩论）<br>軟硬體支援性較差。大部份的軟、硬體廠商沒有或者不會優先開發Linux平台的版本，或者Linux平台的版本功能較少，致使可用的應用程式、硬體周邊支援性相較於Windows、Mac平台差。<br>相當多的發行版（超過200個以上），使程式開發者無法針對所有發行版做測試，使用Linux平台的應用軟體安裝在非主流發行版可能遭遇預料之外的問題或甚至於無法使用。<br>Linux系統及相關應用軟體主要是由黑客等程式設計師及其它Linux愛好者共同合作開發出來的，所以缺少了商業軟體基於商業利益而調整操作界面使之更適合不同使用者的行为。对Linux使用方式的不習慣，以及不同軟體操作方式缺乏一致性使得使用者產生Linux系統難以使用的感受。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> CentOS </tag>
            
            <tag> RedHat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 入门篇命令之tar command</title>
      <link href="/2022/04/23/linux/Linux%20%E5%85%A5%E9%97%A8%E7%AF%87%E5%91%BD%E4%BB%A4%E4%B9%8Btar%20command-linux-tar-command/"/>
      <url>/2022/04/23/linux/Linux%20%E5%85%A5%E9%97%A8%E7%AF%87%E5%91%BD%E4%BB%A4%E4%B9%8Btar%20command-linux-tar-command/</url>
      
        <content type="html"><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h4 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h4><h4 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h4><ul><li>tar命令<ul><li>-c: 建立压缩档案</li><li>-x：解压</li><li>-t：查看内容</li><li>-r：向压缩归档文件末尾追加文件</li><li>-u：更新原压缩包中的文件</li><li>这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</li><li>-z：有gzip属性的</li><li>-j：有bz2属性的</li><li>-Z：有compress属性的</li><li>-v：显示所有过程</li><li>-O：将文件解开到标准输出</li><li>下面的参数-f是必须的</li><li>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。<h4 id="tar-cf-all-tar-jpg"><a href="#tar-cf-all-tar-jpg" class="headerlink" title="tar -cf all.tar *.jpg"></a>tar -cf all.tar *.jpg</h4></li></ul></li><li>这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。<h4 id="tar-rf-all-tar-gif"><a href="#tar-rf-all-tar-gif" class="headerlink" title="tar -rf all.tar *.gif"></a>tar -rf all.tar *.gif</h4></li><li>这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。<h4 id="tar-uf-all-tar-logo-gif"><a href="#tar-uf-all-tar-logo-gif" class="headerlink" title="tar -uf all.tar logo.gif"></a>tar -uf all.tar logo.gif</h4></li><li>这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。<h4 id="tar-tf-all-tar"><a href="#tar-tf-all-tar" class="headerlink" title="tar -tf all.tar"></a>tar -tf all.tar</h4></li><li>这条命令是列出all.tar包中所有文件，-t是列出文件的意思<h4 id="tar-xf-all-tar"><a href="#tar-xf-all-tar" class="headerlink" title="tar -xf all.tar"></a>tar -xf all.tar</h4></li><li>这条命令是解出all.tar包中所有文件，-x是解开的意思<h4 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h4><ul><li>tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg</li><li>tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</li><li>tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</li><li>tar –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</li><li>rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux</li><li>zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux</li></ul></li><li>解压<ul><li>tar –xvf file.tar //解压 tar包</li><li>tar -xzvf file.tar.gz //解压tar.gz</li><li>tar -xjvf file.tar.bz2 //解压 tar.bz2</li><li>tar –xZvf file.tar.Z //解压tar.Z</li><li>unrar e file.rar //解压rar</li><li>unzip file.zip //解压zip<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li></ul></li><li>1、*.tar 用 tar –xvf 解压</li><li>2、*.gz 用 gzip -d或者gunzip 解压</li><li>3、*.tar.gz和*.tgz 用 tar –xzf 解压</li><li>4、*.bz2 用 bzip2 -d或者用bunzip2 解压</li><li>5、*.tar.bz2用tar –xjf 解压</li><li>6、*.Z 用 uncompress 解压</li><li>7、*.tar.Z 用tar –xZf 解压</li><li>8、*.rar 用 unrar e解压</li><li>9、*.zip 用 unzip 解压<h2 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h2></li></ul><ul><li>mv</li><li>cp</li><li>apt-get</li><li>tail</li><li>head</li><li>cat</li><li>man</li><li>less</li><li>more</li><li>wc</li><li>ps aux</li><li>top</li><li>netstat</li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> tar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黎曼猜想</title>
      <link href="/2022/04/23/%E9%BB%8E%E6%9B%BC%E7%8C%9C%E6%83%B3-li-man-cai-xiang/"/>
      <url>/2022/04/23/%E9%BB%8E%E6%9B%BC%E7%8C%9C%E6%83%B3-li-man-cai-xiang/</url>
      
        <content type="html"><![CDATA[<h2 id="一、提出"><a href="#一、提出" class="headerlink" title="一、提出"></a>一、提出</h2><pre class="line-numbers language-none"><code class="language-none">1859年 黎曼提出&lt;&lt;论小于某值的素数个数&gt;&gt;欧拉：Π(x)≈x/lnX高斯：见插图<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/images/science/riemannconjecture.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> maths </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maths </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>呐喊的力量</title>
      <link href="/2022/04/23/%E5%91%90%E5%96%8A%E7%9A%84%E5%8A%9B%E9%87%8F-hover/"/>
      <url>/2022/04/23/%E5%91%90%E5%96%8A%E7%9A%84%E5%8A%9B%E9%87%8F-hover/</url>
      
        <content type="html"><![CDATA[<h1 id="呐喊的力量"><a href="#呐喊的力量" class="headerlink" title="呐喊的力量"></a>呐喊的力量</h1><h3 id="红眼睛和蓝眼睛"><a href="#红眼睛和蓝眼睛" class="headerlink" title="红眼睛和蓝眼睛"></a>红眼睛和蓝眼睛</h3><ul><li>案例：<ul><li>村里有100人,蓝眼睛95人,红眼睛5人.<br>外乡人:村里有红眼睛</li></ul></li><li>结果： 外乡人走后第五天,五个红眼睛人都自杀<h3 id="知识分类"><a href="#知识分类" class="headerlink" title="知识分类"></a>知识分类</h3></li><li>共有知识<ul><li>定义:大家都知道</li><li>例子：一个男孩和一个女孩互相暗恋</li></ul></li><li>公共知识<ul><li>定义(需满足下面两个条件)：<ul><li>大家都知道</li><li>大家都知道大家都知道</li></ul></li></ul></li><li>例子：皇帝的新装、男孩表白女孩<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3></li><li>未表白：共有知识</li><li>表白后：公共知识</li><li>共有知识变成公共知识需要经过讨论的过程,也就是呐喊的声音</li></ul>]]></content>
      
      
      <categories>
          
          <category> UniversalValue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 呐喊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人网站搭建</title>
      <link href="/2022/04/22/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA-ge-ren-wang-zhan-da-jian/"/>
      <url>/2022/04/22/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA-ge-ren-wang-zhan-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="个人网站搭建"><a href="#个人网站搭建" class="headerlink" title="个人网站搭建"></a>个人网站搭建</h2><h4 id="VPS服务器选擇"><a href="#VPS服务器选擇" class="headerlink" title="VPS服务器选擇"></a>VPS服务器选擇</h4><ul><li><p>CentOS7.6</p></li><li><p>外网ip</p></li><li><p>124.xxx.xxx</p></li><li><p>步骤</p></li><li><p>注意,SSH连接和远程工具连接两种方式不可以通用，是个大坑</p></li><li><p>SSH连接Linux实例</p></li><li><p>参照官方实例</p></li><li><p> 控制台生成密钥对</p></li><li><p> 保存私钥(只有一次机会下载)一份在本地</p></li><li><p> 连接方式参考官网（个人windows使用无效，必须私钥保存为别人不可见）</p></li><li><p>使用远程工具如xshell,putty连接 Linux实例</p></li><li><p>使用密码登录（需确认 /etc/ssh/sshd_config 中选项 PasswordAuthentication = yes   若 sshd_config 配置文件中无此配置项，则添加 PasswordAuthentication yes 项即可 接着使用命令sudo systemctl restart sshd）</p></li><li><p>开机密码</p><ul><li>your CVS initial pwd</li></ul></li></ul><ul><li>使用SSH密钥登陆</li><li>新建密钥并绑定实例</li><li>使用SSH密钥登录Linux实例</li><li>使用密码登录</li><li>使用密钥登录</li><li>cmd窗口输入如下命令<ul><li>icacls &lt;已下载的与实例关联的私钥文件的路径&gt; /grant &lt;Windows 系统用户帐户&gt;:F</li><li>icacls &lt;已下载的与实例关联的私钥文件的路径&gt; /inheritancelevel:r</li></ul></li></ul><h1 id="本机环境"><a href="#本机环境" class="headerlink" title="本机环境"></a>本机环境</h1><pre><code>icacls D:\tools\txcloud_crypt\txcloud_crypt /grant heyahui:Ficacls D:\tools\txcloud_crypt\txcloud_crypt /inheritancelevel:r</code></pre><ul><li>执行命令,连接远程实例<ul><li>ssh -i &lt;已下载的与实例关联的私钥文件的路径&gt; <username>@<ip address="" or="" domain="" name=""></ip></username></li></ul></li></ul><p>#本机演示 域名还咋申请中</p><ul><li>ssh -i D:\tools\txcloud_crypt\txcloud_crypt root@yourip</li></ul><h2 id="搭建Halo博客"><a href="#搭建Halo博客" class="headerlink" title="搭建Halo博客"></a>搭建Halo博客</h2><ul><li>docker run -it -d –name halo -p 8090:8090 -v ~/home/mydata/.halo:/root/.halo –restart=always  –halohub/halo:1.5.2</li><li>docker 安装 mysql </li><li>docker run –name some-mysql -v ~/.halo/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=xqawG3MFAFRq –net halo-net –restart=unless-stopped -d mysql:8.0.27</li><li>修改Mysql配置</li><li>spring:<ul><li>datasource:<ul><li>driver-class-name: com.mysql.cj.jdbc.Driver</li><li>url: jdbc:mysql://some-mysql:3306/halodb?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</li><li>username: root</li><li>password: yourpwd</li></ul></li></ul></li><li>xshell生成的公钥 上传到 Linux服务器 目录为 .ssh/authorized_keys</li><li>ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAzCDn8kTGxaDKP4e/Swd1jidm+2HmI4FP3+lhFh9x1Gj68MYuofhR8AKtEWmI/2cNUuHwPCF/Su6eIsdJxxqP425RpRNqOoAZcM4uFUkg9+2y+ASpu5TtyQ/wYKUH1wGZGUdhQhRcArvEuPodJG0VkSfGudgMEAjlwzj6PkZsmENJ2n7Nmom/SFfXxmrud0uE6t6WoF6RxLWY7d0PSDWSmQ9vCTDhusVHUywcyN05P7TnRGuWBFprzWl6V0D93rtKa5DdYP5NRI3FiFlvFZwTE3Pzn4zR8vjhbzictCIh6We9lkd9ljVoTnPQ==<h3 id="搭建云笔记"><a href="#搭建云笔记" class="headerlink" title="搭建云笔记"></a>搭建云笔记</h3></li><li>$&gt; mongorestore -h localhost -d leanote –dir /home/rudy/leanote/mongodb_backup/leanote_install_data/<ul><li>创建新的mongodb用户（可以不用操作这一步）</li><li>db.createUser(<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; user: “root”,<br>pwd: “root123”,<br>roles:[{role: “userAdminAnyDatabase” , db:”admin”}]})</li></ul></li></ul><ol><li>启动 leanotepath 下的 run.sh 脚本</li><li>  bash run.sh</li></ol>]]></content>
      
      
      <categories>
          
          <category> 服务器篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令-快速篇</title>
      <link href="/2022/04/22/linux/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-%E5%BF%AB%E9%80%9F%E7%AF%87-linux-chang-yong-ming-ling---kuai-su-pian/"/>
      <url>/2022/04/22/linux/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-%E5%BF%AB%E9%80%9F%E7%AF%87-linux-chang-yong-ming-ling---kuai-su-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h3 id="服务器搭建命令"><a href="#服务器搭建命令" class="headerlink" title="服务器搭建命令"></a>服务器搭建命令</h3><ul><li> tar </li><li> ls</li><li> df</li><li> netstat</li><li> firewalld</li><li> mv</li><li> cp</li><li> touch</li><li> vi</li><li> echo</li><li> grep</li><li> ps</li><li> lsof</li><li> yum</li><li> rz</li><li> systemctl</li><li> top</li><li> cat</li><li> more</li><li> less</li><li> man</li><li> iptables</li><li> kill</li><li> rm</li><li> mkdir </li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim五分钟就可以学起来</title>
      <link href="/2022/04/20/Vim%E4%BA%94%E5%88%86%E9%92%9F%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%AD%A6%E8%B5%B7%E6%9D%A5-vim%E5%85%A5%E9%97%A8/"/>
      <url>/2022/04/20/Vim%E4%BA%94%E5%88%86%E9%92%9F%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%AD%A6%E8%B5%B7%E6%9D%A5-vim%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>Vim 安装和配置、优化</p><ul><li>Vim 介绍</li><li><a href="http://www.vim.org/">Vim 官网</a></li><li>Vim 安装</li><li>CentOS：<code>sudo yum install -y vim</code></li><li>Ubuntu：<code>sudo apt-get install -y vim</code></li><li>Windows GVim 下载：<a href="http://www.xiazaiba.com/html/3347.html">http://www.xiazaiba.com/html/3347.html</a></li><li>Vim 配置（CentOS 环境）</li><li>编辑配置文件是：<code>sudo vim /etc/vimrc</code></li><li>Vim 基础快捷键</li><li>注意</li><li>严格区分字母大小写</li><li>含有&nbsp;Ctrl&nbsp;字眼都表示 Ctrl 键盘按钮</li><li>特定符号需要配合 <code>Shift</code> 键，比如字母键盘区上面的数字区：<code>!@#%%^&amp;*()</code></li><li>要按出冒号键&nbsp;:&nbsp;也是需要 Shift 的</li><li>移动<ul><li><code>j</code>，下</li><li><code>k</code>，上</li><li><code>h</code>，左</li><li><code>l</code>，右</li><li><code>v</code>，按 v 之后按方向键可以选中你要选中的文字</li><li><code>gg</code>，跳到第 1 行</li><li><code>G</code>，跳到最后一行</li><li><code>16G</code>&nbsp;或&nbsp;:16，跳到第 16 行</li><li><code>$</code>，到本行&nbsp;行尾</li><li><code>0</code>，到本行&nbsp;行头</li><li><code>w</code>，到下一个单词的&nbsp;开头</li><li><code>e</code>，到下一个单词的&nbsp;结尾</li><li><code>Ctrl + u</code>，向文件&nbsp;首翻&nbsp;半屏</li><li><code>Ctrl + d</code>，向文件&nbsp;尾翻&nbsp;半屏</li><li><code>Ctrl + f</code>，向文件&nbsp;尾翻&nbsp;一屏</li><li><code>Ctrl + b</code>，向文件&nbsp;首翻&nbsp;一屏</li><li><code>*</code>，匹配光标当前所在的单词，移动光标到&nbsp;下一个&nbsp;匹配单词</li><li><code>#</code>，匹配光标当前所在的单词，移动光标到&nbsp;上一个&nbsp;匹配单词</li><li><code>^</code>，到本行第一个单词头</li><li><code>g_</code>，到本行最后一个单词尾巴</li><li><code>%</code>，匹配括号移动，包括&nbsp;(、{、[</li></ul></li><li>插入<ul><li><code>I</code>，在当前&nbsp;行首&nbsp;插入</li><li><code>A</code>，在当前&nbsp;行尾&nbsp;插入</li><li><code>i</code>，在当前字符的&nbsp;左边&nbsp;插入</li><li><code>a</code>，在当前字符的&nbsp;右边&nbsp;插入</li><li><code>o</code>，在当前行&nbsp;下面&nbsp;插入一个新行</li><li><code>O</code>，在当前行&nbsp;上面&nbsp;插入一个新行</li></ul></li><li>编辑</li><li>删除<ul><li><code>x</code>，删除&nbsp;光标后&nbsp;的 1 个字符</li><li><code>2x</code>，删除&nbsp;光标后&nbsp;的 2 个字符</li><li><code>X</code>，删除&nbsp;光标前&nbsp;的 1 个字符</li><li><code>2X</code>，删除&nbsp;光标前&nbsp;的 2 个字符</li><li><code>dd</code>，删除当前行</li><li><code>cc</code>，删除当前行后进入 insert 模式</li><li><code>dw</code>，删除当前光标下的单词/空格</li><li><code>d$</code>，删除光标至&nbsp;行尾&nbsp;所有字符</li><li><code>dG</code>，删除光标至&nbsp;文件尾&nbsp;所有字符</li><li><code>3dd</code>，从当前光标开始，删掉 3 行</li><li><code>echo &gt; aa.txt</code>，从 <code>bash</code> 角度清空文件内容，这个比较高效</li></ul></li><li>复制<ul><li>y，复制光标所选字符</li><li>yw，复制光标后单词</li><li>yy，复制当前行</li><li>4yy，复制当前行及下面 4 行</li><li>y$，复制光标位置至&nbsp;行尾&nbsp;的内容</li><li>y^，复制光标位置至&nbsp;行首&nbsp;的内容</li></ul></li><li>粘贴<ul><li>p，将粘贴板中内容复制到&nbsp;光标之后</li><li>P，将粘贴板中内容复制到&nbsp;光标之前</li></ul></li><li>其他<ul><li><code>ddp</code>，交换当前光标所在行和下一行的位置</li><li><code>u</code>，撤销</li><li><code>:wq</code>，退出并&nbsp;保存</li><li><code>:q!</code>，退出并&nbsp;不保存</li><li><code>Ctrl + v</code>，进入 Vim 列编辑</li><li><code>guu</code>，把当前行的字母全部转换成&nbsp;小写</li><li><code>gUU</code>，把当前行的字母全部转换成&nbsp;大写</li><li><code>g~~</code>，把当前行的字母是大写的转换成小写，是小写的转换成大写</li><li><code>:saveas /opt/setups/text.txt</code>，另存到 <code>/opt/setups/text.txt</code></li></ul></li><li>搜索<ul><li><code>/YouMeek</code>，从光标开始处向文件尾搜索 <code>YouMeek</code> 字符，按&nbsp;<code>n</code>&nbsp;继续向下找，按&nbsp;<code>N</code>&nbsp;继续向上找</li><li><code>?YouMeek</code>，从光标开始处向文件首搜索 <code>YouMeek</code> 字符，按&nbsp;<code>n</code>&nbsp;继续向下找，按&nbsp;<code>N</code>&nbsp;继续向上找</li></ul></li><li>替换<ul><li><code>:%s/YouMeek/Judasn/g</code>，把文件中所有 <code>YouMeek</code> 替换为：<code>Judasn</code></li><li><code>:%s/YouMeek/Judasn/</code>，把文件中所有行中第一个 <code>YouMeek</code> 替换为：<code>Judasn</code></li><li><code>:s/YouMeek/Judasn/</code>，把光标当前行第一个 <code>YouMeek </code>替换为 <code>Judasn</code></li><li><code>:s/YouMeek/Judasn/g</code>，把光标当前行所有 <code>YouMeek</code> 替换为 <code>Judasn</code></li><li><code>:s#YouMeek/#Judasn/#</code>，除了使用斜杠作为分隔符之外，还可以使用 <code># </code>作为分隔符，此时中间出现的 <code>/</code> 不会作为分隔符，该命令表示：把光标当前行第一个 <code>YouMeek/</code> 替换为 <code>Judasn/</code></li><li><code>:10,31s/YouMeek/Judasn/g</code>，把第 10 行到 31 行之间所有 <code>YouMeek</code> 替换为 <code>Judasn</code></li></ul></li><li>Vim 的特殊复制、黏贴</li><li><code>Vim</code> 提供了 12 个剪贴板，分别是：<code>0,1,2,3,4,5,6,7,8,9,a,"</code>，默认采用的是<code>&nbsp;"</code>，也就是双引号，可能你初读感觉很奇怪。你可以用 Vim 编辑某个文件，然后输入<code>:reg</code>。你可以看到如下内容：</li><li>复制到某个剪切板的命令：<code>"7y</code>，表示使用 7 号剪切板。</li><li>黏贴某个剪切板内容：<code>"7p</code>，表示使用 7 号剪切板内容进行黏贴</li><li><code>Vim</code> 配置</li><li>我个人本地不使用 Vim 的，基本上都是在操作服务器的时候使用，所以这里推荐这个配置文件</li><li><code>vim-for-server</code></li><li>在假设你已经备份好你的 Vim 配置文件后，使用该配置文件：</li><li><code>curl https://raw.githubusercontent.com/wklken/vim-for-server/master/vimrc &gt; ~/.vimrc</code></li><li>效果如下：</li><li>需要特别注意的是，如果你平时粘贴内容到终端 Vim 出现缩进错乱，一般需要这样做：</li><li>进入 <code>vim</code> 后，按&nbsp;<code>F5</code>，然后&nbsp;<code>shift + insert</code>&nbsp;进行粘贴。这种事就不会错乱了。</li><li>原因是：vim ~/.vimrc&nbsp;中有一行这样的设置：set pastetoggle=<f5></f5></li><li>其他常用命令</li><li>对两个文件进行对比：<code>vimdiff /opt/1.txt /opt/2.txt</code></li><li>资料</li><li>vim几个小技巧（批量替换，列编辑）</li><li>最佳vim技巧</li><li>简明 Vim 练级攻略    </li><li>vim 批量查找替换</li><li>参考内容: 博客地址</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> toolkit </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络协议学习笔记—01</title>
      <link href="/0202/05/09/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/"/>
      <url>/0202/05/09/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/</url>
      
        <content type="html"><![CDATA[<h1 id="底层网络知识详解从二层到三层"><a href="#底层网络知识详解从二层到三层" class="headerlink" title="底层网络知识详解从二层到三层"></a>底层网络知识详解从二层到三层</h1><h1 id="从物理层到MAC层"><a href="#从物理层到MAC层" class="headerlink" title="从物理层到MAC层"></a>从物理层到MAC层</h1><h3 id="第一层-物理层"><a href="#第一层-物理层" class="headerlink" title="第一层(==物理层==)"></a>第一层(==物理层==)</h3><h3 id="第二层-数据链路层"><a href="#第二层-数据链路层" class="headerlink" title="第二层(==数据链路层==)"></a>第二层(==数据链路层==)</h3><ul><li><p>问题</p><ol><li>这个包是发给谁的？谁应该接收？</li><li>大家都在发，会不会产生混乱？有没有谁先发、谁后发的规则？</li><li>如果发送的时候出现了错误，怎么办？</li></ol></li><li><p>数据链路层(又称作MAC层)</p><ul><li><strong>MAC</strong> : Medium Access Control 媒体访问控制</li></ul></li></ul><blockquote><p>媒体访问控制。控制什么呢？其实就是控制在往媒体上发数据的时候，谁先发、谁后发的问题。防止发生混乱。这解决的是第二个问题。这个问题中的规则，学名叫多路访问。</p></blockquote><ul><li>多路访问<ul><li>信道划分</li><li>轮流协议</li><li>随机接入协议</li></ul></li><li>链路层地址(通常称为MAC地址)<ul><li>网格包格式<ul><li>对于以太网来说,第二层的最开始为目标的MAC地址和源的MAC地址</li></ul></li></ul></li></ul><table><thead><tr><th>目标MAC</th><th>源MAC</th><th>类型</th><th>数据</th><th>CRC</th></tr></thead><tbody><tr><td>6bytes</td><td>6bytes</td><td>2bytes</td><td>(46-1500bytes)</td><td>4bytes</td></tr></tbody></table><ul><li><p>类型</p><ul><li>类型0800：IP数据包<ul><li>IP 里面包含 TCP、UDP，以及 HTTP 等，这都是里层封装的事情。</li></ul></li><li>类型0860：ARP请求,应答</li></ul></li><li><p>CRC(循环冗余检测)</p><ul><li>通过 XOR 异或的算法，来计算整个包是否在发送的过程中出现了错误，主要解决第三个问题。    </li></ul></li><li><p>ARP协议</p><ul><li>概念：已知 IP 地址，求 MAC 地址的协议。</li></ul></li></ul><blockquote><p>在一个局域网里,当知道了IP地址而不知道MAC地址该怎么做？靠吼</p><p>广而告之,发送一个数据包,谁是目标IP谁来回答</p></blockquote><ul><li>具体请求回答报文格式如下    </li></ul><img src="https://javacoldly.xyz/upload/2022/05/ARP%E6%8A%A5%E6%96%87.png" alt="ARP报文"><blockquote><p>为了避免每次都用 ARP 请求，机器本地也会进行 ARP 缓存。当然机器会不断地上线下线，IP 也可能会变，所以 ARP 的 MAC 地址缓存过一段时间就会过期。</p></blockquote><h1 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h1><ul><li>交换机<ul><li>功能：知道目标 MAC 地址是连接某个口的电脑的 MAC 地址</li></ul></li></ul><blockquote><p>一台 MAC1 电脑将一个包发送给另一台 MAC2 电脑，当这个包到达交换机的时候，一开始交换机也不知道 MAC2 的电脑在哪个口，</p><p>所以没办法，它只能将包转发给除了来的那个口之外的其他所有的口。就是交换机会记住，</p><p>MAC1 是来自一个明确的口。以后有包的目的地址是 MAC1 的，直接发送到这个口就可以了。</p><p>总结：我不知道你找谁,但是我知道你是谁,以后也知道怎么找到你</p></blockquote><ul><li>转换表</li></ul><blockquote><p>当交换机作为一个关卡一样，过了一段时间之后，就有了整个网络的一个结构了，这个时候，基本上不用广播了，全部可以准确转发。当然，每个机器的 IP 地址会变，所在的口也会变，因而交换机上的学习的结果，我们称为转发表，是有一个过期时间的。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>MAC 层是用来解决多路访问的堵车问题的；</li><li>ARP 是通过吼的方式来寻找目标 MAC 地址的，吼完之后记住一段时间，这个叫作缓存；</li><li>交换机是有 MAC 地址学习能力的，学完了它就知道谁在哪儿了，不用广播了。</li></ul><blockquote><p> 问题:</p><p>1.在二层中我们讲了 ARP 协议，即已知 IP 地址求 MAC；还有一种 RARP 协议，即已知 MAC 求 IP 的，你知道它可以用来干什么吗？</p><p>2.如果一个局域网里面有多个交换机，ARP 广播的模式会出现什么问题呢？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络协议学习笔记-02</title>
      <link href="/0202/05/09/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_03/"/>
      <url>/0202/05/09/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_03/</url>
      
        <content type="html"><![CDATA[<h1 id="ICMP与ping"><a href="#ICMP与ping" class="headerlink" title="ICMP与ping"></a>ICMP与ping</h1><h1 id="ICMP-协议的格式"><a href="#ICMP-协议的格式" class="headerlink" title="ICMP 协议的格式"></a>ICMP 协议的格式</h1><ul><li>ICMP<ul><li>ICMP 全称 Internet Control Message Protocol</li><li>ICMP 报文是封装在 IP 包里面的。</li><li>ICMP 报文有很多的类型，不同的类型有不同的代码。最常用的类型是主动请求为 8，主动请求的应答为 0。</li></ul></li></ul><blockquote><p>ping 是基于 ICMP 协议工作的。ICMP 全称 Internet Control Message Protocol，就是互联网控制报文协议。</p></blockquote><ul><li>查询报文类型    <ul><li>ping 就是查询报文，是一种主动请求，并且获得主动应答的 ICMP 协议</li><li>ping 发的包也是符合 ICMP 协议格式的，只不过它在后面增加了自己的格式</li><li>ICMP ECHO REQUEST<ul><li>对 ping 的主动请求，进行网络抓包</li></ul></li><li>ICMP ECHO REPLY</li></ul></li><li>差错报文类型<ul><li>针对出现异常情况<ul><li>比如：终点不可达为 3，源抑制为 4，超时为 11，重定向为 5</li></ul></li><li>差错报文返回代码分析</li><li>终点不可达<ul><li>网络不可达：主公，找不到地方呀？主机不可达：主公，找到地方没这个人呀？</li><li>协议不可达：主公，找到地方，找到人，口号没对上，人家天王盖地虎，我说 12345！</li><li>端口不可达：主公，找到地方，找到人，对了口号，事儿没对上，我去送粮草，人家说他们在等救兵。</li><li>需要进行分片但设置了不分片位：主公，走到一半，山路狭窄，想换小车，但是您的将令，严禁换小车，就没办法送到了。</li></ul></li><li>源站抑制<ul><li>也就是让源站放慢发送速度。小兵：报告主公，您粮草送的太多了吃不完。</li></ul></li><li>时间超时<ul><li>也就是超过网络包的生存时间还是没到。小兵：报告主公，送粮草的人，自己把粮草吃完了，还没找到地方，已经饿死啦。</li></ul></li><li>路由重定向<ul><li>也就是让下次发给另一个路由器。小兵：报告主公，上次送粮草的人本来只要走一站地铁，非得从五环绕，下次别这样了啊。</li></ul></li><li>差错报文的结构相对复杂一些。除了前面还是 IP，ICMP 的前 8 字节不变，后面则跟上出错的那个 IP 包的 IP 头和 IP 正文的前 8 个字节。</li></ul></li><li>ping<ul><li>ping 这个程序是使用了 ICMP 里面的 ECHO REQUEST 和 ECHO REPLY 类型的。</li><li>使用的是查询报文</li><li>查询类型的使用<ul><li>ping的发送和接受过程</li></ul></li></ul></li></ul><p><img src="C:\Users\heyahui\Pictures\computerknowledge\网络协议\image-20220509173736747.png" alt="image-20220509173736747"></p><ul><li>Traceroute<ul><li>类型属于差错报文</li><li>作用</li></ul></li><li>故意设置特殊的 TTL，来追踪去往目的地时沿途经过的路由器</li></ul><blockquote><p>Traceroute 的参数指向某个目的 IP 地址，它会发送一个 UDP 的数据包。将 TTL 设置成 1，也就是说一旦遇到一个路由器或者一个关卡，就表示它“牺牲”了。</p></blockquote><p>​        </p><ul><li>故意设置不分片，从而确定路径的 MTU[^1]</li></ul><blockquote><p>要做的工作首先是发送分组，并设置“不分片”标志。发送的第一个分组的长度正好与出口 MTU 相等。如果中间遇到窄的关口会被卡住，会发送 ICMP 网络差错包，类型为“需要进行分片但设置了不分片位”。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>ICMP 相当于网络世界的侦察兵。我讲了两种类型的 ICMP 报文，一种是主动探查的查询报文，一种异常报告的差错报文；</li><li>ping 使用查询报文，Traceroute 使用差错报文。</li></ul><h1 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h1><ul><li>当发送的报文出问题的时候，会发送一个 ICMP 的差错报文来报告错误，但是如果 ICMP 的差错报文也出问题了呢？</li><li>这一节只说了一个局域网互相 ping 的情况。如果跨路由器、跨网关的过程会是什么样的呢？</li></ul><hr><p>[^1]: 【维基百科】MTU：最大传输单元 (Maximum transmission unit) ； 最大传输单元是指数据链路层上面所能通过的最大数据包大小。最大传输单元这个参数通常与通信接口有关。 因特网协议允许IP分片，这样就可以将数据报包分成足够小的片段以通过那些最大传输单元小于该数据报原始大小的链路了。这一分片过程发生在IP层，它使用的是将分组发送到链路上的网络接口的最大传输单元的值。</p>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络协议学习笔记-02</title>
      <link href="/0202/05/09/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02/"/>
      <url>/0202/05/09/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02/</url>
      
        <content type="html"><![CDATA[<h1 id="交换机与VLAN"><a href="#交换机与VLAN" class="headerlink" title="交换机与VLAN"></a>交换机与VLAN</h1><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><blockquote><p>宿舍只需要一台交换机就可以组建一个局域网,如果变成办公室,多台交换机如何连接多个局域网？</p></blockquote><ul><li>拓扑结构<ul><li>如下图所示：两台交换机三个局域网的案例</li></ul></li></ul><img src="https://javacoldly.xyz/upload/2022/05/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%8B%93%E6%89%91%E5%9B%BE.webp" alt="交换机拓扑图" style="zoom: 33%;"><ul><li>说明</li></ul><blockquote><p>当机器 2 要访问机器 1 的时候，机器 2 并不知道机器 1 的 MAC 地址，所以机器 2 会发送一个数据包请求。这个广播消息会到达机器 1，也同时会到达交换机 A。这个时候交换机 A 已经知道机器 1 是不可能在右边的网口的，所以这个广播信息就不会广播到局域网二和局域网三。</p></blockquote><h1 id="如何解决常见的环路问题？"><a href="#如何解决常见的环路问题？" class="headerlink" title="如何解决常见的环路问题？"></a>如何解决常见的环路问题？</h1><ul><li>问题介绍</li></ul><img src="https://javacoldly.xyz/upload/2022/05/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%8E%AF%E8%B7%AF.webp" alt="image" style="zoom:67%;"><blockquote><p>我们来想象一下机器 1 访问机器 2 的过程。一开始，机器 1 并不知道机器 2 的 MAC 地址，所以它需要发起一个 ARP 的广播。广播到达机器 2，机器 2 会把 MAC 地址返回来，看起来没有这两个交换机什么事情。</p><p>但是问题来了，这两个交换机还是都能够收到广播包的。交换机 A 一开始是不知道机器 2 在哪个局域网的，所以它会把广播消息放到局域网二，在局域网二广播的时候，交换机 B 右边这个网口也是能够收到广播消息的。交换机 B 会将这个广播信息发送到局域网一。局域网一的这个广播消息，又会到达交换机 A 左边的这个接口。交换机 A 这个时候还是不知道机器 2 在哪个局域网，于是将广播包又转发到局域网二。左转左转左转，好像是个圈哦。</p><p>可能有人会说，当两台交换机都能够逐渐学习到拓扑结构之后，是不是就可以了？别想了，压根儿学不会的。</p><p>机器 1 的广播包到达交换机 A 和交换机 B 的时候，本来两个交换机都学会了机器 1 是在局域网一的，但是当交换机 A 将包广播到局域网二之后，交换机 B 右边的网口收到了来自交换机 A 的广播包。根据学习机制，这彻底损坏了交换机 B 的三观，刚才机器 1 还在左边的网口呢，怎么又出现在右边的网口呢？哦，那肯定是机器 1 换位置了，于是就误会了，交换机 B 就学会了，机器 1 是从右边这个网口来的，把刚才学习的那一条清理掉。同理，交换机 A 右边的网口，也能收到交换机 B 转发过来的广播包，同样也误会了，于是也学会了，机器 1 从右边的网口来，不是从左边的网口来。</p><p>然而当广播包从左边的局域网一广播的时候，两个交换机再次刷新三观，原来机器 1 是在左边的，过一会儿，又发现不对，是在右边的，过一会，又发现不对，是在左边的。</p><p>这还是一个包转来转去，每台机器都会发广播包，交换机转发也会复制广播包，当广播包越来越多的时候，按照上一节讲过一个共享道路的算法，也就是路会越来越堵，最后谁也别想走。所以，必须有一个方法解决环路的问题，怎么破除环路呢？</p></blockquote><ul><li>解决方法<ul><li>STP协议</li></ul></li></ul><blockquote><p>在数据结构中，有一个方法叫做最小生成树。有环的我们常称为图。将图中的环破了，就生成了树。在计算机网络中，生成树的算法叫作 STP，全称 Spanning Tree Protocol。</p></blockquote><img src="https://javacoldly.xyz/upload/2022/05/47baa69073b38357e0ae3f88ff74dd23.webp" alt="47baa69073b38357e0ae3f88ff74dd23" style="zoom: 25%;"><h1 id="STP-协议中那些难以理解的概念"><a href="#STP-协议中那些难以理解的概念" class="headerlink" title="STP 协议中那些难以理解的概念"></a>STP 协议中那些难以理解的概念</h1><ul><li><strong>Root Bridge</strong>，也就是根交换机。这个比较容易理解，可以比喻为“掌门”交换机，是某棵树的老大，是掌门，最大的大哥。</li><li><strong>Designated Bridges</strong>，有的翻译为指定交换机。这个比较难理解，可以想像成一个“小弟”，对于树来说，就是一棵树的树枝。所谓“指定”的意思是，我拜谁做大哥，其他交换机通过这个交换机到达根交换机，也就相当于拜他做了大哥。这里注意是树枝，不是叶子，因为叶子往往是主机。</li><li><strong>Bridge Protocol Data Units</strong> （BPDU） ，网桥协议数据单元。可以比喻为“相互比较实力”的协议。行走江湖，比的就是武功，拼的就是实力。当两个交换机碰见的时候，也就是相连的时候，就需要互相比一比内力了。BPDU 只有掌门能发，已经隶属于某个掌门的交换机只能传达掌门的指示。</li><li><strong>Priority Vector</strong>，优先级向量。可以比喻为实力 （值越小越牛）。实力是啥？就是一组 ID 数目，[Root Bridge ID, Root Path Cost, Bridge ID, and Port ID]。为什么这样设计呢？这是因为要看怎么来比实力。先看 Root Bridge ID。拿出老大的 ID 看看，发现掌门一样，那就是师兄弟；再比 Root Path Cost，也即我距离我的老大的距离，也就是拿和掌门关系比，看同一个门派内谁和老大关系铁；最后比 Bridge ID，比我自己的 ID，拿自己的本事比。</li></ul><h1 id="如何解决广播问题和安全问题？"><a href="#如何解决广播问题和安全问题？" class="headerlink" title="如何解决广播问题和安全问题？"></a>如何解决广播问题和安全问题？</h1><ul><li>物理隔离<ul><li>每个单独的交换机之间沟通需要路由器来解决</li></ul></li><li>虚拟隔离(==VLAN==)</li></ul><blockquote><p>交换机怎么区分哪个机器属于哪个局域网呢？</p></blockquote><img src="https://javacoldly.xyz//upload/2022/05/ba720f6988558f95c381f4deaab11660.webp" alt="ba720f6988558f95c381f4deaab11660" style="zoom:33%;"><ul><li>我们只需要在原来的二层的头上加一个 TAG，里面有一个 VLAN ID，一共 12 位。为什么是 12 位呢？因为 12 位可以划分 4096 个 VLAN。</li><li>交换机工作方式</li></ul><blockquote><p>交换机把二层的头取下来的时候，就能够识别这个 VLAN ID。这样只有相同 VLAN 的包，才会互相转发，不同 VLAN 的包，是看不到的。</p><p>工作机制如下图所示：</p></blockquote><img src="https://javacoldly.xyz//upload/2022/05/5c207a6e2c1c9881823b04e648f4ba4a.webp" alt="5c207a6e2c1c9881823b04e648f4ba4a" style="zoom:33%;"><ul><li>交换机之间是如何连接的？<ul><li>对于支持 VLAN 的交换机，有一种口叫作 Trunk 口。它可以转发属于任何 VLAN 的口。交换机之间可以通过这种口相互连接。</li></ul></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>当交换机的数目越来越多的时候，会遭遇环路问题，让网络包迷路，这就需要使用 STP 协议，通过华山论剑比武的方式，将有环路的图变成没有环路的树，从而解决环路问题。</li><li>交换机数目多会面临隔离问题，可以通过 VLAN 形成虚拟局域网，从而解决广播问题和安全问题。</li></ul><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ul><li>STP 协议能够很好地解决环路问题，但是也有它的缺点，你能举几个例子吗？</li><li>在一个比较大的网络中，如果两台机器不通，你知道应该用什么方式调试吗？<ul><li>ping</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
